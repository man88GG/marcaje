[{"C:\\Users\\agarcia\\marcaje\\cliente\\src\\index.js":"1","C:\\Users\\agarcia\\marcaje\\cliente\\src\\reportWebVitals.js":"2","C:\\Users\\agarcia\\marcaje\\cliente\\src\\App.js":"3","C:\\Users\\agarcia\\marcaje\\cliente\\src\\componentes\\Reloj.js":"4","C:\\Users\\agarcia\\marcaje\\cliente\\src\\componentes\\Detectar_Click.js":"5"},{"size":521,"mtime":1646686949929,"results":"6","hashOfConfig":"7"},{"size":375,"mtime":1646686949929,"results":"8","hashOfConfig":"7"},{"size":11651,"mtime":1647901008008,"results":"9","hashOfConfig":"7"},{"size":955,"mtime":1647901538725,"results":"10","hashOfConfig":"7"},{"size":916,"mtime":1644428310773,"results":"11","hashOfConfig":"12"},{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2yvu7k",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"4wiv19","C:\\Users\\agarcia\\marcaje\\cliente\\src\\index.js",[],[],"C:\\Users\\agarcia\\marcaje\\cliente\\src\\reportWebVitals.js",[],[],"C:\\Users\\agarcia\\marcaje\\cliente\\src\\App.js",["31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47"],[],"import React, {Component,useEffect, useRef, useState} from 'react';\r\nimport logo from './img/logo.jpg';\r\nimport Reloj from './componentes/Reloj';\r\nimport Axios from 'axios'\r\nimport './css/App.css';\r\nimport { findAllByTestId } from '@testing-library/react';\r\n\r\n\r\n//hay un retraso de 30 seg al marcar con el lector\r\n//ver como obtener los valores al realizar la busqueda la primera vez\r\n\r\n\r\n//buscar fecha actual\r\n//si no hay la inserta y busca empleado (o se llama a si misma la funcion)\r\n//si hay nomas busca empleado\r\n//si no existe empleado, mostrar mensaje que no existe\r\n// si existe, comparar los nulls de las fechas para saber donde insertar\r\n\r\n\r\nconst date = new Date();\r\n\r\nfunction App (){\r\n\r\nconst[mensajeNombre, setMensajeNombre] =useState(\"\");\r\nconst[mensajeApellido, setMensajeApellido] =useState(\"\");\r\nconst[mensajeHoraEnt, setMensajeHoraEnt] =useState(\"\");\r\nconst[mensajeHoraSal, setMensajeHoraSal] =useState(\"\");\r\nconst[mensajeHoraEntAlm, setMensajeHoraEntAlm] =useState(\"\");\r\nconst[mensajeHoraSalAlm, setMensajeHoraSalAlm] =useState(\"\");\r\nconst[controlador1, setControlador1]=useState(\"\");\r\nconst[controlador2, setControlador2]=useState(\"\");\r\nconst[controlador3, setControlador3]=useState(\"\");\r\nconst[controlador4, setControlador4]=useState(\"\");\r\nconst[controlador5, setControlador5]=useState(\"\");\r\nconst total_horas =0;\r\n\r\nconst[mensajeBorrar, setMensajeBorrar] =useState([]);\r\n\r\n  //////\r\n  const [state, setState] = useState('');\r\n    \r\n\r\n  const captura = (event) => {\r\n    \r\n    //condicion para la busqueda e ingreso de datos cuando el lector manda la señal\r\n    if(event.key==='Enter'){\r\n      \r\n    //se cambia el estado al nombre de la tecla que es presionada, en este caso es la tecla enter\r\n      setState(event.key);\r\n      //se llama a la funcion \r\n      BusquedaEmpleado();\r\n      \r\n    }\r\n    \r\n  };\r\n////////\r\n\r\n//se declaran variables para envío de datos del MVC\r\nconst [codigo_barra, setCodigo_Barra] = useState(\"\");\r\n\r\n//Se obtiene la fecha actual y se divide en fragmentos para mostrar en el diseño luego\r\n/////\r\nconst [clockState, setClockState] = useState();\r\n\r\nuseEffect (()=>{ \r\n    setInterval(() => {\r\n      const date = new Date();\r\n      setClockState(date.toLocaleTimeString());\r\n    }, 1000);\r\n  }, []);\r\n/////\r\n\r\n \r\n//hace focus al texbox que obtendrá la variable del codigo barras\r\nconst focusDiv = useRef(null);\r\nuseEffect(()=>{\r\n  const focusPermanente = setInterval (()=>{\r\n    //selecciona el texto del input \r\n    focusDiv.current.blur();\r\n    if(focusDiv.current)focusDiv.current.focus();\r\n  },500);\r\n  return()=>clearInterval(focusPermanente);\r\n},[focusDiv]);\r\n\r\n\r\n//seleccionar todo el contenido \r\nconst handleFocus = (event) => event.target.select();\r\n\r\nconst HandlerOne=(e)=>{\r\n  // e.preventDefault();\r\n   setControlador1('Inicia Request al Backend');\r\n setTimeout(()=>{\r\n   setControlador1('1')\r\n },1000)\r\n }\r\n useEffect(()=>{\r\n  if(controlador1 === '1'){\r\n    ingresoDatos(codigo_barra);\r\n    \r\n  }\r\n},[controlador1])\r\n\r\nconst HandlerTwo=(e)=>{\r\n  // e.preventDefault();\r\n   setControlador2('Inicia Request al Backend');\r\n setTimeout(()=>{\r\n   setControlador2('2')\r\n },1000)\r\n }\r\n useEffect(()=>{\r\n   if(controlador2 === '2'){\r\n     ActualizarDatosHraSalidaAlm(codigo_barra);\r\n     \r\n   }\r\n },[controlador2])\r\n\r\n\r\n const HandlerThree=(e)=>{\r\n  //e.preventDefault();\r\n  setControlador3('Inicia Request al Backend');\r\nsetTimeout(()=>{\r\n  setControlador3('3')\r\n\r\n},1000)\r\n}\r\nuseEffect(()=>{\r\n  if(controlador3 === '3'){\r\n    ActualizarDatosHraEntradaAlm(codigo_barra);\r\n  \r\n    \r\n  }\r\n},[controlador3])\r\n\r\n\r\nconst HandlerFour=(e)=>{\r\n // e.preventDefault();\r\n  setControlador4('Inicia Request al Backend');\r\nsetTimeout(()=>{\r\n  setControlador4('4')\r\n},1000)\r\n}\r\nuseEffect(()=>{\r\n  if(controlador4 === '4'){\r\n    ActualizarDatosHraSalida(codigo_barra);\r\n\r\n  }\r\n},[controlador4])\r\n\r\nconst HandlerFive=(e)=>{\r\n  // e.preventDefault();\r\n   setControlador5('Inicia Request al Backend');\r\n setTimeout(()=>{\r\n   setControlador5('5')\r\n },1500)\r\n }\r\n useEffect(()=>{\r\n   if(controlador5 === '5'){\r\n    //document.getElementById(\"myForm\").reset();\r\n\r\n     window.location.href = window.location.href;\r\n   }\r\n },[controlador5])\r\n\r\n//insertar datos\r\nconst ingresoDatos =()=>{\r\n  Axios.post('http://localhost:3001/DatosMarcajeEmpleado', {    \r\n    codigo_barra: codigo_barra,\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n    //se llama a la fecha \r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n}).then(()=>{\r\n\r\nconsole.log(date.toLocaleString());\r\nconsole.log(\"conexion exitosa\");\r\nconsole.log(\"hora:\");\r\nconsole.log(date.toLocaleTimeString());\r\nconsole.log(date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear());\r\n//refresca la pagina para liberar el cargado de memoria de las variables usadas\r\nwindow.location.href = window.location.href;\r\n  });\r\n};\r\n//\r\n\r\n\r\n//insertar datos\r\nconst Bitacora =()=>{\r\n  Axios.post('http://localhost:3001/bitacora', {    \r\n    codigo_barra: codigo_barra,\r\n    //se llama a la fecha y obtiene solamente la hora\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n}).then(()=>{\r\n\r\n  });\r\n};\r\n//\r\n\r\n\r\n//\r\nconst ActualizarDatosHraSalidaAlm = (codigo_barra)=>{\r\n\r\n  Axios.put('http://localhost:3001/actualizarHraSalidaAlm',{\r\n    codigo_barra:codigo_barra,\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n  \r\n  }).then(()=>{\r\n    window.location.href = window.location.href;\r\n    \r\n  });  \r\n};\r\n\r\nconst ActualizarDatosHraEntradaAlm = (codigo_barra)=>{\r\n\r\n  Axios.put('http://localhost:3001/actualizarHraEntradaAlm',{\r\n    codigo_barra:codigo_barra,\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n\r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n\r\n  }).then(()=>{\r\n    window.location.href = window.location.href;\r\n    \r\n  \r\n  });  \r\n};\r\n\r\nconst ActualizarDatosHraSalida = (codigo_barra)=>{\r\n\r\n  Axios.put('http://localhost:3001/actualizarHraSalida',{\r\n    codigo_barra:codigo_barra,\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n\r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n\r\n  }).then(()=>{\r\n    window.location.href = window.location.href;\r\n    \r\n  });  \r\n};\r\n//\r\n\r\n//buscar datos\r\nconst BusquedaEmpleado = () => {\r\n  Axios.post('http://localhost:3001/buscarEmpleado',{\r\n    codigo_barra:codigo_barra,\r\n\r\n}).then((response)=>{\r\n\r\n    if(response.data.message){\r\n        //muestra mensaje de Empleado no encontrado\r\n        setMensajeNombre(response.data.message)\r\n        setMensajeApellido(\"\")\r\n        HandlerFive();\r\n       }else{\r\n\r\n        BuscarFechaActual();\r\n        setMensajeNombre(response.data[0].nombre)\r\n        setMensajeApellido(response.data[0].apellido)\r\n       }\r\n\r\n       });\r\n    };\r\n//\r\n\r\n//buscar datos\r\nconst BuscarFechaActual = () => {\r\n    Axios.post('http://localhost:3001/buscarFecha',{\r\n        codigo_barra:codigo_barra,\r\n        dia_marcaje: date.getDate(),\r\n        mes_marcaje: (date.getMonth()+1),\r\n        periodo_marcaje: date.getFullYear(),\r\n\r\n  }).then((response)=>{\r\n  \r\n    if(response.data.message){\r\n    \r\n        //Se inserta Hora Entrada\r\n        console.log(\"Ingreso Marcaje: 0\");\r\n        HandlerOne();\r\n        Bitacora();\r\n        \r\n\r\n       }else{\r\n\r\n          // setMensajeNombre(response.data[0].hra_entrada);\r\n         /////\r\n            setMensajeHoraEnt(response.data[0].hra_entrada)\r\n            setMensajeHoraSalAlm(response.data[0].hra_salida_alm)\r\n            setMensajeHoraEntAlm(response.data[0].hra_entrada_alm)\r\n            setMensajeHoraSal(response.data[0].hra_salida)\r\n            \r\n       \r\n           if (mensajeHoraEnt != null && mensajeHoraSalAlm == null && mensajeHoraEntAlm == null && mensajeHoraSal == null){\r\n         console.log(\"Ingreso mensaje hora Salida Almuerzo: 1\");\r\n         HandlerTwo();\r\n             Bitacora();\r\n         }else{\r\n           if(mensajeHoraEnt != null && mensajeHoraSalAlm != null && mensajeHoraEntAlm == null && mensajeHoraSal == null){\r\n             console.log(\"Ingreso mensaje hora Entrada Almuerzo: 2\");\r\n             HandlerThree();\r\n             //ActualizarDatosHraEntradaAlm(codigo_barra);\r\n             Bitacora();\r\n         }else{\r\n           if(mensajeHoraEnt != null && mensajeHoraSalAlm != null && mensajeHoraEntAlm != null && mensajeHoraSal == null){\r\n             console.log(\"Ingreso mensaje hora Salida: 3\");\r\n         HandlerFour();\r\n             //ActualizarDatosHraSalida(codigo_barra);\r\n             //CalculoTiempoDiario();\r\n             Bitacora();\r\n             console.log(\"Marcajes posibles realizados\");\r\n             }else{\r\n               if(mensajeHoraEnt != null && mensajeHoraSalAlm != null && mensajeHoraEntAlm != null && mensajeHoraSal != null){\r\n                 \r\n                 //setMensajeNombre(\"Ya se han realizado todos los marcajes del día\")\r\n                 //setMensajeApellido(\"\")\r\n                 HandlerFive();\r\n                 CalculoTiempoDiario();\r\n                 console.log(mensajeHoraEnt);\r\n                 console.log(mensajeHoraSal);\r\n            \r\n               }else{\r\n                 console.log(\"El empleado ha realizado un marcaje erróneo \");\r\n                 \r\n               }\r\n             }\r\n           }\r\n         }\r\n         \r\n             if(mensajeNombre === null){\r\n             console.log(\"obtiene dato NULL\");\r\n             }else{\r\n             console.log(\"valor\");\r\n            \r\n             }\r\n \r\n          }\r\n        \r\n    });\r\n  };\r\n  //\r\n\r\n\r\n\r\n//\r\nconst CalculoTiempoDiario =()=>{\r\n\r\n  console.log(\"Hora E: \" + mensajeHoraEnt);\r\n  console.log(\"Hora S: \" + mensajeHoraSal);\r\n  var p1 = (mensajeHoraSal);\r\n  var p2 = (mensajeHoraEnt);\r\n  var hora1 = (p1).split(\":\"),\r\n      hora2 = (p2).split(\":\"),\r\n      t1 = new Date(),\r\n      t2 = new Date();\r\n//Se establecen en arreglos los 3 parametros\r\nt1.setHours(hora1[0], hora1[1], hora1[2]);\r\nt2.setHours(hora2[0], hora2[1], hora2[2]);\r\n//Calculo de tiempo laborado diariamente\r\nt1.setHours(t1.getHours() - t2.getHours(), t1.getMinutes() - t2.getMinutes(), t1.getSeconds() - t2.getSeconds());\r\n//Mensaje de total de Horas\r\nconsole.log(\"Total de Tiempo Laborado el día de hoy: \" + (t1.getHours() ? t1.getHours() + (t1.getHours() > 1 ? \" horas\" : \" hora\") : \"\") + (t1.getMinutes() ? \", \" + t1.getMinutes() + (t1.getMinutes() > 1 ? \" minutos\" : \" minuto\") : \"\") + (t1.getSeconds() ? (t1.getHours() || t1.getMinutes() ? \" y \" : \"\") + t1.getSeconds() + (t1.getSeconds() > 1 ? \" segundos\" : \" segundo\") : \"\"));\r\n//para la consulta \r\n//console.log((t1.getHours() ? t1.getHours() + (t1.getHours() > 1 ? \"\" : \"\") : \"\") + (t1.getMinutes() ? \":\" + t1.getMinutes() + (t1.getMinutes() > 1 ? \"\" : \"\") : \"\") + (t1.getSeconds() ? (t1.getHours() || t1.getMinutes() ? \":\" : \"\") + t1.getSeconds() + (t1.getSeconds() > 1 ? \"\" : \"\") : \"\"));\r\n\r\n}\r\n\r\n  return(\r\n    <main>\r\n    <div className =\"img_logo\">\r\n      <img src={logo}/>\r\n    </div>\r\n    <div className=\"reloj\">\r\n      <div>\r\n      {clockState}\r\n      </div>\r\n    </div>\r\n    <div className=\"nombre_emp\">\r\n    <h1>{mensajeNombre} {mensajeApellido}</h1>\r\n    </div>\r\n      <div className=\"codigo_barra\">\r\n        <input type=\"text\" placeholder='codigo' ref={focusDiv}   onKeyDown={(e) => captura(e)}  onFocus={handleFocus} onChange={(event) => {setCodigo_Barra(event.target.value);}}/>\r\n      </div>\r\n  \r\n    </main>\r\n  )\r\n}\r\n\r\n  export default App;",["48","49"],"C:\\Users\\agarcia\\marcaje\\cliente\\src\\componentes\\Reloj.js",[],[],"C:\\Users\\agarcia\\marcaje\\cliente\\src\\componentes\\Detectar_Click.js",[],[],["50","51"],{"ruleId":"52","severity":1,"message":"53","line":1,"column":16,"nodeType":"54","messageId":"55","endLine":1,"endColumn":25},{"ruleId":"52","severity":1,"message":"56","line":3,"column":8,"nodeType":"54","messageId":"55","endLine":3,"endColumn":13},{"ruleId":"52","severity":1,"message":"57","line":6,"column":10,"nodeType":"54","messageId":"55","endLine":6,"endColumn":25},{"ruleId":"52","severity":1,"message":"58","line":35,"column":7,"nodeType":"54","messageId":"55","endLine":35,"endColumn":18},{"ruleId":"52","severity":1,"message":"59","line":37,"column":7,"nodeType":"54","messageId":"55","endLine":37,"endColumn":20},{"ruleId":"52","severity":1,"message":"60","line":37,"column":22,"nodeType":"54","messageId":"55","endLine":37,"endColumn":38},{"ruleId":"52","severity":1,"message":"61","line":40,"column":10,"nodeType":"54","messageId":"55","endLine":40,"endColumn":15},{"ruleId":"62","severity":1,"message":"63","line":101,"column":3,"nodeType":"64","endLine":101,"endColumn":17,"suggestions":"65"},{"ruleId":"62","severity":1,"message":"66","line":115,"column":4,"nodeType":"64","endLine":115,"endColumn":18,"suggestions":"67"},{"ruleId":"62","severity":1,"message":"66","line":132,"column":3,"nodeType":"64","endLine":132,"endColumn":17,"suggestions":"68"},{"ruleId":"62","severity":1,"message":"66","line":147,"column":3,"nodeType":"64","endLine":147,"endColumn":17,"suggestions":"69"},{"ruleId":"70","severity":1,"message":"71","line":160,"column":29,"nodeType":"72","messageId":"73","endLine":160,"endColumn":49},{"ruleId":"70","severity":1,"message":"71","line":181,"column":24,"nodeType":"72","messageId":"73","endLine":181,"endColumn":44},{"ruleId":"70","severity":1,"message":"71","line":214,"column":28,"nodeType":"72","messageId":"73","endLine":214,"endColumn":48},{"ruleId":"70","severity":1,"message":"71","line":230,"column":28,"nodeType":"72","messageId":"73","endLine":230,"endColumn":48},{"ruleId":"70","severity":1,"message":"71","line":247,"column":28,"nodeType":"72","messageId":"73","endLine":247,"endColumn":48},{"ruleId":"74","severity":1,"message":"75","line":381,"column":7,"nodeType":"76","endLine":381,"endColumn":24},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"77","replacedBy":"81"},{"ruleId":"79","replacedBy":"82"},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Reloj' is defined but never used.","'findAllByTestId' is defined but never used.","'total_horas' is assigned a value but never used.","'mensajeBorrar' is assigned a value but never used.","'setMensajeBorrar' is assigned a value but never used.","'state' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'codigo_barra' and 'ingresoDatos'. Either include them or remove the dependency array.","ArrayExpression",["83"],"React Hook useEffect has a missing dependency: 'codigo_barra'. Either include it or remove the dependency array.",["84"],["85"],["86"],"no-self-assign","'window.location.href' is assigned to itself.","MemberExpression","selfAssignment","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["87"],"no-negated-in-lhs",["88"],["87"],["88"],{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [codigo_barra, controlador1, ingresoDatos]",{"range":"97","text":"98"},"Update the dependencies array to be: [codigo_barra, controlador2]",{"range":"99","text":"100"},"Update the dependencies array to be: [codigo_barra, controlador3]",{"range":"101","text":"102"},"Update the dependencies array to be: [codigo_barra, controlador4]",{"range":"103","text":"104"},[2963,2977],"[codigo_barra, controlador1, ingresoDatos]",[3254,3268],"[codigo_barra, controlador2]",[3545,3559],"[codigo_barra, controlador3]",[3820,3834],"[codigo_barra, controlador4]"]