[{"C:\\Users\\agarcia\\marcaje\\cliente\\src\\index.js":"1","C:\\Users\\agarcia\\marcaje\\cliente\\src\\reportWebVitals.js":"2","C:\\Users\\agarcia\\marcaje\\cliente\\src\\App.js":"3","C:\\Users\\agarcia\\marcaje\\cliente\\src\\componentes\\Reloj.js":"4","C:\\Users\\agarcia\\marcaje\\cliente\\src\\componentes\\Detectar_Click.js":"5"},{"size":521,"mtime":1646686949929,"results":"6","hashOfConfig":"7"},{"size":375,"mtime":1646686949929,"results":"8","hashOfConfig":"7"},{"size":13466,"mtime":1647462605261,"results":"9","hashOfConfig":"7"},{"size":394,"mtime":1646686949926,"results":"10","hashOfConfig":"7"},{"size":916,"mtime":1644428310773,"results":"11","hashOfConfig":"12"},{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2yvu7k",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"4wiv19","C:\\Users\\agarcia\\marcaje\\cliente\\src\\index.js",[],[],"C:\\Users\\agarcia\\marcaje\\cliente\\src\\reportWebVitals.js",[],[],"C:\\Users\\agarcia\\marcaje\\cliente\\src\\App.js",["30","31","32","33","34","35","36","37","38","39"],[],"import React, {Component,useEffect, useRef, useState} from 'react';\r\nimport logo from './img/logo.jpg';\r\nimport Reloj from './componentes/Reloj';\r\nimport Axios from 'axios'\r\nimport './css/App.css';\r\nimport { findAllByTestId } from '@testing-library/react';\r\n\r\n\r\n//consultas de forma asincrona\r\n//por lo mismo se bugea cuando marcan hora de entrada alm y otros hora salida normal\r\n//calculo de horas al marcar la ultima vez\r\n\r\n\r\n//la forma de limpiar elimina el contenido de los states anteriores y por lo tanto no se puede hacer el procedimiento de actualizar\r\n//usar el mismo array siempre y que se limpie al finalizar el día(apagar la pc)\r\n//el array puede bugearse al llenarse excesivamente ?\r\n\r\n\r\nconst date = new Date();\r\n\r\nfunction App (){\r\n\r\nconst[mensajeNombre, setMensajeNombre] =useState(null);\r\nconst[mensajeApellido, setMensajeApellido] =useState(null);\r\nconst[mensajeHoraEnt, setMensajeHoraEnt] =useState(null);\r\nconst[mensajeHoraSal, setMensajeHoraSal] =useState(null);\r\nconst[mensajeHoraEntAlm, setMensajeHoraEntAlm] =useState(null);\r\nconst[mensajeHoraSalAlm, setMensajeHoraSalAlm] =useState(null);\r\nconst[controlador1, setControlador1]=useState(\"\");\r\nconst[controlador2, setControlador2]=useState(\"\");\r\nconst[controlador3, setControlador3]=useState(\"\");\r\nconst[controlador4, setControlador4]=useState(\"\");\r\nconst[controlador5, setControlador5]=useState(\"\");\r\nconst total_horas =0;\r\n\r\n  //////\r\n  const [state, setState] = useState('');\r\n    \r\n  const captura = (event) => {\r\n    //condicion para la busqueda e ingreso de datos cuando el lector manda la señal\r\n    if(event.key==='Enter'){\r\n    //se cambia el estado al nombre de la tecla que es presionada, en este caso es la tecla enter\r\n      setState(event.key);\r\n      //window.location.href = window.location.href;\r\n      //se llama a la funcion \r\n      BusquedaEmpleado();\r\n    }\r\n    \r\n  };\r\n////////\r\n\r\n//se declaran variables para envío de datos del MVC\r\nconst [codigo_barra, setCodigo_Barra] = useState(\"\");\r\n\r\n//Se obtiene la fecha actual y se divide en fragmentos para mostrar en el diseño luego\r\n/////\r\n  const [dateTime, setDateTime] = useState({\r\n    hours: date.getHours(),\r\n    minutes: date.getMinutes(),\r\n    seconds: date.getSeconds()\r\n  });\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      const date = new Date();\r\n      setDateTime({\r\n        hours: date.getHours(),\r\n        minutes: date.getMinutes(),\r\n        seconds: date.getSeconds(),\r\n      });\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n/////\r\n\r\n \r\n//hace focus al texbox que obtendrá la variable del codigo barras\r\n  const focusDiv = useRef();\r\nuseEffect(()=>{\r\n  const focusPermanente = setInterval (()=>{\r\n    if(focusDiv.current)focusDiv.current.focus();\r\n  },100);\r\n  return()=>clearInterval(focusPermanente);\r\n},[]);\r\n\r\n\r\n//\r\nconst HandlerOne=(e)=>{\r\n // e.preventDefault();\r\n  setControlador1('Inicia Request al Backend');\r\nsetTimeout(()=>{\r\n  setControlador1('1')\r\n},1000)\r\n}\r\n\r\nuseEffect(()=>{\r\n  if(controlador1 === '1'){\r\n    ingresoDatos(codigo_barra);\r\n\r\n    HandlerFive();\r\n  }\r\n},[controlador1])\r\n\r\n\r\nconst HandlerTwo=(e)=>{\r\n // e.preventDefault();\r\n  setControlador2('Inicia Request al Backend');\r\nsetTimeout(()=>{\r\n  setControlador2('2')\r\n},1000)\r\n}\r\nuseEffect(()=>{\r\n  if(controlador2 === '2'){\r\n    ActualizarDatosHraSalidaAlm(codigo_barra);\r\n\r\n    HandlerFive();\r\n  }\r\n},[controlador2])\r\n\r\n\r\nconst HandlerThree=(e)=>{\r\n  //e.preventDefault();\r\n  setControlador3('Inicia Request al Backend');\r\nsetTimeout(()=>{\r\n  setControlador3('3')\r\n},1000)\r\n}\r\nuseEffect(()=>{\r\n  if(controlador3 === '3'){\r\n    ActualizarDatosHraEntradaAlm(codigo_barra);\r\n    HandlerFive();\r\n    \r\n  }\r\n},[controlador3])\r\n\r\n\r\nconst HandlerFour=(e)=>{\r\n // e.preventDefault();\r\n  setControlador4('Inicia Request al Backend');\r\nsetTimeout(()=>{\r\n  setControlador4('4')\r\n},1000)\r\n}\r\nuseEffect(()=>{\r\n  if(controlador4 === '4'){\r\n    ActualizarDatosHraSalida(codigo_barra);\r\nHandlerFive();\r\n  }\r\n},[controlador4])\r\n\r\nconst HandlerFive=(e)=>{\r\n  // e.preventDefault();\r\n   setControlador5('Inicia Request al Backend');\r\n setTimeout(()=>{\r\n   setControlador5('5')\r\n },1000)\r\n }\r\n useEffect(()=>{\r\n   if(controlador5 === '5'){\r\n    \r\n     //window.location.href = window.location.href;\r\n   }\r\n },[controlador5])\r\n\r\n\r\n\r\n\r\n//insertar datos\r\nconst ingresoDatos =(codigo_barra)=>{\r\n  Axios.post('http://localhost:3001/DatosMarcajeEmpleado', {    \r\n    codigo_barra: codigo_barra,\r\n    hora_marcaje: date.toLocaleTimeString(),\r\n    //se llama a la fecha \r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n\r\n  }).then(()=>{\r\n\r\n\r\nconsole.log(mensajeNombre);\r\nconsole.log(mensajeApellido);\r\nconsole.log(mensajeHoraEnt);\r\nconsole.log(mensajeHoraSal);\r\nconsole.log(mensajeHoraEntAlm);\r\nconsole.log(mensajeHoraSalAlm);\r\n\r\n\r\n\r\nconsole.log(date.toLocaleString());\r\nconsole.log(\"conexion exitosa\");\r\nconsole.log(\"hora:\");\r\nconsole.log(date.toLocaleTimeString());\r\nconsole.log(date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear());\r\n//refresca la pagina para liberar el cargado de memoria de las variables usadas\r\n//window.location.href = window.location.href;\r\n  });\r\n};\r\n//\r\n\r\n\r\n//insertar datos\r\nconst Bitacora =(codigo_barra)=>{\r\n  Axios.post('http://localhost:3001/bitacora', {    \r\n    codigo_barra: codigo_barra,\r\n    //se llama a la fecha y obtiene solamente la hora\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n}).then(()=>{\r\n\r\n  });\r\n};\r\n//\r\n\r\n\r\n//\r\nconst ActualizarDatosHraSalidaAlm = (codigo_barra)=>{\r\n\r\n  Axios.put('http://localhost:3001/actualizarHraSalidaAlm',{\r\n    codigo_barra:codigo_barra,\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n  \r\n  }).then(()=>{\r\n    //window.location.href = window.location.href;\r\n    console.log(mensajeNombre);\r\n    console.log(mensajeApellido);\r\n    console.log(mensajeHoraEnt);\r\n    console.log(mensajeHoraSal);\r\n    console.log(mensajeHoraEntAlm);\r\n    console.log(mensajeHoraSalAlm);\r\n    \r\n  });  \r\n};\r\n\r\nconst ActualizarDatosHraEntradaAlm = (codigo_barra)=>{\r\n\r\n  Axios.put('http://localhost:3001/actualizarHraEntradaAlm',{\r\n    codigo_barra:codigo_barra,\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n\r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n\r\n  }).then(()=>{\r\n    //window.location.href = window.location.href;\r\n    console.log(mensajeNombre);\r\nconsole.log(mensajeApellido);\r\nconsole.log(mensajeHoraEnt);\r\nconsole.log(mensajeHoraSal);\r\nconsole.log(mensajeHoraEntAlm);\r\nconsole.log(mensajeHoraSalAlm);\r\n \r\n  \r\n  });  \r\n};\r\n\r\nconst ActualizarDatosHraSalida = (codigo_barra)=>{\r\n\r\n  Axios.put('http://localhost:3001/actualizarHraSalida',{\r\n    codigo_barra:codigo_barra,\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n\r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n\r\n  }).then(()=>{\r\n    //window.location.href = window.location.href;\r\n    console.log(mensajeNombre);\r\n    console.log(mensajeApellido);\r\n    console.log(mensajeHoraEnt);\r\n    console.log(mensajeHoraSal);\r\n    console.log(mensajeHoraEntAlm);\r\n    console.log(mensajeHoraSalAlm);\r\n     \r\n  });  \r\n};\r\n//\r\n\r\n//buscar datos\r\nconst BusquedaEmpleado = () => {\r\n  Axios.post('http://localhost:3001/buscarEmpleado',{\r\n    codigo_barra:codigo_barra,\r\n\r\n}).then((response)=>{\r\n\r\n    if(response.data.message){\r\n        //muestra mensaje de Empleado no encontrado\r\n        setMensajeNombre(response.data.message)\r\n        setMensajeApellido(\"\")\r\n        HandlerFive();\r\n       }else{\r\n\r\n        BuscarFechaActual();\r\n        setMensajeNombre(response.data[0].nombre)\r\n        setMensajeApellido(response.data[0].apellido)\r\n       }\r\n\r\n       });\r\n    };\r\n//\r\n\r\n//buscar datos\r\nconst BuscarFechaActual = () => {\r\n    Axios.post('http://localhost:3001/buscarFecha',{\r\n        codigo_barra:codigo_barra,\r\n        dia_marcaje: date.getDate(),\r\n        mes_marcaje: (date.getMonth()+1),\r\n        periodo_marcaje: date.getFullYear(),\r\n\r\n  }).then((response)=>{\r\n   \r\n    if(response.data.message){\r\n    \r\n        //Se inserta Hora Entrada\r\n        console.log(\"============================================================\")\r\n        console.log(\"Ingreso Marcaje: 0\");\r\n\r\n        console.log(mensajeNombre);\r\n        console.log(mensajeApellido);        \r\n        console.log(mensajeHoraEnt);\r\n        console.log(mensajeHoraSal);\r\n        console.log(mensajeHoraEntAlm);\r\n        console.log(mensajeHoraSalAlm);\r\n    \r\n        console.log(\"============================================================\")\r\n        HandlerOne();\r\n        Bitacora();\r\n        \r\n       }else{\r\n\r\n         // setMensajeNombre(response.data[0].hra_entrada);\r\n         /////\r\n         console.log(\"============================================================\")\r\n         console.log(mensajeNombre);\r\n         console.log(mensajeApellido);\r\n         \r\n         console.log(mensajeHoraEnt);\r\n         console.log(mensajeHoraSal);\r\n         console.log(mensajeHoraEntAlm);\r\n         console.log(mensajeHoraSalAlm);\r\n\r\n            setMensajeHoraEnt(response.data[0].hra_entrada);\r\n            setMensajeHoraSalAlm(response.data[0].hra_salida_alm);\r\n            setMensajeHoraEntAlm(response.data[0].hra_entrada_alm);\r\n            setMensajeHoraSal(response.data[0].hra_salida);\r\n            console.log(\"============================================================\")\r\n            console.log(mensajeNombre);\r\n            console.log(mensajeApellido);\r\n            \r\n            console.log(mensajeHoraEnt);\r\n            console.log(mensajeHoraSal);\r\n            console.log(mensajeHoraEntAlm);\r\n            console.log(mensajeHoraSalAlm);\r\n        \r\n            console.log(\"============================================================\")\r\n           if (mensajeHoraEnt != null && mensajeHoraSalAlm == null && mensajeHoraEntAlm == null && mensajeHoraSal == null){\r\n         console.log(\"Ingreso mensaje hora Salida Almuerzo: 1\");\r\n    \r\n         HandlerTwo();\r\n             //ActualizarDatosHraSalidaAlm(codigo_barra);\r\n             Bitacora(codigo_barra);\r\n             \r\n         }else{\r\n           if(mensajeHoraEnt != null && mensajeHoraSalAlm != null && mensajeHoraEntAlm == null && mensajeHoraSal == null){\r\n             console.log(\"Ingreso mensaje hora Entrada Almuerzo: 2\");\r\n        \r\n             HandlerThree();\r\n            // ActualizarDatosHraEntradaAlm(codigo_barra);\r\n             Bitacora();\r\n         }else{\r\n           if(mensajeHoraEnt != null && mensajeHoraSalAlm != null && mensajeHoraEntAlm != null && mensajeHoraSal == null){\r\n             console.log(\"Ingreso mensaje hora Salida: 3\");\r\n             HandlerFour();\r\n            //ActualizarDatosHraSalida(codigo_barra);\r\n             CalculoTiempoDiario();\r\n             Bitacora();\r\n             console.log(\"Marcajes posibles realizados\");\r\n             }else{\r\n               if(mensajeHoraEnt != null && mensajeHoraSalAlm != null && mensajeHoraEntAlm != null && mensajeHoraSal != null){\r\n                 console.log(\"Ya se han realizado todos los marcajes del día: 4\");\r\n                 CalculoTiempoDiario();\r\n                 console.log(mensajeNombre);\r\n                 console.log(mensajeApellido);\r\n\r\nconsole.log(mensajeHoraEnt);\r\nconsole.log(mensajeHoraSal);\r\nconsole.log(mensajeHoraEntAlm);\r\nconsole.log(mensajeHoraSalAlm);\r\nHandlerFive();\r\n\r\n               }else{\r\n                 console.log(\"El empleado ha realizado un marcaje erróneo 1072022\");\r\n\r\n                 HandlerFive();\r\n                 \r\n               }\r\n             }\r\n           }\r\n         }\r\n         \r\n        }\r\n\r\n    });\r\n  };\r\n\r\n\r\nconst CalculoTiempoDiario =()=>{\r\n\r\n  console.log(\"Hora E: \" + mensajeHoraEnt);\r\n  console.log(\"Hora S: \" + mensajeHoraSal);\r\n \r\n    var p1 = (mensajeHoraSal);\r\n    var p2 = (mensajeHoraEnt);  \r\n    var hora1 = (p1).split(\":\"),\r\n    hora2 = (p2).split(\":\"),\r\n    t1 = new Date(),\r\n    t2 = new Date();\r\n//Se establecen en arreglos los 3 parametros\r\nt1.setHours(hora1[0], hora1[1], hora1[2]);\r\nt2.setHours(hora2[0], hora2[1], hora2[2]);\r\n//Calculo de tiempo laborado diariamente\r\nt1.setHours(t1.getHours() - t2.getHours(), t1.getMinutes() - t2.getMinutes(), t1.getSeconds() - t2.getSeconds());\r\n//Mensaje de total de Horas\r\nconsole.log(\"Total de Tiempo Laborado el día de hoy: \" + (t1.getHours() ? t1.getHours() + (t1.getHours() > 1 ? \" horas\" : \" hora\") : \"\") + (t1.getMinutes() ? \", \" + t1.getMinutes() + (t1.getMinutes() > 1 ? \" minutos\" : \" minuto\") : \"\") + (t1.getSeconds() ? (t1.getHours() || t1.getMinutes() ? \" y \" : \"\") + t1.getSeconds() + (t1.getSeconds() > 1 ? \" segundos\" : \" segundo\") : \"\"));\r\n\r\n}\r\n  return(\r\n    <main>\r\n    <div className =\"img_logo\">\r\n      <img src={logo}/>\r\n    </div>\r\n    <div className=\"reloj\">\r\n      <div>\r\n        {dateTime.hours}:{dateTime.minutes}:{dateTime.seconds}\r\n      </div>\r\n    </div>\r\n    <div className=\"nombre_emp\">\r\n    <h1>{mensajeNombre} {mensajeApellido}</h1>\r\n    </div>\r\n      <div className=\"codigo_barra\">\r\n        <input type=\"text\"  ref={focusDiv}  onKeyDown={(e) => captura(e)}   onChange={(event) => {setCodigo_Barra(event.target.value);}}/>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n  export default App;","C:\\Users\\agarcia\\marcaje\\cliente\\src\\componentes\\Reloj.js",[],[],"C:\\Users\\agarcia\\marcaje\\cliente\\src\\componentes\\Detectar_Click.js",[],[],["40","41"],{"ruleId":"42","severity":1,"message":"43","line":1,"column":16,"nodeType":"44","messageId":"45","endLine":1,"endColumn":25},{"ruleId":"42","severity":1,"message":"46","line":3,"column":8,"nodeType":"44","messageId":"45","endLine":3,"endColumn":13},{"ruleId":"42","severity":1,"message":"47","line":6,"column":10,"nodeType":"44","messageId":"45","endLine":6,"endColumn":25},{"ruleId":"42","severity":1,"message":"48","line":34,"column":7,"nodeType":"44","messageId":"45","endLine":34,"endColumn":18},{"ruleId":"42","severity":1,"message":"49","line":37,"column":10,"nodeType":"44","messageId":"45","endLine":37,"endColumn":15},{"ruleId":"50","severity":1,"message":"51","line":101,"column":3,"nodeType":"52","endLine":101,"endColumn":17,"suggestions":"53"},{"ruleId":"50","severity":1,"message":"54","line":117,"column":3,"nodeType":"52","endLine":117,"endColumn":17,"suggestions":"55"},{"ruleId":"50","severity":1,"message":"56","line":133,"column":3,"nodeType":"52","endLine":133,"endColumn":17,"suggestions":"57"},{"ruleId":"50","severity":1,"message":"58","line":148,"column":3,"nodeType":"52","endLine":148,"endColumn":17,"suggestions":"59"},{"ruleId":"60","severity":1,"message":"61","line":436,"column":7,"nodeType":"62","endLine":436,"endColumn":24},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Reloj' is defined but never used.","'findAllByTestId' is defined but never used.","'total_horas' is assigned a value but never used.","'state' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'codigo_barra' and 'ingresoDatos'. Either include them or remove the dependency array.","ArrayExpression",["67"],"React Hook useEffect has missing dependencies: 'ActualizarDatosHraSalidaAlm' and 'codigo_barra'. Either include them or remove the dependency array.",["68"],"React Hook useEffect has missing dependencies: 'ActualizarDatosHraEntradaAlm' and 'codigo_barra'. Either include them or remove the dependency array.",["69"],"React Hook useEffect has missing dependencies: 'ActualizarDatosHraSalida' and 'codigo_barra'. Either include them or remove the dependency array.",["70"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["71"],"no-negated-in-lhs",["72"],{"desc":"73","fix":"74"},{"desc":"75","fix":"76"},{"desc":"77","fix":"78"},{"desc":"79","fix":"80"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [codigo_barra, controlador1, ingresoDatos]",{"range":"81","text":"82"},"Update the dependencies array to be: [ActualizarDatosHraSalidaAlm, codigo_barra, controlador2]",{"range":"83","text":"84"},"Update the dependencies array to be: [ActualizarDatosHraEntradaAlm, codigo_barra, controlador3]",{"range":"85","text":"86"},"Update the dependencies array to be: [ActualizarDatosHraSalida, codigo_barra, controlador4]",{"range":"87","text":"88"},[3084,3098],"[codigo_barra, controlador1, ingresoDatos]",[3381,3395],"[ActualizarDatosHraSalidaAlm, codigo_barra, controlador2]",[3685,3699],"[ActualizarDatosHraEntradaAlm, codigo_barra, controlador3]",[3974,3988],"[ActualizarDatosHraSalida, codigo_barra, controlador4]"]