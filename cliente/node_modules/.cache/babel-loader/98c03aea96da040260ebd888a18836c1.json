{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\agarcia\\\\marcaje\\\\cliente\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useRef, useState } from 'react';\nimport logo from './img/logo.jpg';\nimport Reloj from './componentes/Reloj';\nimport Axios from 'axios';\nimport './css/App.css';\nimport { findAllByTestId } from '@testing-library/react'; //hay un retraso de 30 seg al marcar con el lector\n//ver como obtener los valores al realizar la busqueda la primera vez\n//buscar fecha actual\n//si no hay la inserta y busca empleado (o se llama a si misma la funcion)\n//si hay nomas busca empleado\n//si no existe empleado, mostrar mensaje que no existe\n// si existe, comparar los nulls de las fechas para saber donde insertar\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst date = new Date();\n\nfunction App() {\n  _s();\n\n  const [mensajeNombre, setMensajeNombre] = useState(\"\");\n  const [mensajeApellido, setMensajeApellido] = useState(\"\");\n  const [mensajeHoraEnt, setMensajeHoraEnt] = useState(\"\");\n  const [mensajeHoraSal, setMensajeHoraSal] = useState(\"\");\n  const [mensajeHoraEntAlm, setMensajeHoraEntAlm] = useState(\"\");\n  const [mensajeHoraSalAlm, setMensajeHoraSalAlm] = useState(\"\");\n  const [controlador1, setControlador1] = useState(\"\");\n  const [controlador2, setControlador2] = useState(\"\");\n  const [controlador3, setControlador3] = useState(\"\");\n  const [controlador4, setControlador4] = useState(\"\");\n  const [controlador5, setControlador5] = useState(\"\");\n  const total_horas = 0;\n  const [mensajeBorrar, setMensajeBorrar] = useState([]); //////\n\n  const [state, setState] = useState('');\n\n  const captura = event => {\n    //condicion para la busqueda e ingreso de datos cuando el lector manda la señal\n    if (event.key === 'Enter') {\n      //se cambia el estado al nombre de la tecla que es presionada, en este caso es la tecla enter\n      setState(event.key); //window.location.href = window.location.href;\n      //se llama a la funcion \n\n      BusquedaEmpleado();\n    }\n  }; ////////\n  //se declaran variables para envío de datos del MVC\n\n\n  const [codigo_barra, setCodigo_Barra] = useState(\"\"); //Se obtiene la fecha actual y se divide en fragmentos para mostrar en el diseño luego\n  /////\n\n  const [dateTime, setDateTime] = useState({\n    hours: date.getHours(),\n    minutes: date.getMinutes(),\n    seconds: date.getSeconds()\n  });\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const date = new Date();\n      setDateTime({\n        hours: date.getHours(),\n        minutes: date.getMinutes(),\n        seconds: date.getSeconds()\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []); /////\n  //hace focus al texbox que obtendrá la variable del codigo barras\n\n  const focusDiv = useRef(null);\n  useEffect(() => {\n    const focusPermanente = setInterval(() => {\n      if (focusDiv.current) focusDiv.current.focus();\n    }, 100);\n    return () => clearInterval(focusPermanente);\n  }, [focusDiv]); //seleccionar todo el contenido \n  //const handleFocus = (event) => event.target.select();\n\n  const HandlerOne = e => {\n    // e.preventDefault();\n    setControlador1('Inicia Request al Backend');\n    setTimeout(() => {\n      setControlador1('1');\n    }, 500);\n  };\n\n  useEffect(() => {\n    if (controlador1 === '1') {\n      ingresoDatos(codigo_barra);\n    }\n  }, [controlador1]);\n\n  const HandlerTwo = e => {\n    // e.preventDefault();\n    setControlador2('Inicia Request al Backend');\n    setTimeout(() => {\n      setControlador2('2');\n    }, 500);\n  };\n\n  useEffect(() => {\n    if (controlador2 === '2') {\n      ActualizarDatosHraSalidaAlm(codigo_barra);\n      HandlerFive();\n    }\n  }, [controlador2]); //insertar datos\n\n  const ingresoDatos = () => {\n    Axios.post('http://localhost:3001/DatosMarcajeEmpleado', {\n      codigo_barra: codigo_barra,\n      hora_marcaje: date.toLocaleTimeString(),\n      //se llama a la fecha \n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(() => {\n      console.log(date.toLocaleString());\n      console.log(\"conexion exitosa\");\n      console.log(\"hora:\");\n      console.log(date.toLocaleTimeString());\n      console.log(date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear()); //refresca la pagina para liberar el cargado de memoria de las variables usadas\n\n      window.location.href = window.location.href;\n    });\n  }; //\n  //insertar datos\n\n\n  const Bitacora = () => {\n    Axios.post('http://localhost:3001/bitacora', {\n      codigo_barra: codigo_barra,\n      //se llama a la fecha y obtiene solamente la hora\n      hora_marcaje: date.toLocaleTimeString(),\n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(() => {});\n  }; //\n  //\n\n\n  const ActualizarDatosHraSalidaAlm = codigo_barra => {\n    Axios.put('http://localhost:3001/actualizarHraSalidaAlm', {\n      codigo_barra: codigo_barra,\n      hora_marcaje: date.toLocaleTimeString(),\n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(() => {\n      window.location.href = window.location.href;\n    });\n  };\n\n  const ActualizarDatosHraEntradaAlm = codigo_barra => {\n    Axios.put('http://localhost:3001/actualizarHraEntradaAlm', {\n      codigo_barra: codigo_barra,\n      hora_marcaje: date.toLocaleTimeString(),\n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(() => {\n      window.location.href = window.location.href;\n    });\n  };\n\n  const ActualizarDatosHraSalida = codigo_barra => {\n    Axios.put('http://localhost:3001/actualizarHraSalida', {\n      codigo_barra: codigo_barra,\n      hora_marcaje: date.toLocaleTimeString(),\n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(() => {\n      window.location.href = window.location.href;\n    });\n  }; //\n  //buscar datos\n\n\n  const BusquedaEmpleado = () => {\n    Axios.post('http://localhost:3001/buscarEmpleado', {\n      codigo_barra: codigo_barra\n    }).then(response => {\n      if (response.data.message) {\n        //muestra mensaje de Empleado no encontrado\n        setMensajeNombre(response.data.message);\n        setMensajeApellido(\"\");\n      } else {\n        BuscarFechaActual();\n        setMensajeNombre(response.data[0].nombre);\n        setMensajeApellido(response.data[0].apellido);\n      }\n    });\n  }; //\n  //buscar datos\n\n\n  const BuscarFechaActual = () => {\n    Axios.post('http://localhost:3001/buscarFecha', {\n      codigo_barra: codigo_barra,\n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(response => {\n      if (response.data.message) {\n        //Se inserta Hora Entrada\n        console.log(\"Ingreso Marcaje: 0\");\n        HandlerOne();\n        Bitacora();\n      } else {\n        // setMensajeNombre(response.data[0].hra_entrada);\n        /////\n        setMensajeHoraEnt(response.data[0].hra_entrada);\n        setMensajeHoraSalAlm(response.data[0].hra_salida_alm);\n        setMensajeHoraEntAlm(response.data[0].hra_entrada_alm);\n        setMensajeHoraSal(response.data[0].hra_salida);\n\n        if (mensajeHoraEnt != null && mensajeHoraSalAlm == null && mensajeHoraEntAlm == null && mensajeHoraSal == null) {\n          console.log(\"Ingreso mensaje hora Salida Almuerzo: 1\");\n          HandlerTwo();\n          Bitacora();\n        } else {\n          if (mensajeHoraEnt != null && mensajeHoraSalAlm != null && mensajeHoraEntAlm == null && mensajeHoraSal == null) {\n            console.log(\"Ingreso mensaje hora Entrada Almuerzo: 2\");\n            ActualizarDatosHraEntradaAlm(codigo_barra);\n            Bitacora();\n          } else {\n            if (mensajeHoraEnt != null && mensajeHoraSalAlm != null && mensajeHoraEntAlm != null && mensajeHoraSal == null) {\n              console.log(\"Ingreso mensaje hora Salida: 3\");\n              ActualizarDatosHraSalida(codigo_barra); //CalculoTiempoDiario();\n\n              Bitacora();\n              console.log(\"Marcajes posibles realizados\");\n            } else {\n              if (mensajeHoraEnt != null && mensajeHoraSalAlm != null && mensajeHoraEntAlm != null && mensajeHoraSal != null) {\n                console.log(\"Ya se han realizado todos los marcajes del día: 4\");\n                CalculoTiempoDiario();\n                console.log(mensajeHoraEnt);\n                console.log(mensajeHoraSal);\n              } else {\n                console.log(\"El empleado ha realizado un marcaje erróneo \");\n              }\n            }\n          }\n        }\n\n        if (mensajeNombre === null) {\n          console.log(\"obtiene dato NULL\");\n        } else {\n          console.log(\"valor\");\n        }\n      }\n    });\n  }; //\n  //\n\n\n  const CalculoTiempoDiario = () => {\n    console.log(\"Hora E: \" + mensajeHoraEnt);\n    console.log(\"Hora S: \" + mensajeHoraSal);\n    var p1 = mensajeHoraSal;\n    var p2 = mensajeHoraEnt;\n    var hora1 = p1.split(\":\"),\n        hora2 = p2.split(\":\"),\n        t1 = new Date(),\n        t2 = new Date(); //Se establecen en arreglos los 3 parametros\n\n    t1.setHours(hora1[0], hora1[1], hora1[2]);\n    t2.setHours(hora2[0], hora2[1], hora2[2]); //Calculo de tiempo laborado diariamente\n\n    t1.setHours(t1.getHours() - t2.getHours(), t1.getMinutes() - t2.getMinutes(), t1.getSeconds() - t2.getSeconds()); //Mensaje de total de Horas\n\n    console.log(\"Total de Tiempo Laborado el día de hoy: \" + (t1.getHours() ? t1.getHours() + (t1.getHours() > 1 ? \" horas\" : \" hora\") : \"\") + (t1.getMinutes() ? \", \" + t1.getMinutes() + (t1.getMinutes() > 1 ? \" minutos\" : \" minuto\") : \"\") + (t1.getSeconds() ? (t1.getHours() || t1.getMinutes() ? \" y \" : \"\") + t1.getSeconds() + (t1.getSeconds() > 1 ? \" segundos\" : \" segundo\") : \"\"));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img_logo\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reloj\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [dateTime.hours, \":\", dateTime.minutes, \":\", dateTime.seconds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nombre_emp\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [mensajeNombre, \" \", mensajeApellido]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"codigo_barra\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"codigo\",\n        ref: focusDiv,\n        onKeyDown: e => captura(e),\n        onChange: event => {\n          setCodigo_Barra(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 333,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"FKJn5yFHnlZiXpSgF4MBAFliRvM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/agarcia/marcaje/cliente/src/App.js"],"names":["React","Component","useEffect","useRef","useState","logo","Reloj","Axios","findAllByTestId","date","Date","App","mensajeNombre","setMensajeNombre","mensajeApellido","setMensajeApellido","mensajeHoraEnt","setMensajeHoraEnt","mensajeHoraSal","setMensajeHoraSal","mensajeHoraEntAlm","setMensajeHoraEntAlm","mensajeHoraSalAlm","setMensajeHoraSalAlm","controlador1","setControlador1","controlador2","setControlador2","controlador3","setControlador3","controlador4","setControlador4","controlador5","setControlador5","total_horas","mensajeBorrar","setMensajeBorrar","state","setState","captura","event","key","BusquedaEmpleado","codigo_barra","setCodigo_Barra","dateTime","setDateTime","hours","getHours","minutes","getMinutes","seconds","getSeconds","timer","setInterval","clearInterval","focusDiv","focusPermanente","current","focus","HandlerOne","e","setTimeout","ingresoDatos","HandlerTwo","ActualizarDatosHraSalidaAlm","HandlerFive","post","hora_marcaje","toLocaleTimeString","dia_marcaje","getDate","mes_marcaje","getMonth","periodo_marcaje","getFullYear","then","console","log","toLocaleString","window","location","href","Bitacora","put","ActualizarDatosHraEntradaAlm","ActualizarDatosHraSalida","response","data","message","BuscarFechaActual","nombre","apellido","hra_entrada","hra_salida_alm","hra_entrada_alm","hra_salida","CalculoTiempoDiario","p1","p2","hora1","split","hora2","t1","t2","setHours","target","value"],"mappings":"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","sourcesContent":["import React, {Component,useEffect, useRef, useState} from 'react';\r\nimport logo from './img/logo.jpg';\r\nimport Reloj from './componentes/Reloj';\r\nimport Axios from 'axios'\r\nimport './css/App.css';\r\nimport { findAllByTestId } from '@testing-library/react';\r\n\r\n\r\n//hay un retraso de 30 seg al marcar con el lector\r\n//ver como obtener los valores al realizar la busqueda la primera vez\r\n\r\n\r\n//buscar fecha actual\r\n//si no hay la inserta y busca empleado (o se llama a si misma la funcion)\r\n//si hay nomas busca empleado\r\n//si no existe empleado, mostrar mensaje que no existe\r\n// si existe, comparar los nulls de las fechas para saber donde insertar\r\n\r\n\r\nconst date = new Date();\r\n\r\nfunction App (){\r\n\r\nconst[mensajeNombre, setMensajeNombre] =useState(\"\");\r\nconst[mensajeApellido, setMensajeApellido] =useState(\"\");\r\nconst[mensajeHoraEnt, setMensajeHoraEnt] =useState(\"\");\r\nconst[mensajeHoraSal, setMensajeHoraSal] =useState(\"\");\r\nconst[mensajeHoraEntAlm, setMensajeHoraEntAlm] =useState(\"\");\r\nconst[mensajeHoraSalAlm, setMensajeHoraSalAlm] =useState(\"\");\r\nconst[controlador1, setControlador1]=useState(\"\");\r\nconst[controlador2, setControlador2]=useState(\"\");\r\nconst[controlador3, setControlador3]=useState(\"\");\r\nconst[controlador4, setControlador4]=useState(\"\");\r\nconst[controlador5, setControlador5]=useState(\"\");\r\nconst total_horas =0;\r\n\r\nconst[mensajeBorrar, setMensajeBorrar] =useState([]);\r\n\r\n  //////\r\n  const [state, setState] = useState('');\r\n    \r\n\r\n  const captura = (event) => {\r\n    \r\n    //condicion para la busqueda e ingreso de datos cuando el lector manda la señal\r\n    if(event.key==='Enter'){\r\n      \r\n    //se cambia el estado al nombre de la tecla que es presionada, en este caso es la tecla enter\r\n      setState(event.key);\r\n      //window.location.href = window.location.href;\r\n      //se llama a la funcion \r\n      BusquedaEmpleado();\r\n      \r\n    }\r\n    \r\n  };\r\n////////\r\n\r\n//se declaran variables para envío de datos del MVC\r\nconst [codigo_barra, setCodigo_Barra] = useState(\"\");\r\n\r\n//Se obtiene la fecha actual y se divide en fragmentos para mostrar en el diseño luego\r\n/////\r\n  const [dateTime, setDateTime] = useState({\r\n    hours: date.getHours(),\r\n    minutes: date.getMinutes(),\r\n    seconds: date.getSeconds()\r\n  });\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      const date = new Date();\r\n      setDateTime({\r\n        hours: date.getHours(),\r\n        minutes: date.getMinutes(),\r\n        seconds: date.getSeconds(),\r\n      });\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n/////\r\n\r\n \r\n//hace focus al texbox que obtendrá la variable del codigo barras\r\nconst focusDiv = useRef(null);\r\nuseEffect(()=>{\r\n  const focusPermanente = setInterval (()=>{\r\n    if(focusDiv.current)focusDiv.current.focus();\r\n  },100);\r\n  return()=>clearInterval(focusPermanente);\r\n},[focusDiv]);\r\n\r\n\r\n//seleccionar todo el contenido \r\n//const handleFocus = (event) => event.target.select();\r\n\r\nconst HandlerOne=(e)=>{\r\n  // e.preventDefault();\r\n   setControlador1('Inicia Request al Backend');\r\n setTimeout(()=>{\r\n   setControlador1('1')\r\n },500)\r\n }\r\n useEffect(()=>{\r\n  if(controlador1 === '1'){\r\n    ingresoDatos(codigo_barra);\r\n\r\n  }\r\n},[controlador1])\r\n\r\nconst HandlerTwo=(e)=>{\r\n  // e.preventDefault();\r\n   setControlador2('Inicia Request al Backend');\r\n setTimeout(()=>{\r\n   setControlador2('2')\r\n },500)\r\n }\r\n useEffect(()=>{\r\n   if(controlador2 === '2'){\r\n     ActualizarDatosHraSalidaAlm(codigo_barra);\r\n     HandlerFive();\r\n   }\r\n },[controlador2])\r\n\r\n//insertar datos\r\nconst ingresoDatos =()=>{\r\n  Axios.post('http://localhost:3001/DatosMarcajeEmpleado', {    \r\n    codigo_barra: codigo_barra,\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n    //se llama a la fecha \r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n}).then(()=>{\r\n\r\nconsole.log(date.toLocaleString());\r\nconsole.log(\"conexion exitosa\");\r\nconsole.log(\"hora:\");\r\nconsole.log(date.toLocaleTimeString());\r\nconsole.log(date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear());\r\n//refresca la pagina para liberar el cargado de memoria de las variables usadas\r\nwindow.location.href = window.location.href;\r\n  });\r\n};\r\n//\r\n\r\n\r\n//insertar datos\r\nconst Bitacora =()=>{\r\n  Axios.post('http://localhost:3001/bitacora', {    \r\n    codigo_barra: codigo_barra,\r\n    //se llama a la fecha y obtiene solamente la hora\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n}).then(()=>{\r\n\r\n  });\r\n};\r\n//\r\n\r\n\r\n//\r\nconst ActualizarDatosHraSalidaAlm = (codigo_barra)=>{\r\n\r\n  Axios.put('http://localhost:3001/actualizarHraSalidaAlm',{\r\n    codigo_barra:codigo_barra,\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n  \r\n  }).then(()=>{\r\n    window.location.href = window.location.href;\r\n    \r\n  });  \r\n};\r\n\r\nconst ActualizarDatosHraEntradaAlm = (codigo_barra)=>{\r\n\r\n  Axios.put('http://localhost:3001/actualizarHraEntradaAlm',{\r\n    codigo_barra:codigo_barra,\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n\r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n\r\n  }).then(()=>{\r\n    window.location.href = window.location.href;\r\n    \r\n  \r\n  });  \r\n};\r\n\r\nconst ActualizarDatosHraSalida = (codigo_barra)=>{\r\n\r\n  Axios.put('http://localhost:3001/actualizarHraSalida',{\r\n    codigo_barra:codigo_barra,\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n\r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n\r\n  }).then(()=>{\r\n    window.location.href = window.location.href;\r\n    \r\n  });  \r\n};\r\n//\r\n\r\n//buscar datos\r\nconst BusquedaEmpleado = () => {\r\n  Axios.post('http://localhost:3001/buscarEmpleado',{\r\n    codigo_barra:codigo_barra,\r\n\r\n}).then((response)=>{\r\n\r\n    if(response.data.message){\r\n        //muestra mensaje de Empleado no encontrado\r\n        setMensajeNombre(response.data.message)\r\n        setMensajeApellido(\"\")\r\n       }else{\r\n\r\n        BuscarFechaActual();\r\n        setMensajeNombre(response.data[0].nombre)\r\n        setMensajeApellido(response.data[0].apellido)\r\n       }\r\n\r\n       });\r\n    };\r\n//\r\n\r\n//buscar datos\r\nconst BuscarFechaActual = () => {\r\n    Axios.post('http://localhost:3001/buscarFecha',{\r\n        codigo_barra:codigo_barra,\r\n        dia_marcaje: date.getDate(),\r\n        mes_marcaje: (date.getMonth()+1),\r\n        periodo_marcaje: date.getFullYear(),\r\n\r\n  }).then((response)=>{\r\n  \r\n    if(response.data.message){\r\n    \r\n        //Se inserta Hora Entrada\r\n        console.log(\"Ingreso Marcaje: 0\");\r\n        HandlerOne();\r\n        Bitacora();\r\n        \r\n\r\n       }else{\r\n\r\n          // setMensajeNombre(response.data[0].hra_entrada);\r\n         /////\r\n            setMensajeHoraEnt(response.data[0].hra_entrada)\r\n            setMensajeHoraSalAlm(response.data[0].hra_salida_alm)\r\n            setMensajeHoraEntAlm(response.data[0].hra_entrada_alm)\r\n            setMensajeHoraSal(response.data[0].hra_salida)\r\n            \r\n       \r\n           if (mensajeHoraEnt != null && mensajeHoraSalAlm == null && mensajeHoraEntAlm == null && mensajeHoraSal == null){\r\n         console.log(\"Ingreso mensaje hora Salida Almuerzo: 1\");\r\n         HandlerTwo();\r\n             Bitacora();\r\n         }else{\r\n           if(mensajeHoraEnt != null && mensajeHoraSalAlm != null && mensajeHoraEntAlm == null && mensajeHoraSal == null){\r\n             console.log(\"Ingreso mensaje hora Entrada Almuerzo: 2\");\r\n             ActualizarDatosHraEntradaAlm(codigo_barra);\r\n             Bitacora();\r\n         }else{\r\n           if(mensajeHoraEnt != null && mensajeHoraSalAlm != null && mensajeHoraEntAlm != null && mensajeHoraSal == null){\r\n             console.log(\"Ingreso mensaje hora Salida: 3\");\r\n         \r\n             ActualizarDatosHraSalida(codigo_barra);\r\n             //CalculoTiempoDiario();\r\n             Bitacora();\r\n             console.log(\"Marcajes posibles realizados\");\r\n             }else{\r\n               if(mensajeHoraEnt != null && mensajeHoraSalAlm != null && mensajeHoraEntAlm != null && mensajeHoraSal != null){\r\n                 console.log(\"Ya se han realizado todos los marcajes del día: 4\");\r\n                 CalculoTiempoDiario();\r\n                 console.log(mensajeHoraEnt);\r\n                 console.log(mensajeHoraSal);\r\n            \r\n               }else{\r\n                 console.log(\"El empleado ha realizado un marcaje erróneo \");\r\n                 \r\n               }\r\n             }\r\n           }\r\n         }\r\n         \r\n             if(mensajeNombre === null){\r\n             console.log(\"obtiene dato NULL\");\r\n             }else{\r\n             console.log(\"valor\");\r\n            \r\n             }\r\n \r\n          }\r\n        \r\n    });\r\n  };\r\n  //\r\n\r\n\r\n\r\n\r\n//\r\nconst CalculoTiempoDiario =()=>{\r\n\r\n  console.log(\"Hora E: \" + mensajeHoraEnt);\r\n  console.log(\"Hora S: \" + mensajeHoraSal);\r\n  var p1 = (mensajeHoraSal);\r\n  var p2 = (mensajeHoraEnt);\r\n  var hora1 = (p1).split(\":\"),\r\n      hora2 = (p2).split(\":\"),\r\n      t1 = new Date(),\r\n      t2 = new Date();\r\n//Se establecen en arreglos los 3 parametros\r\nt1.setHours(hora1[0], hora1[1], hora1[2]);\r\nt2.setHours(hora2[0], hora2[1], hora2[2]);\r\n//Calculo de tiempo laborado diariamente\r\nt1.setHours(t1.getHours() - t2.getHours(), t1.getMinutes() - t2.getMinutes(), t1.getSeconds() - t2.getSeconds());\r\n//Mensaje de total de Horas\r\nconsole.log(\"Total de Tiempo Laborado el día de hoy: \" + (t1.getHours() ? t1.getHours() + (t1.getHours() > 1 ? \" horas\" : \" hora\") : \"\") + (t1.getMinutes() ? \", \" + t1.getMinutes() + (t1.getMinutes() > 1 ? \" minutos\" : \" minuto\") : \"\") + (t1.getSeconds() ? (t1.getHours() || t1.getMinutes() ? \" y \" : \"\") + t1.getSeconds() + (t1.getSeconds() > 1 ? \" segundos\" : \" segundo\") : \"\"));\r\n\r\n}\r\n\r\n  return(\r\n    <main>\r\n    <div className =\"img_logo\">\r\n      <img src={logo}/>\r\n    </div>\r\n    <div className=\"reloj\">\r\n      <div>\r\n        {dateTime.hours}:{dateTime.minutes}:{dateTime.seconds}\r\n      </div>\r\n    </div>\r\n    <div className=\"nombre_emp\">\r\n    <h1>{mensajeNombre} {mensajeApellido}</h1>\r\n    </div>\r\n      <div className=\"codigo_barra\">\r\n        <input type=\"text\" placeholder='codigo' ref={focusDiv}   onKeyDown={(e) => captura(e)}   onChange={(event) => {setCodigo_Barra(event.target.value);}}/>\r\n      </div>\r\n  \r\n    </main>\r\n  )\r\n}\r\n\r\n  export default App;"]},"metadata":{},"sourceType":"module"}