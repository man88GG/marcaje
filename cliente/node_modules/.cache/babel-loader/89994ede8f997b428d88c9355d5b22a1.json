{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\agarcia\\\\marcaje\\\\cliente\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useRef, useState } from 'react';\nimport logo from './img/logo.jpg';\nimport Reloj from './componentes/Reloj';\nimport Axios from 'axios';\nimport './css/App.css';\nimport { findAllByTestId } from '@testing-library/react'; //consultas de forma asincrona\n//por lo mismo se bugea cuando marcan hora de entrada alm y otros hora salida normal\n//calculo de horas al marcar la ultima vez\n//la forma de limpiar elimina el contenido de los states anteriores y por lo tanto no se puede hacer el procedimiento de actualizar\n//usar el mismo array siempre y que se limpie al finalizar el día(apagar la pc)\n//el array puede bugearse al llenarse excesivamente ?\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst date = new Date();\n\nfunction App() {\n  _s();\n\n  const [mensajeNombre, setMensajeNombre] = useState(null);\n  const [mensajeApellido, setMensajeApellido] = useState(null);\n  const [mensajeHoraEnt, setMensajeHoraEnt] = useState(null);\n  const [mensajeHoraSal, setMensajeHoraSal] = useState(null);\n  const [mensajeHoraEntAlm, setMensajeHoraEntAlm] = useState(null);\n  const [mensajeHoraSalAlm, setMensajeHoraSalAlm] = useState(null);\n  const [controlador1, setControlador1] = useState(\"\");\n  const [controlador2, setControlador2] = useState(\"\");\n  const [controlador3, setControlador3] = useState(\"\");\n  const [controlador4, setControlador4] = useState(\"\");\n  const [controlador5, setControlador5] = useState(\"\");\n  const total_horas = 0; //////\n\n  const [state, setState] = useState('');\n\n  const captura = event => {\n    //condicion para la busqueda e ingreso de datos cuando el lector manda la señal\n    if (event.key === 'Enter') {\n      //se cambia el estado al nombre de la tecla que es presionada, en este caso es la tecla enter\n      setState(event.key); //window.location.href = window.location.href;\n      //se llama a la funcion \n\n      BusquedaEmpleado();\n    }\n  }; ////////\n\n\n  useEffect(() => {\n    setMensajeNombre(response.data[0].nombre);\n  }, []);\n  useEffect(() => {\n    setMensajeApellido(response.data[0].apellido);\n  }, []);\n  useEffect(() => {\n    setMensajeHoraEnt(response.data[0].hra_entrada);\n  }, []);\n  useEffect(() => {\n    setMensajeHoraSal(response.data[0].hra_salida);\n  }, []);\n  useEffect(() => {\n    setMensajeHoraEntAlm(response.data[0].hra_entrada_alm);\n  }, []);\n  useEffect(() => {\n    setMensajeHoraSalAlm(response.data[0].hra_salida_alm);\n  }, []); //se declaran variables para envío de datos del MVC\n\n  const [codigo_barra, setCodigo_Barra] = useState(\"\"); //Se obtiene la fecha actual y se divide en fragmentos para mostrar en el diseño luego\n  /////\n\n  const [dateTime, setDateTime] = useState({\n    hours: date.getHours(),\n    minutes: date.getMinutes(),\n    seconds: date.getSeconds()\n  });\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const date = new Date();\n      setDateTime({\n        hours: date.getHours(),\n        minutes: date.getMinutes(),\n        seconds: date.getSeconds()\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []); /////\n  //hace focus al texbox que obtendrá la variable del codigo barras\n\n  const focusDiv = useRef();\n  useEffect(() => {\n    const focusPermanente = setInterval(() => {\n      if (focusDiv.current) focusDiv.current.focus();\n    }, 100);\n    return () => clearInterval(focusPermanente);\n  }, []); //\n\n  const HandlerOne = e => {\n    // e.preventDefault();\n    setControlador1('Inicia Request al Backend');\n    setTimeout(() => {\n      setControlador1('1');\n    }, 1000);\n  };\n\n  useEffect(() => {\n    if (controlador1 === '1') {\n      ingresoDatos(codigo_barra);\n      HandlerFive();\n    }\n  }, [controlador1]);\n\n  const HandlerTwo = e => {\n    // e.preventDefault();\n    setControlador2('Inicia Request al Backend');\n    setTimeout(() => {\n      setControlador2('2');\n    }, 1000);\n  };\n\n  useEffect(() => {\n    if (controlador2 === '2') {\n      ActualizarDatosHraSalidaAlm(codigo_barra);\n      HandlerFive();\n    }\n  }, [controlador2]);\n\n  const HandlerThree = e => {\n    //e.preventDefault();\n    setControlador3('Inicia Request al Backend');\n    setTimeout(() => {\n      setControlador3('3');\n    }, 1000);\n  };\n\n  useEffect(() => {\n    if (controlador3 === '3') {\n      ActualizarDatosHraEntradaAlm(codigo_barra);\n      HandlerFive();\n    }\n  }, [controlador3]);\n\n  const HandlerFour = e => {\n    // e.preventDefault();\n    setControlador4('Inicia Request al Backend');\n    setTimeout(() => {\n      setControlador4('4');\n    }, 1000);\n  };\n\n  useEffect(() => {\n    if (controlador4 === '4') {\n      ActualizarDatosHraSalida(codigo_barra);\n      HandlerFive();\n    }\n  }, [controlador4]);\n\n  const HandlerFive = e => {\n    // e.preventDefault();\n    setControlador5('Inicia Request al Backend');\n    setTimeout(() => {\n      setControlador5('5');\n    }, 1000);\n  };\n\n  useEffect(() => {\n    if (controlador5 === '5') {//window.location.href = window.location.href;\n    }\n  }, [controlador5]); //insertar datos\n\n  const ingresoDatos = codigo_barra => {\n    Axios.post('http://localhost:3001/DatosMarcajeEmpleado', {\n      codigo_barra: codigo_barra,\n      hora_marcaje: date.toLocaleTimeString(),\n      //se llama a la fecha \n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(() => {\n      console.log(mensajeNombre);\n      console.log(mensajeApellido);\n      console.log(mensajeHoraEnt);\n      console.log(mensajeHoraSal);\n      console.log(mensajeHoraEntAlm);\n      console.log(mensajeHoraSalAlm);\n      console.log(date.toLocaleString());\n      console.log(\"conexion exitosa\");\n      console.log(\"hora:\");\n      console.log(date.toLocaleTimeString());\n      console.log(date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear()); //refresca la pagina para liberar el cargado de memoria de las variables usadas\n      //window.location.href = window.location.href;\n    });\n  }; //\n  //insertar datos\n\n\n  const Bitacora = codigo_barra => {\n    Axios.post('http://localhost:3001/bitacora', {\n      codigo_barra: codigo_barra,\n      //se llama a la fecha y obtiene solamente la hora\n      hora_marcaje: date.toLocaleTimeString(),\n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(() => {});\n  }; //\n  //\n\n\n  const ActualizarDatosHraSalidaAlm = codigo_barra => {\n    Axios.put('http://localhost:3001/actualizarHraSalidaAlm', {\n      codigo_barra: codigo_barra,\n      hora_marcaje: date.toLocaleTimeString(),\n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(() => {\n      //window.location.href = window.location.href;\n      console.log(mensajeNombre);\n      console.log(mensajeApellido);\n      console.log(mensajeHoraEnt);\n      console.log(mensajeHoraSal);\n      console.log(mensajeHoraEntAlm);\n      console.log(mensajeHoraSalAlm);\n    });\n  };\n\n  const ActualizarDatosHraEntradaAlm = codigo_barra => {\n    Axios.put('http://localhost:3001/actualizarHraEntradaAlm', {\n      codigo_barra: codigo_barra,\n      hora_marcaje: date.toLocaleTimeString(),\n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(() => {\n      //window.location.href = window.location.href;\n      console.log(mensajeNombre);\n      console.log(mensajeApellido);\n      console.log(mensajeHoraEnt);\n      console.log(mensajeHoraSal);\n      console.log(mensajeHoraEntAlm);\n      console.log(mensajeHoraSalAlm);\n    });\n  };\n\n  const ActualizarDatosHraSalida = codigo_barra => {\n    Axios.put('http://localhost:3001/actualizarHraSalida', {\n      codigo_barra: codigo_barra,\n      hora_marcaje: date.toLocaleTimeString(),\n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(() => {\n      //window.location.href = window.location.href;\n      console.log(mensajeNombre);\n      console.log(mensajeApellido);\n      console.log(mensajeHoraEnt);\n      console.log(mensajeHoraSal);\n      console.log(mensajeHoraEntAlm);\n      console.log(mensajeHoraSalAlm);\n    });\n  }; //\n  //buscar datos\n\n\n  const BusquedaEmpleado = () => {\n    Axios.post('http://localhost:3001/buscarEmpleado', {\n      codigo_barra: codigo_barra\n    }).then(response => {\n      if (response.data.message) {\n        //muestra mensaje de Empleado no encontrado\n        setMensajeNombre(response.data.message);\n        setMensajeApellido(\"\");\n        HandlerFive();\n      } else {\n        BuscarFechaActual();\n        setMensajeNombre(response.data[0].nombre);\n        setMensajeApellido(response.data[0].apellido);\n      }\n    });\n  }; //\n  //buscar datos\n\n\n  const BuscarFechaActual = () => {\n    Axios.post('http://localhost:3001/buscarFecha', {\n      codigo_barra: codigo_barra,\n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(response => {\n      if (response.data.message) {\n        //Se inserta Hora Entrada\n        console.log(\"============================================================\");\n        console.log(\"Ingreso Marcaje: 0\");\n        console.log(mensajeNombre);\n        console.log(mensajeApellido);\n        console.log(mensajeHoraEnt);\n        console.log(mensajeHoraSal);\n        console.log(mensajeHoraEntAlm);\n        console.log(mensajeHoraSalAlm);\n        console.log(\"============================================================\");\n        HandlerOne();\n        Bitacora();\n      } else {\n        // setMensajeNombre(response.data[0].hra_entrada);\n        /////\n        console.log(\"============================================================\");\n        console.log(mensajeNombre);\n        console.log(mensajeApellido);\n        console.log(mensajeHoraEnt);\n        console.log(mensajeHoraSal);\n        console.log(mensajeHoraEntAlm);\n        console.log(mensajeHoraSalAlm);\n        setMensajeHoraEnt(response.data[0].hra_entrada);\n        setMensajeHoraSalAlm(response.data[0].hra_salida_alm);\n        setMensajeHoraEntAlm(response.data[0].hra_entrada_alm);\n        setMensajeHoraSal(response.data[0].hra_salida);\n        console.log(\"============================================================\");\n        console.log(mensajeNombre);\n        console.log(mensajeApellido);\n        console.log(mensajeHoraEnt);\n        console.log(mensajeHoraSal);\n        console.log(mensajeHoraEntAlm);\n        console.log(mensajeHoraSalAlm);\n        console.log(\"============================================================\");\n\n        if (mensajeHoraEnt != null && mensajeHoraSalAlm == null && mensajeHoraEntAlm == null && mensajeHoraSal == null) {\n          console.log(\"Ingreso mensaje hora Salida Almuerzo: 1\");\n          HandlerTwo(); //ActualizarDatosHraSalidaAlm(codigo_barra);\n\n          Bitacora(codigo_barra);\n        } else {\n          if (mensajeHoraEnt != null && mensajeHoraSalAlm != null && mensajeHoraEntAlm == null && mensajeHoraSal == null) {\n            console.log(\"Ingreso mensaje hora Entrada Almuerzo: 2\");\n            HandlerThree(); // ActualizarDatosHraEntradaAlm(codigo_barra);\n\n            Bitacora();\n          } else {\n            if (mensajeHoraEnt != null && mensajeHoraSalAlm != null && mensajeHoraEntAlm != null && mensajeHoraSal == null) {\n              console.log(\"Ingreso mensaje hora Salida: 3\");\n              HandlerFour(); //ActualizarDatosHraSalida(codigo_barra);\n\n              CalculoTiempoDiario();\n              Bitacora();\n              console.log(\"Marcajes posibles realizados\");\n            } else {\n              if (mensajeHoraEnt != null && mensajeHoraSalAlm != null && mensajeHoraEntAlm != null && mensajeHoraSal != null) {\n                console.log(\"Ya se han realizado todos los marcajes del día: 4\");\n                CalculoTiempoDiario();\n                console.log(mensajeNombre);\n                console.log(mensajeApellido);\n                console.log(mensajeHoraEnt);\n                console.log(mensajeHoraSal);\n                console.log(mensajeHoraEntAlm);\n                console.log(mensajeHoraSalAlm);\n                HandlerFive();\n              } else {\n                console.log(\"El empleado ha realizado un marcaje erróneo 1072022\");\n                HandlerFive();\n              }\n            }\n          }\n        }\n      }\n    });\n  };\n\n  const CalculoTiempoDiario = () => {\n    console.log(\"Hora E: \" + mensajeHoraEnt);\n    console.log(\"Hora S: \" + mensajeHoraSal);\n    var p1 = mensajeHoraSal;\n    var p2 = mensajeHoraEnt;\n    var hora1 = p1.split(\":\"),\n        hora2 = p2.split(\":\"),\n        t1 = new Date(),\n        t2 = new Date(); //Se establecen en arreglos los 3 parametros\n\n    t1.setHours(hora1[0], hora1[1], hora1[2]);\n    t2.setHours(hora2[0], hora2[1], hora2[2]); //Calculo de tiempo laborado diariamente\n\n    t1.setHours(t1.getHours() - t2.getHours(), t1.getMinutes() - t2.getMinutes(), t1.getSeconds() - t2.getSeconds()); //Mensaje de total de Horas\n\n    console.log(\"Total de Tiempo Laborado el día de hoy: \" + (t1.getHours() ? t1.getHours() + (t1.getHours() > 1 ? \" horas\" : \" hora\") : \"\") + (t1.getMinutes() ? \", \" + t1.getMinutes() + (t1.getMinutes() > 1 ? \" minutos\" : \" minuto\") : \"\") + (t1.getSeconds() ? (t1.getHours() || t1.getMinutes() ? \" y \" : \"\") + t1.getSeconds() + (t1.getSeconds() > 1 ? \" segundos\" : \" segundo\") : \"\"));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img_logo\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reloj\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [dateTime.hours, \":\", dateTime.minutes, \":\", dateTime.seconds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nombre_emp\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [mensajeNombre, \" \", mensajeApellido]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"codigo_barra\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: focusDiv,\n        onKeyDown: e => captura(e),\n        onChange: event => {\n          setCodigo_Barra(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 443,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ujOxRh2p5pgH/04xKpAGgTWvhyc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/agarcia/marcaje/cliente/src/App.js"],"names":["React","Component","useEffect","useRef","useState","logo","Reloj","Axios","findAllByTestId","date","Date","App","mensajeNombre","setMensajeNombre","mensajeApellido","setMensajeApellido","mensajeHoraEnt","setMensajeHoraEnt","mensajeHoraSal","setMensajeHoraSal","mensajeHoraEntAlm","setMensajeHoraEntAlm","mensajeHoraSalAlm","setMensajeHoraSalAlm","controlador1","setControlador1","controlador2","setControlador2","controlador3","setControlador3","controlador4","setControlador4","controlador5","setControlador5","total_horas","state","setState","captura","event","key","BusquedaEmpleado","response","data","nombre","apellido","hra_entrada","hra_salida","hra_entrada_alm","hra_salida_alm","codigo_barra","setCodigo_Barra","dateTime","setDateTime","hours","getHours","minutes","getMinutes","seconds","getSeconds","timer","setInterval","clearInterval","focusDiv","focusPermanente","current","focus","HandlerOne","e","setTimeout","ingresoDatos","HandlerFive","HandlerTwo","ActualizarDatosHraSalidaAlm","HandlerThree","ActualizarDatosHraEntradaAlm","HandlerFour","ActualizarDatosHraSalida","post","hora_marcaje","toLocaleTimeString","dia_marcaje","getDate","mes_marcaje","getMonth","periodo_marcaje","getFullYear","then","console","log","toLocaleString","Bitacora","put","message","BuscarFechaActual","CalculoTiempoDiario","p1","p2","hora1","split","hora2","t1","t2","setHours","target","value"],"mappings":"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","sourcesContent":["import React, {Component,useEffect, useRef, useState} from 'react';\r\nimport logo from './img/logo.jpg';\r\nimport Reloj from './componentes/Reloj';\r\nimport Axios from 'axios'\r\nimport './css/App.css';\r\nimport { findAllByTestId } from '@testing-library/react';\r\n\r\n\r\n//consultas de forma asincrona\r\n//por lo mismo se bugea cuando marcan hora de entrada alm y otros hora salida normal\r\n//calculo de horas al marcar la ultima vez\r\n\r\n\r\n//la forma de limpiar elimina el contenido de los states anteriores y por lo tanto no se puede hacer el procedimiento de actualizar\r\n//usar el mismo array siempre y que se limpie al finalizar el día(apagar la pc)\r\n//el array puede bugearse al llenarse excesivamente ?\r\n\r\n\r\nconst date = new Date();\r\n\r\nfunction App (){\r\n\r\nconst[mensajeNombre, setMensajeNombre] =useState(null);\r\nconst[mensajeApellido, setMensajeApellido] =useState(null);\r\nconst[mensajeHoraEnt, setMensajeHoraEnt] =useState(null);\r\nconst[mensajeHoraSal, setMensajeHoraSal] =useState(null);\r\nconst[mensajeHoraEntAlm, setMensajeHoraEntAlm] =useState(null);\r\nconst[mensajeHoraSalAlm, setMensajeHoraSalAlm] =useState(null);\r\nconst[controlador1, setControlador1]=useState(\"\");\r\nconst[controlador2, setControlador2]=useState(\"\");\r\nconst[controlador3, setControlador3]=useState(\"\");\r\nconst[controlador4, setControlador4]=useState(\"\");\r\nconst[controlador5, setControlador5]=useState(\"\");\r\nconst total_horas =0;\r\n\r\n  //////\r\n  const [state, setState] = useState('');\r\n    \r\n  const captura = (event) => {\r\n    //condicion para la busqueda e ingreso de datos cuando el lector manda la señal\r\n    if(event.key==='Enter'){\r\n    //se cambia el estado al nombre de la tecla que es presionada, en este caso es la tecla enter\r\n      setState(event.key);\r\n      //window.location.href = window.location.href;\r\n      //se llama a la funcion \r\n      BusquedaEmpleado();\r\n    }\r\n    \r\n  };\r\n////////\r\n\r\nuseEffect(() => { setMensajeNombre(response.data[0].nombre) }, [])\r\nuseEffect(() => { setMensajeApellido(response.data[0].apellido) }, [])\r\nuseEffect(() => { setMensajeHoraEnt(response.data[0].hra_entrada) }, [])\r\nuseEffect(() => { setMensajeHoraSal(response.data[0].hra_salida) }, [])\r\nuseEffect(() => { setMensajeHoraEntAlm(response.data[0].hra_entrada_alm) }, [])\r\nuseEffect(() => { setMensajeHoraSalAlm(response.data[0].hra_salida_alm) }, [])\r\n\r\n//se declaran variables para envío de datos del MVC\r\nconst [codigo_barra, setCodigo_Barra] = useState(\"\");\r\n\r\n//Se obtiene la fecha actual y se divide en fragmentos para mostrar en el diseño luego\r\n/////\r\n  const [dateTime, setDateTime] = useState({\r\n    hours: date.getHours(),\r\n    minutes: date.getMinutes(),\r\n    seconds: date.getSeconds()\r\n  });\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      const date = new Date();\r\n      setDateTime({\r\n        hours: date.getHours(),\r\n        minutes: date.getMinutes(),\r\n        seconds: date.getSeconds(),\r\n      });\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n/////\r\n\r\n \r\n//hace focus al texbox que obtendrá la variable del codigo barras\r\n  const focusDiv = useRef();\r\nuseEffect(()=>{\r\n  const focusPermanente = setInterval (()=>{\r\n    if(focusDiv.current)focusDiv.current.focus();\r\n  },100);\r\n  return()=>clearInterval(focusPermanente);\r\n},[]);\r\n\r\n\r\n\r\n//\r\nconst HandlerOne=(e)=>{\r\n // e.preventDefault();\r\n  setControlador1('Inicia Request al Backend');\r\nsetTimeout(()=>{\r\n  setControlador1('1')\r\n},1000)\r\n}\r\n\r\nuseEffect(()=>{\r\n  if(controlador1 === '1'){\r\n    ingresoDatos(codigo_barra);\r\n\r\n    HandlerFive();\r\n  }\r\n},[controlador1])\r\n\r\n\r\nconst HandlerTwo=(e)=>{\r\n // e.preventDefault();\r\n  setControlador2('Inicia Request al Backend');\r\nsetTimeout(()=>{\r\n  setControlador2('2')\r\n},1000)\r\n}\r\nuseEffect(()=>{\r\n  if(controlador2 === '2'){\r\n    ActualizarDatosHraSalidaAlm(codigo_barra);\r\n\r\n    HandlerFive();\r\n  }\r\n},[controlador2])\r\n\r\n\r\nconst HandlerThree=(e)=>{\r\n  //e.preventDefault();\r\n  setControlador3('Inicia Request al Backend');\r\nsetTimeout(()=>{\r\n  setControlador3('3')\r\n},1000)\r\n}\r\nuseEffect(()=>{\r\n  if(controlador3 === '3'){\r\n    ActualizarDatosHraEntradaAlm(codigo_barra);\r\n    HandlerFive();\r\n    \r\n  }\r\n},[controlador3])\r\n\r\n\r\nconst HandlerFour=(e)=>{\r\n // e.preventDefault();\r\n  setControlador4('Inicia Request al Backend');\r\nsetTimeout(()=>{\r\n  setControlador4('4')\r\n},1000)\r\n}\r\nuseEffect(()=>{\r\n  if(controlador4 === '4'){\r\n    ActualizarDatosHraSalida(codigo_barra);\r\nHandlerFive();\r\n  }\r\n},[controlador4])\r\n\r\nconst HandlerFive=(e)=>{\r\n  // e.preventDefault();\r\n   setControlador5('Inicia Request al Backend');\r\n setTimeout(()=>{\r\n   setControlador5('5')\r\n },1000)\r\n }\r\n useEffect(()=>{\r\n   if(controlador5 === '5'){\r\n    \r\n     //window.location.href = window.location.href;\r\n   }\r\n },[controlador5])\r\n\r\n\r\n\r\n\r\n//insertar datos\r\nconst ingresoDatos =(codigo_barra)=>{\r\n  Axios.post('http://localhost:3001/DatosMarcajeEmpleado', {    \r\n    codigo_barra: codigo_barra,\r\n    hora_marcaje: date.toLocaleTimeString(),\r\n    //se llama a la fecha \r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n\r\n  }).then(()=>{\r\n\r\n\r\nconsole.log(mensajeNombre);\r\nconsole.log(mensajeApellido);\r\nconsole.log(mensajeHoraEnt);\r\nconsole.log(mensajeHoraSal);\r\nconsole.log(mensajeHoraEntAlm);\r\nconsole.log(mensajeHoraSalAlm);\r\n\r\n\r\n\r\nconsole.log(date.toLocaleString());\r\nconsole.log(\"conexion exitosa\");\r\nconsole.log(\"hora:\");\r\nconsole.log(date.toLocaleTimeString());\r\nconsole.log(date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear());\r\n//refresca la pagina para liberar el cargado de memoria de las variables usadas\r\n//window.location.href = window.location.href;\r\n  });\r\n};\r\n//\r\n\r\n\r\n//insertar datos\r\nconst Bitacora =(codigo_barra)=>{\r\n  Axios.post('http://localhost:3001/bitacora', {    \r\n    codigo_barra: codigo_barra,\r\n    //se llama a la fecha y obtiene solamente la hora\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n}).then(()=>{\r\n\r\n  });\r\n};\r\n//\r\n\r\n\r\n//\r\nconst ActualizarDatosHraSalidaAlm = (codigo_barra)=>{\r\n\r\n  Axios.put('http://localhost:3001/actualizarHraSalidaAlm',{\r\n    codigo_barra:codigo_barra,\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n  \r\n  }).then(()=>{\r\n    //window.location.href = window.location.href;\r\n    console.log(mensajeNombre);\r\n    console.log(mensajeApellido);\r\n    console.log(mensajeHoraEnt);\r\n    console.log(mensajeHoraSal);\r\n    console.log(mensajeHoraEntAlm);\r\n    console.log(mensajeHoraSalAlm);\r\n    \r\n  });  \r\n};\r\n\r\nconst ActualizarDatosHraEntradaAlm = (codigo_barra)=>{\r\n\r\n  Axios.put('http://localhost:3001/actualizarHraEntradaAlm',{\r\n    codigo_barra:codigo_barra,\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n\r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n\r\n  }).then(()=>{\r\n    //window.location.href = window.location.href;\r\n    console.log(mensajeNombre);\r\nconsole.log(mensajeApellido);\r\nconsole.log(mensajeHoraEnt);\r\nconsole.log(mensajeHoraSal);\r\nconsole.log(mensajeHoraEntAlm);\r\nconsole.log(mensajeHoraSalAlm);\r\n \r\n  \r\n  });  \r\n};\r\n\r\nconst ActualizarDatosHraSalida = (codigo_barra)=>{\r\n\r\n  Axios.put('http://localhost:3001/actualizarHraSalida',{\r\n    codigo_barra:codigo_barra,\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n\r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n\r\n  }).then(()=>{\r\n    //window.location.href = window.location.href;\r\n    console.log(mensajeNombre);\r\n    console.log(mensajeApellido);\r\n    console.log(mensajeHoraEnt);\r\n    console.log(mensajeHoraSal);\r\n    console.log(mensajeHoraEntAlm);\r\n    console.log(mensajeHoraSalAlm);\r\n     \r\n  });  \r\n};\r\n//\r\n\r\n\r\n//buscar datos\r\nconst BusquedaEmpleado = () => {\r\n  Axios.post('http://localhost:3001/buscarEmpleado',{\r\n    codigo_barra:codigo_barra,\r\n\r\n}).then((response)=>{\r\n\r\n    if(response.data.message){\r\n        //muestra mensaje de Empleado no encontrado\r\n        setMensajeNombre(response.data.message)\r\n        setMensajeApellido(\"\")\r\n        HandlerFive();\r\n       }else{\r\n\r\n        BuscarFechaActual();\r\n        setMensajeNombre(response.data[0].nombre)\r\n        setMensajeApellido(response.data[0].apellido)\r\n       }\r\n\r\n       });\r\n    };\r\n//\r\n\r\n//buscar datos\r\nconst BuscarFechaActual = () => {\r\n    Axios.post('http://localhost:3001/buscarFecha',{\r\n        codigo_barra:codigo_barra,\r\n        dia_marcaje: date.getDate(),\r\n        mes_marcaje: (date.getMonth()+1),\r\n        periodo_marcaje: date.getFullYear(),\r\n\r\n  }).then((response)=>{\r\n   \r\n    if(response.data.message){\r\n    \r\n        //Se inserta Hora Entrada\r\n        console.log(\"============================================================\")\r\n        console.log(\"Ingreso Marcaje: 0\");\r\n\r\n        console.log(mensajeNombre);\r\n        console.log(mensajeApellido);        \r\n        console.log(mensajeHoraEnt);\r\n        console.log(mensajeHoraSal);\r\n        console.log(mensajeHoraEntAlm);\r\n        console.log(mensajeHoraSalAlm);\r\n    \r\n        console.log(\"============================================================\")\r\n        HandlerOne();\r\n        Bitacora();\r\n        \r\n       }else{\r\n\r\n         // setMensajeNombre(response.data[0].hra_entrada);\r\n         /////\r\n         console.log(\"============================================================\")\r\n         console.log(mensajeNombre);\r\n         console.log(mensajeApellido);\r\n         \r\n         console.log(mensajeHoraEnt);\r\n         console.log(mensajeHoraSal);\r\n         console.log(mensajeHoraEntAlm);\r\n         console.log(mensajeHoraSalAlm);\r\n\r\n            setMensajeHoraEnt(response.data[0].hra_entrada);\r\n            setMensajeHoraSalAlm(response.data[0].hra_salida_alm);\r\n            setMensajeHoraEntAlm(response.data[0].hra_entrada_alm);\r\n            setMensajeHoraSal(response.data[0].hra_salida);\r\n            console.log(\"============================================================\")\r\n            console.log(mensajeNombre);\r\n            console.log(mensajeApellido);\r\n            \r\n            console.log(mensajeHoraEnt);\r\n            console.log(mensajeHoraSal);\r\n            console.log(mensajeHoraEntAlm);\r\n            console.log(mensajeHoraSalAlm);\r\n        \r\n            console.log(\"============================================================\")\r\n           if (mensajeHoraEnt != null && mensajeHoraSalAlm == null && mensajeHoraEntAlm == null && mensajeHoraSal == null){\r\n         console.log(\"Ingreso mensaje hora Salida Almuerzo: 1\");\r\n    \r\n         HandlerTwo();\r\n             //ActualizarDatosHraSalidaAlm(codigo_barra);\r\n             Bitacora(codigo_barra);\r\n             \r\n         }else{\r\n           if(mensajeHoraEnt != null && mensajeHoraSalAlm != null && mensajeHoraEntAlm == null && mensajeHoraSal == null){\r\n             console.log(\"Ingreso mensaje hora Entrada Almuerzo: 2\");\r\n        \r\n             HandlerThree();\r\n            // ActualizarDatosHraEntradaAlm(codigo_barra);\r\n             Bitacora();\r\n         }else{\r\n           if(mensajeHoraEnt != null && mensajeHoraSalAlm != null && mensajeHoraEntAlm != null && mensajeHoraSal == null){\r\n             console.log(\"Ingreso mensaje hora Salida: 3\");\r\n             HandlerFour();\r\n            //ActualizarDatosHraSalida(codigo_barra);\r\n             CalculoTiempoDiario();\r\n             Bitacora();\r\n             console.log(\"Marcajes posibles realizados\");\r\n             }else{\r\n               if(mensajeHoraEnt != null && mensajeHoraSalAlm != null && mensajeHoraEntAlm != null && mensajeHoraSal != null){\r\n                 console.log(\"Ya se han realizado todos los marcajes del día: 4\");\r\n                 CalculoTiempoDiario();\r\n                 console.log(mensajeNombre);\r\n                 console.log(mensajeApellido);\r\n\r\nconsole.log(mensajeHoraEnt);\r\nconsole.log(mensajeHoraSal);\r\nconsole.log(mensajeHoraEntAlm);\r\nconsole.log(mensajeHoraSalAlm);\r\nHandlerFive();\r\n\r\n               }else{\r\n                 console.log(\"El empleado ha realizado un marcaje erróneo 1072022\");\r\n\r\n                 HandlerFive();\r\n                 \r\n               }\r\n             }\r\n           }\r\n         }\r\n         \r\n        }\r\n\r\n    });\r\n  };\r\n\r\n\r\nconst CalculoTiempoDiario =()=>{\r\n\r\n  console.log(\"Hora E: \" + mensajeHoraEnt);\r\n  console.log(\"Hora S: \" + mensajeHoraSal);\r\n \r\n    var p1 = (mensajeHoraSal);\r\n    var p2 = (mensajeHoraEnt);  \r\n    var hora1 = (p1).split(\":\"),\r\n    hora2 = (p2).split(\":\"),\r\n    t1 = new Date(),\r\n    t2 = new Date();\r\n//Se establecen en arreglos los 3 parametros\r\nt1.setHours(hora1[0], hora1[1], hora1[2]);\r\nt2.setHours(hora2[0], hora2[1], hora2[2]);\r\n//Calculo de tiempo laborado diariamente\r\nt1.setHours(t1.getHours() - t2.getHours(), t1.getMinutes() - t2.getMinutes(), t1.getSeconds() - t2.getSeconds());\r\n//Mensaje de total de Horas\r\nconsole.log(\"Total de Tiempo Laborado el día de hoy: \" + (t1.getHours() ? t1.getHours() + (t1.getHours() > 1 ? \" horas\" : \" hora\") : \"\") + (t1.getMinutes() ? \", \" + t1.getMinutes() + (t1.getMinutes() > 1 ? \" minutos\" : \" minuto\") : \"\") + (t1.getSeconds() ? (t1.getHours() || t1.getMinutes() ? \" y \" : \"\") + t1.getSeconds() + (t1.getSeconds() > 1 ? \" segundos\" : \" segundo\") : \"\"));\r\n\r\n}\r\n  return(\r\n    <main>\r\n    <div className =\"img_logo\">\r\n      <img src={logo}/>\r\n    </div>\r\n    <div className=\"reloj\">\r\n      <div>\r\n        {dateTime.hours}:{dateTime.minutes}:{dateTime.seconds}\r\n      </div>\r\n    </div>\r\n    <div className=\"nombre_emp\">\r\n    <h1>{mensajeNombre} {mensajeApellido}</h1>\r\n    </div>\r\n      <div className=\"codigo_barra\">\r\n        <input type=\"text\"  ref={focusDiv}  onKeyDown={(e) => captura(e)}   onChange={(event) => {setCodigo_Barra(event.target.value);}}/>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n  export default App;"]},"metadata":{},"sourceType":"module"}