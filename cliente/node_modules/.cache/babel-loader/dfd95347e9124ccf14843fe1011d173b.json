{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\agarcia\\\\marcaje\\\\cliente\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { Component, useEffect, useRef, useState } from 'react';\nimport logo from './img/logo.jpg';\nimport Reloj from './componentes/Reloj';\nimport Axios from 'axios';\nimport './css/App.css'; //import { findAllByTestId } from '@testing-library/react';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UseAsyncState(initialValue) {\n  _s();\n\n  const [value, setValue] = useState(initialValue);\n\n  const setter = x => new Promise(resolve => {\n    setValue(x);\n    resolve(x);\n  });\n\n  return [value, setter];\n}\n\n_s(UseAsyncState, \"L08zUdRTae9t+nWvf9xbU6NcRrM=\");\n\n_c = UseAsyncState;\n\nfunction App() {\n  _s2();\n\n  const date = new Date();\n  const [mensajeNombre, setMensajeNombre] = UseAsyncState(\"\");\n  const [mensajeApellido, setMensajeApellido] = UseAsyncState(\"\");\n  const [controlador1, setControlador1] = useState(\"\"); //////\n\n  const [state, setState] = useState('');\n\n  const Captura = event => {\n    //condicion para la busqueda e ingreso de datos cuando el lector manda la señal\n    if (event.key === 'Enter') {\n      //se cambia el estado al nombre de la tecla que es presionada, en este caso es la tecla enter\n      setControlador1('0');\n      setState(event.key); //se llama a la funcion \n\n      BusquedaEmpleado();\n    } else {\n      HandlerOne();\n    }\n  }; ////////\n  //se declaran variables para envío de datos del MVC\n\n\n  const [codigo_barra, setCodigo_Barra] = useState(\"\"); //hace focus al texbox que obtendrá la variable del codigo barras\n\n  const focusDiv = useRef(null);\n  useEffect(() => {\n    const focusPermanente = setInterval(() => {\n      //selecciona el texto del input \n      focusDiv.current.blur();\n      if (focusDiv.current) focusDiv.current.focus();\n    }, 500);\n    return () => clearInterval(focusPermanente);\n  }, [focusDiv]);\n\n  const HandlerOne = e => {\n    //e.preventDefault();\n    setControlador1('Inicia Request al Backend');\n    setTimeout(() => {\n      setControlador1('1');\n    }, 300000); //5 min aprox\n  }; //9min = 500000\n  //17min = 1000000\n\n\n  useEffect(() => {\n    if (controlador1 === '1') {\n      window.location.href = window.location.href; //console.log(\"Prueba Hora: \" + horaMarcaje);\n    }\n  }, [controlador1]); //seleccionar todo el contenido \n\n  const handleFocus = event => event.target.select(); //insertar datos\n\n\n  const IngresoDatos = () => {\n    Axios.post('http://localhost:5000/apis/rrh/registrar/registrarMarcaje/:fecha_marcaje/:hra_entrada/:id_empleado', {\n      codigo_barra: codigo_barra,\n      hora_marcaje: date.toLocaleTimeString(),\n      //se llama a la fecha \n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(() => {\n      console.log(date.toLocaleString());\n      console.log(\"conexion exitosa\");\n      console.log(\"hora:\");\n      console.log(date.toLocaleTimeString());\n      console.log(date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear());\n    });\n  }; //\n  //insertar datos\n\n\n  const Bitacora = () => {\n    Axios.post('http://localhost:5000/apis/rrh/registrar/registrarBitacoraMarcaje/:fecha_bitacora_marcaje/:hora_marcaje_bitacora/:id_empleado', {\n      codigo_barra: codigo_barra,\n      //se llama a la fecha y obtiene solamente la hora\n      hora_marcaje: date.toLocaleTimeString(),\n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(() => {});\n  }; //\n\n\n  const ActualizarDatosHraSalida = codigo_barra => {\n    Axios.put('http://localhost:5000/apis/rrh/actualizar/actualizarHraSalidaMarcaje/:id_empleado/:hora_marcaje/:fecha_marcaje', {\n      codigo_barra: codigo_barra,\n      hora_marcaje: date.toLocaleTimeString(),\n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(() => {});\n  }; //\n\n\n  const ActualizarDatosTiempoLaborado = (codigo_barra, tiempo_laborado) => {\n    Axios.put('http://localhost:3001/agregarTiempoLaborado', {\n      codigo_barra: codigo_barra // tiempo_laborado:tiempo_laborado\n\n    }).then(() => {});\n  }; //\n  //buscar datos\n\n\n  const BusquedaEmpleado = () => {\n    Axios.post('http://localhost:5000/apis/rrh/buscar/obtenerEmpleado/' + codigo_barra, {\n      codigo_barra: codigo_barra\n    }).then(response => {\n      if (response.data.message) {\n        console.log(\"code: \" + codigo_barra); //muestra mensaje de Empleado no encontrado\n\n        setMensajeNombre(response.data.message);\n        setMensajeApellido(\"\");\n      } else {\n        BuscarFechaActual(); // setMensajeNombre(response.data[0].nombre)\n        // setMensajeApellido(response.data[0].apellido)\n      }\n    });\n  }; //FuRyu\n  //buscar datos\n\n\n  const BusquedaFechaExistente = () => {\n    Axios.post('http://localhost:5000/apis/rrh/buscar/obtenerFechaExistente/:id_empleado/:fecha_marcaje', {\n      codigo_barra: codigo_barra,\n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(response => {\n      if (response.data.message) {\n        //Fecha que contiene NULL en hra salida\n        console.log(\"Dato No Encontrado\");\n        console.log(response);\n        IngresoDatos(codigo_barra);\n      } else {\n        console.log(response);\n        console.log(\"Dato Encontrado\");\n        ActualizarDatosHraSalida(codigo_barra);\n        Bitacora();\n      }\n    });\n  }; //\n  //buscar datos\n\n\n  const BuscarFechaActual = () => {\n    Axios.post('http://localhost:5000/apis/rrh/buscar/obtenerFechaMarcaje/:id_empleado/:fecha_marcaje', {\n      codigo_barra: codigo_barra,\n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(response => {\n      if (response.data.message) {\n        //No Existe el dato en la busqueda\n        //Se inserta un nuevo Registro con Hora Entrada\n        console.log(\"Ingreso Marcaje: 0\");\n        IngresoDatos(codigo_barra);\n        Bitacora();\n      } else {\n        BusquedaFechaExistente();\n      }\n    });\n  }; //\n  //\n\n\n  const CalculoTiempoDiario = (HoraEnt, HraSal) => {\n    console.log(\"Hora E: \" + HoraEnt);\n    console.log(\"Hora S: \" + HraSal);\n    var ObtieneHraFinal = HraSal;\n    var ObtieneHraInicial = HoraEnt;\n    var HoraFinal = ObtieneHraFinal.split(\":\"),\n        HoraInicial = ObtieneHraInicial.split(\":\"),\n        TiempoMayor = new Date(),\n        TiempoMenor = new Date(); //Se establecen en arreglos los 3 parametros\n\n    TiempoMayor.setHours(HoraFinal[0], HoraFinal[1], HoraFinal[2]);\n    TiempoMenor.setHours(HoraInicial[0], HoraInicial[1], HoraInicial[2]); //Calculo de tiempo laborado diariamente\n\n    TiempoMayor.setHours(TiempoMayor.getHours() - TiempoMenor.getHours(), TiempoMayor.getMinutes() - TiempoMenor.getMinutes(), TiempoMayor.getSeconds() - TiempoMenor.getSeconds());\n    var Horas = TiempoMayor.getHours();\n    var Minutos = TiempoMayor.getMinutes();\n    var Segundos = TiempoMayor.getSeconds();\n\n    if (Horas < 10) {\n      Horas = \"0\" + Horas;\n    }\n\n    if (Minutos < 10) {\n      Minutos = \"0\" + Minutos;\n    }\n\n    if (Segundos < 10) {\n      Segundos = \"0\" + Segundos;\n    }\n\n    var HrasLaboradas = Horas + \":\" + Minutos + \":\" + Segundos;\n    console.log(\"Horas Laboradas: \" + Horas + \":\" + Minutos + \":\" + Segundos);\n    ActualizarDatosTiempoLaborado(codigo_barra, HrasLaboradas);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img_logo\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reloj\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Reloj, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nombre_emp\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [mensajeNombre, \" \", mensajeApellido]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"codigo_barra\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"codigo\",\n        ref: focusDiv,\n        onKeyDown: e => Captura(e),\n        onFocus: handleFocus,\n        onChange: event => {\n          setCodigo_Barra(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 266,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"lF/VOplyWhxiRHq92uDDKbO3kzU=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UseAsyncState\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/Users/agarcia/marcaje/cliente/src/App.js"],"names":["React","Component","useEffect","useRef","useState","logo","Reloj","Axios","UseAsyncState","initialValue","value","setValue","setter","x","Promise","resolve","App","date","Date","mensajeNombre","setMensajeNombre","mensajeApellido","setMensajeApellido","controlador1","setControlador1","state","setState","Captura","event","key","BusquedaEmpleado","HandlerOne","codigo_barra","setCodigo_Barra","focusDiv","focusPermanente","setInterval","current","blur","focus","clearInterval","e","setTimeout","window","location","href","handleFocus","target","select","IngresoDatos","post","hora_marcaje","toLocaleTimeString","dia_marcaje","getDate","mes_marcaje","getMonth","periodo_marcaje","getFullYear","then","console","log","toLocaleString","Bitacora","ActualizarDatosHraSalida","put","ActualizarDatosTiempoLaborado","tiempo_laborado","response","data","message","BuscarFechaActual","BusquedaFechaExistente","CalculoTiempoDiario","HoraEnt","HraSal","ObtieneHraFinal","ObtieneHraInicial","HoraFinal","split","HoraInicial","TiempoMayor","TiempoMenor","setHours","getHours","getMinutes","getSeconds","Horas","Minutos","Segundos","HrasLaboradas"],"mappings":"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","sourcesContent":["import React, {Component,useEffect, useRef, useState} from 'react';\r\nimport logo from './img/logo.jpg';\r\nimport Reloj from './componentes/Reloj';\r\nimport Axios from 'axios'\r\nimport './css/App.css';\r\n//import { findAllByTestId } from '@testing-library/react';\r\n\r\n\r\nfunction UseAsyncState(initialValue) {\r\n  const [value, setValue] = useState(initialValue);\r\n  const setter = x =>\r\n    new Promise(resolve => {\r\n      setValue(x);\r\n      resolve(x);\r\n    });\r\n  return [value, setter];\r\n}\r\n\r\nfunction App (){\r\n  \r\nconst date = new Date();\r\n\r\nconst[mensajeNombre, setMensajeNombre] =UseAsyncState(\"\");\r\nconst[mensajeApellido, setMensajeApellido] =UseAsyncState(\"\");\r\nconst[controlador1, setControlador1]=useState(\"\");\r\n\r\n  //////\r\n  const [state, setState] = useState('');\r\n\r\n  const Captura = (event) => {  \r\n    //condicion para la busqueda e ingreso de datos cuando el lector manda la señal\r\n    if(event.key==='Enter'){\r\n    //se cambia el estado al nombre de la tecla que es presionada, en este caso es la tecla enter\r\n    setControlador1('0')\r\n      setState(event.key);\r\n      \r\n    \r\n      //se llama a la funcion \r\n      BusquedaEmpleado();\r\n    }else{\r\n      HandlerOne();\r\n    }\r\n  };\r\n////////\r\n\r\n//se declaran variables para envío de datos del MVC\r\nconst [codigo_barra, setCodigo_Barra] = useState(\"\");\r\n\r\n//hace focus al texbox que obtendrá la variable del codigo barras\r\nconst focusDiv = useRef(null);\r\nuseEffect(()=>{\r\n  const focusPermanente = setInterval (()=>{\r\n    //selecciona el texto del input \r\n    focusDiv.current.blur();\r\n    if(focusDiv.current)focusDiv.current.focus();\r\n  },500);\r\n  return()=>clearInterval(focusPermanente);\r\n},[focusDiv]);\r\n\r\n\r\n\r\nconst HandlerOne=(e)=>{\r\n  //e.preventDefault();\r\n   setControlador1('Inicia Request al Backend');\r\n setTimeout(()=>{\r\n   setControlador1('1')\r\n },300000)//5 min aprox\r\n }\r\n \r\n //9min = 500000\r\n //17min = 1000000\r\n \r\n useEffect(()=>{\r\n   if(controlador1 === '1'){\r\n    window.location.href = window.location.href;\r\n    //console.log(\"Prueba Hora: \" + horaMarcaje);\r\n   }\r\n },[controlador1])\r\n\r\n \r\n\r\n//seleccionar todo el contenido \r\nconst handleFocus = (event) => event.target.select();\r\n\r\n//insertar datos\r\nconst IngresoDatos =()=>{\r\n  Axios.post('http://localhost:5000/apis/rrh/registrar/registrarMarcaje/:fecha_marcaje/:hra_entrada/:id_empleado', {    \r\n\r\n    codigo_barra: codigo_barra,\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n    //se llama a la fecha \r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n}).then(()=>{\r\n\r\nconsole.log(date.toLocaleString());\r\nconsole.log(\"conexion exitosa\");\r\nconsole.log(\"hora:\");\r\nconsole.log(date.toLocaleTimeString());\r\nconsole.log(date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear());\r\n\r\n  });\r\n};\r\n//\r\n\r\n\r\n//insertar datos\r\nconst Bitacora =()=>{\r\n  Axios.post('http://localhost:5000/apis/rrh/registrar/registrarBitacoraMarcaje/:fecha_bitacora_marcaje/:hora_marcaje_bitacora/:id_empleado', {    \r\n    codigo_barra: codigo_barra,\r\n    //se llama a la fecha y obtiene solamente la hora\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n}).then(()=>{\r\n\r\n  });\r\n};\r\n//\r\n\r\nconst ActualizarDatosHraSalida = (codigo_barra)=>{\r\n\r\n  Axios.put('http://localhost:5000/apis/rrh/actualizar/actualizarHraSalidaMarcaje/:id_empleado/:hora_marcaje/:fecha_marcaje',{\r\n    codigo_barra:codigo_barra,\r\n    \r\n    hora_marcaje:date.toLocaleTimeString(),\r\n\r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n\r\n  }).then(()=>{\r\n  \r\n   \r\n  });  \r\n};\r\n//\r\n\r\nconst ActualizarDatosTiempoLaborado = (codigo_barra,tiempo_laborado)=>{\r\n\r\n  Axios.put('http://localhost:3001/agregarTiempoLaborado',{\r\n    codigo_barra:codigo_barra,\r\n   // tiempo_laborado:tiempo_laborado\r\n\r\n  }).then(()=>{\r\n   \r\n  });  \r\n};\r\n//\r\n\r\n\r\n//buscar datos\r\nconst BusquedaEmpleado = () => {\r\n  Axios.post('http://localhost:5000/apis/rrh/buscar/obtenerEmpleado/'+codigo_barra,{\r\n    codigo_barra:codigo_barra,\r\n\r\n}).then((response)=>{\r\n\r\n    if(response.data.message){\r\n      console.log(\"code: \"+codigo_barra);\r\n        //muestra mensaje de Empleado no encontrado\r\n        setMensajeNombre(response.data.message)\r\n        setMensajeApellido(\"\")\r\n      \r\n       }else{\r\n\r\n        BuscarFechaActual();\r\n       // setMensajeNombre(response.data[0].nombre)\r\n       // setMensajeApellido(response.data[0].apellido)\r\n       }\r\n\r\n       });\r\n    };\r\n//FuRyu\r\n\r\n\r\n//buscar datos\r\nconst BusquedaFechaExistente = () => {\r\n  Axios.post('http://localhost:5000/apis/rrh/buscar/obtenerFechaExistente/:id_empleado/:fecha_marcaje',{\r\n    codigo_barra:codigo_barra,\r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n}).then((response)=>{\r\n\r\n    if(response.data.message){\r\n        //Fecha que contiene NULL en hra salida\r\n       \r\n        console.log(\"Dato No Encontrado\")\r\n        console.log(response);\r\n       \r\n        IngresoDatos(codigo_barra);\r\n\r\n       }else{\r\n        console.log(response);\r\n        console.log(\"Dato Encontrado\")\r\n      \r\n        ActualizarDatosHraSalida(codigo_barra);\r\n        Bitacora();\r\n       }\r\n\r\n       });\r\n    };\r\n//\r\n\r\n//buscar datos\r\nconst BuscarFechaActual = () => {\r\n  Axios.post('http://localhost:5000/apis/rrh/buscar/obtenerFechaMarcaje/:id_empleado/:fecha_marcaje',{\r\n      codigo_barra:codigo_barra,\r\n      dia_marcaje: date.getDate(),\r\n      mes_marcaje: (date.getMonth()+1),\r\n      periodo_marcaje: date.getFullYear(),\r\n\r\n}).then((response)=>{\r\n\r\n  \r\n  if(response.data.message){\r\n      //No Existe el dato en la busqueda\r\n      //Se inserta un nuevo Registro con Hora Entrada\r\n      console.log(\"Ingreso Marcaje: 0\");\r\n      IngresoDatos(codigo_barra);\r\n      Bitacora();\r\n     }else{\r\n      BusquedaFechaExistente();\r\n          }\r\n        \r\n    });\r\n  };\r\n  //\r\n  \r\n//\r\nconst CalculoTiempoDiario =(HoraEnt, HraSal)=>{\r\n  console.log(\"Hora E: \" + HoraEnt);\r\n  console.log(\"Hora S: \" + HraSal);\r\n\r\n  var ObtieneHraFinal = (HraSal);\r\n  var ObtieneHraInicial = (HoraEnt);\r\n\r\n  var HoraFinal = (ObtieneHraFinal).split(\":\"),\r\n      HoraInicial = (ObtieneHraInicial).split(\":\"),\r\n      TiempoMayor = new Date(),\r\n      TiempoMenor = new Date();\r\n\r\n//Se establecen en arreglos los 3 parametros\r\nTiempoMayor.setHours(HoraFinal[0], HoraFinal[1], HoraFinal[2]);\r\nTiempoMenor.setHours(HoraInicial[0], HoraInicial[1], HoraInicial[2]);\r\n//Calculo de tiempo laborado diariamente\r\nTiempoMayor.setHours(TiempoMayor.getHours() - TiempoMenor.getHours(), TiempoMayor.getMinutes() - TiempoMenor.getMinutes(), TiempoMayor.getSeconds() - TiempoMenor.getSeconds());\r\n\r\nvar Horas =TiempoMayor.getHours();\r\nvar Minutos =TiempoMayor.getMinutes();\r\nvar Segundos =TiempoMayor.getSeconds();\r\nif (Horas<10){Horas=\"0\"+Horas;}\r\nif (Minutos<10){Minutos=\"0\"+Minutos;}\r\nif (Segundos<10){Segundos=\"0\"+Segundos;}\r\nvar HrasLaboradas = Horas + \":\"+ Minutos + \":\"+ Segundos;\r\nconsole.log(\"Horas Laboradas: \" + Horas + \":\"+ Minutos + \":\"+ Segundos);\r\n\r\nActualizarDatosTiempoLaborado(codigo_barra,HrasLaboradas);\r\n\r\n}\r\n\r\n  return(\r\n    <main>\r\n    <div className =\"img_logo\">\r\n      <img src={logo}/>\r\n    </div>\r\n    <div className=\"reloj\">\r\n      <div>\r\n      <Reloj></Reloj>\r\n      </div>\r\n    </div>\r\n    <div className=\"nombre_emp\">\r\n    <h1>{mensajeNombre} {mensajeApellido}</h1>\r\n    </div>\r\n      <div className=\"codigo_barra\">\r\n        <input type=\"text\" placeholder='codigo' ref={focusDiv}   onKeyDown={(e) => Captura(e)}  onFocus={handleFocus} onChange={(event) => {setCodigo_Barra(event.target.value);}}/>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\n  export default App;"]},"metadata":{},"sourceType":"module"}