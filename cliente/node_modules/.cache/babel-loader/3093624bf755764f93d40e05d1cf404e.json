{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\agarcia\\\\marcaje\\\\cliente\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useRef, useState } from 'react';\nimport logo from './img/logo.jpg';\nimport Reloj from './componentes/Reloj';\nimport Axios from 'axios';\nimport './css/App.css';\nimport { findAllByTestId } from '@testing-library/react'; //hay un retraso de 30 seg al marcar con el lector\n//ver como obtener los valores al realizar la busqueda la primera vez\n//buscar fecha actual\n//si no hay la inserta y busca empleado (o se llama a si misma la funcion)\n//si hay nomas busca empleado\n//si no existe empleado, mostrar mensaje que no existe\n// si existe, comparar los nulls de las fechas para saber donde insertar\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst date = new Date();\n\nfunction App() {\n  _s();\n\n  const [mensajeNombre, setMensajeNombre] = useState(\"\");\n  const [mensajeApellido, setMensajeApellido] = useState(\"\");\n  const [mensajeHoraEnt, setMensajeHoraEnt] = useState(\"\");\n  const [mensajeHoraSal, setMensajeHoraSal] = useState(\"\");\n  const [mensajeHoraEntAlm, setMensajeHoraEntAlm] = useState(\"\");\n  const [mensajeHoraSalAlm, setMensajeHoraSalAlm] = useState(\"\");\n  const total_horas = 0;\n  const [mensajeBorrar, setMensajeBorrar] = useState([]); //////\n\n  const [state, setState] = useState('');\n\n  const captura = event => {\n    //condicion para la busqueda e ingreso de datos cuando el lector manda la señal\n    if (event.key === 'Enter') {\n      //se cambia el estado al nombre de la tecla que es presionada, en este caso es la tecla enter\n      setState(event.key); //window.location.href = window.location.href;\n      //se llama a la funcion \n\n      busquedaCB();\n    }\n  }; ////////\n  //se declaran variables para envío de datos del MVC\n\n\n  const [codigo_barra, setCodigo_Barra] = useState(\"\"); //Se obtiene la fecha actual y se divide en fragmentos para mostrar en el diseño luego\n  /////\n\n  const [dateTime, setDateTime] = useState({\n    hours: date.getHours(),\n    minutes: date.getMinutes(),\n    seconds: date.getSeconds()\n  });\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const date = new Date();\n      setDateTime({\n        hours: date.getHours(),\n        minutes: date.getMinutes(),\n        seconds: date.getSeconds()\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []); /////\n  //hace focus al texbox que obtendrá la variable del codigo barras\n\n  const focusDiv = useRef();\n  useEffect(() => {\n    if (focusDiv.current) focusDiv.current.focus();\n  }, [focusDiv]); //\n  //contendrá la busqueda del codigo barra\n  //luego de busqueda se hará un if para saber si se ingresa o modifica el campo\n  //insertar datos\n\n  const ingresoFecha = () => {\n    Axios.post('http://localhost:3001/FechaActual', {\n      //codigo_barra: codigo_barra,\n      //se llama a la fecha \n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(() => {\n      console.log(date.toLocaleString());\n      console.log(\"conexion exitosa\");\n      console.log(\"hora:\");\n      console.log(date.toLocaleTimeString());\n      console.log(date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear()); //refresca la pagina para liberar el cargado de memoria de las variables usadas\n      //window.location.href = window.location.href;\n    });\n  }; //\n  //insertar datos\n\n\n  const ingresoDatos = () => {\n    Axios.post('http://localhost:3001/DatosEmpleados', {\n      //codigo_barra: codigo_barra,\n      //se llama a la fecha \n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(() => {\n      console.log(date.toLocaleString());\n      console.log(\"conexion exitosa\");\n      console.log(\"hora:\");\n      console.log(date.toLocaleTimeString());\n      console.log(date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear()); //refresca la pagina para liberar el cargado de memoria de las variables usadas\n      //window.location.href = window.location.href;\n    });\n  }; //\n  //insertar datos\n\n\n  const Bitacora = () => {\n    Axios.post('http://localhost:3001/bitacora', {\n      codigo_barra: codigo_barra,\n      //se llama a la fecha y obtiene solamente la hora\n      hora_marcaje: date.toLocaleTimeString(),\n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(() => {//refresca la pagina para liberar el cargado de memoria de las variables usadas\n      //window.location.href = window.location.href;\n    });\n  }; //\n  //\n\n\n  const ActualizarDatosHraSalidaAlm = codigo_barra => {\n    Axios.put('http://localhost:3001/actualizarHraSalidaAlm', {\n      codigo_barra: codigo_barra,\n      hora_marcaje: date.toLocaleTimeString(),\n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(() => {// window.location.href = window.location.href;\n    });\n  };\n\n  const ActualizarDatosHraEntradaAlm = codigo_barra => {\n    Axios.put('http://localhost:3001/actualizarHraEntradaAlm', {\n      codigo_barra: codigo_barra,\n      hora_marcaje: date.toLocaleTimeString(),\n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(() => {// window.location.href = window.location.href;\n    });\n  };\n\n  const ActualizarDatosHraSalida = codigo_barra => {\n    Axios.put('http://localhost:3001/actualizarHraSalida', {\n      codigo_barra: codigo_barra,\n      hora_marcaje: date.toLocaleTimeString(),\n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(() => {//window.location.href = window.location.href;\n    });\n  }; //\n  //buscar datos\n\n\n  const busquedaCB = () => {\n    Axios.post('http://localhost:3001/buscarEmpleado', {\n      codigo_barra: codigo_barra\n    }).then(response => {\n      if (response.data.message) {\n        //muestra mensaje de Empleado no encontrado\n        setMensajeNombre(response.data.message);\n        setMensajeApellido(\"\"); //window.location.href = window.location.href;\n      } else {\n        //obtiene de la posición 0 del array el elemento de la entidad que se declara luego del punto\n        setMensajeNombre(response.data[0].nombre);\n        setMensajeApellido(response.data[0].apellido);\n        ingresoFecha();\n        console.log(\"pasa a siguiente funcion\");\n        busquedaPr();\n        console.log(\"terminó ambas funciones\");\n      }\n    });\n  }; //\n\n  /*\r\n  useEffect (()=>{\r\n  Axios.get(\"http://localhost:3001/buscarEmpleado2\").then((response)=>{\r\n  setMensajeBorrar(response.data);\r\n  \r\n  });\r\n  }, []);\r\n  */\n  //\n\n\n  const CalculoTiempoDiario = () => {\n    console.log(\"Hora E: \" + mensajeHoraEnt);\n    console.log(\"Hora S: \" + mensajeHoraSal);\n    var p1 = mensajeHoraSal;\n    var p2 = mensajeHoraEnt;\n    var hora1 = p1.split(\":\"),\n        hora2 = p2.split(\":\"),\n        t1 = new Date(),\n        t2 = new Date(); //Se establecen en arreglos los 3 parametros\n\n    t1.setHours(hora1[0], hora1[1], hora1[2]);\n    t2.setHours(hora2[0], hora2[1], hora2[2]); //Calculo de tiempo laborado diariamente\n\n    t1.setHours(t1.getHours() - t2.getHours(), t1.getMinutes() - t2.getMinutes(), t1.getSeconds() - t2.getSeconds()); //Mensaje de total de Horas\n\n    console.log(\"Total de Tiempo Laborado el día de hoy: \" + (t1.getHours() ? t1.getHours() + (t1.getHours() > 1 ? \" horas\" : \" hora\") : \"\") + (t1.getMinutes() ? \", \" + t1.getMinutes() + (t1.getMinutes() > 1 ? \" minutos\" : \" minuto\") : \"\") + (t1.getSeconds() ? (t1.getHours() || t1.getMinutes() ? \" y \" : \"\") + t1.getSeconds() + (t1.getSeconds() > 1 ? \" segundos\" : \" segundo\") : \"\"));\n  };\n\n  const busquedaPr = () => {\n    Axios.post('http://localhost:3001/buscarFecha', {\n      codigo_barra: codigo_barra,\n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(response => {\n      if (response.data.message) {\n        //muestra mensaje de Empleado no encontrado\n        setMensajeNombre(response.data.message); //setMensajeApellido(\"\")\n        //window.location.href = window.location.href;\n      } else {\n        //obtiene de la posición 0 del array el elemento de la entidad que se declara luego del punto\n        //setMensajeNombre(response.data.message)\n        //setMensajeApellido(response.data[0].apellido)\n        setMensajeNombre(response.data[0].hra_entrada); /////\n\n        setMensajeHoraEnt(response.data[0].hra_entrada);\n        setMensajeHoraSalAlm(response.data[0].hra_salida_alm);\n        setMensajeHoraEntAlm(response.data[0].hra_entrada_alm);\n        setMensajeHoraSal(response.data[0].hra_salida); //CalculoTiempoDiario();\n\n        if (mensajeHoraEnt == null && mensajeHoraSalAlm == null && mensajeHoraEntAlm == null && mensajeHoraSal == null) {\n          console.log(\"Ingreso mensaje hora Salida Almuerzo: 1\");\n          ingresoDatos();\n          Bitacora();\n        } else {\n          if (mensajeHoraEnt != null && mensajeHoraSalAlm == null && mensajeHoraEntAlm == null && mensajeHoraSal == null) {\n            console.log(\"Ingreso mensaje hora Salida Almuerzo: 1\");\n            ActualizarDatosHraSalidaAlm(codigo_barra);\n            Bitacora();\n          } else {\n            if (mensajeHoraEnt != null && mensajeHoraSalAlm != null && mensajeHoraEntAlm == null && mensajeHoraSal == null) {\n              console.log(\"Ingreso mensaje hora Entrada Almuerzo: 2\");\n              ActualizarDatosHraEntradaAlm(codigo_barra);\n              Bitacora();\n            } else {\n              if (mensajeHoraEnt != null && mensajeHoraSalAlm != null && mensajeHoraEntAlm != null && mensajeHoraSal == null) {\n                console.log(\"Ingreso mensaje hora Salida: 3\");\n                ActualizarDatosHraSalida(codigo_barra);\n                Bitacora();\n                console.log(\"Marcajes posibles realizados\");\n              } else {\n                if (mensajeHoraEnt != null && mensajeHoraSalAlm != null && mensajeHoraEntAlm != null && mensajeHoraSal != null) {\n                  console.log(\"Ya se han realizado todos los marcajes del día: 4\");\n                  console.log(mensajeHoraEnt);\n                  console.log(mensajeHoraSal); //CalculoTiempoDiario();//\n\n                  /*\r\n                  switch(obtienedato){\r\n                  \r\n                    Case A: \r\n                  \r\n                  }\r\n                  \r\n                  */\n                } else {\n                  console.log(\"El empleado ha realizado un marcaje erróneo 1072022\");\n                }\n              }\n            }\n          }\n        } //////\n        //se obtiene el dato null pero luego del elemento que lo tiene ej:\n        //4 tiene null pero no se muestra, 5 no tiene null pero se muestra el null del 4\n\n\n        if (mensajeNombre === null) {\n          console.log(\"obtiene dato NULL\");\n        } else {\n          console.log(\"valor\"); //console.log(setMensajeNombre);\n        } //setMensajeNombre(response.data[0].hra_entrada)\n        //ingresoDatos();\n        //para la modificacion comparar codigo de barra y fecha actual, luego if para ver si el campo de entrada está en NULL\n        //si es null ingreso hra entrada, de lo contrario ingreso hra salida.\n        //ActualizarDatos(codigo_barra);\n\n      }\n\n      console.log(response);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img_logo\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reloj\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [dateTime.hours, \":\", dateTime.minutes, \":\", dateTime.seconds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nombre_emp\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [mensajeNombre, \" \", mensajeApellido]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"codigo_barra\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"codigo\",\n        ref: focusDiv,\n        onKeyDown: e => captura(e),\n        onChange: event => {\n          setCodigo_Barra(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"probar\",\n        onClick: busquedaCB,\n        children: \"Prueba\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"probar2\",\n        onClick: busquedaPr,\n        children: \"Prueba2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 350,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"E6SXPycRF70+flXKhUCdokAR7Ck=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/agarcia/marcaje/cliente/src/App.js"],"names":["React","Component","useEffect","useRef","useState","logo","Reloj","Axios","findAllByTestId","date","Date","App","mensajeNombre","setMensajeNombre","mensajeApellido","setMensajeApellido","mensajeHoraEnt","setMensajeHoraEnt","mensajeHoraSal","setMensajeHoraSal","mensajeHoraEntAlm","setMensajeHoraEntAlm","mensajeHoraSalAlm","setMensajeHoraSalAlm","total_horas","mensajeBorrar","setMensajeBorrar","state","setState","captura","event","key","busquedaCB","codigo_barra","setCodigo_Barra","dateTime","setDateTime","hours","getHours","minutes","getMinutes","seconds","getSeconds","timer","setInterval","clearInterval","focusDiv","current","focus","ingresoFecha","post","dia_marcaje","getDate","mes_marcaje","getMonth","periodo_marcaje","getFullYear","then","console","log","toLocaleString","toLocaleTimeString","ingresoDatos","Bitacora","hora_marcaje","ActualizarDatosHraSalidaAlm","put","ActualizarDatosHraEntradaAlm","ActualizarDatosHraSalida","response","data","message","nombre","apellido","busquedaPr","CalculoTiempoDiario","p1","p2","hora1","split","hora2","t1","t2","setHours","hra_entrada","hra_salida_alm","hra_entrada_alm","hra_salida","e","target","value"],"mappings":"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","sourcesContent":["import React, {Component,useEffect, useRef, useState} from 'react';\r\nimport logo from './img/logo.jpg';\r\nimport Reloj from './componentes/Reloj';\r\nimport Axios from 'axios'\r\nimport './css/App.css';\r\nimport { findAllByTestId } from '@testing-library/react';\r\n\r\n\r\n//hay un retraso de 30 seg al marcar con el lector\r\n//ver como obtener los valores al realizar la busqueda la primera vez\r\n\r\n\r\n//buscar fecha actual\r\n//si no hay la inserta y busca empleado (o se llama a si misma la funcion)\r\n//si hay nomas busca empleado\r\n//si no existe empleado, mostrar mensaje que no existe\r\n// si existe, comparar los nulls de las fechas para saber donde insertar\r\n\r\n\r\nconst date = new Date();\r\n\r\nfunction App (){\r\n\r\nconst[mensajeNombre, setMensajeNombre] =useState(\"\");\r\nconst[mensajeApellido, setMensajeApellido] =useState(\"\");\r\nconst[mensajeHoraEnt, setMensajeHoraEnt] =useState(\"\");\r\nconst[mensajeHoraSal, setMensajeHoraSal] =useState(\"\");\r\nconst[mensajeHoraEntAlm, setMensajeHoraEntAlm] =useState(\"\");\r\nconst[mensajeHoraSalAlm, setMensajeHoraSalAlm] =useState(\"\");\r\nconst total_horas =0;\r\n\r\nconst[mensajeBorrar, setMensajeBorrar] =useState([]);\r\n\r\n  //////\r\n  const [state, setState] = useState('');\r\n    \r\n\r\n  const captura = (event) => {\r\n    \r\n    //condicion para la busqueda e ingreso de datos cuando el lector manda la señal\r\n    if(event.key==='Enter'){\r\n      \r\n    //se cambia el estado al nombre de la tecla que es presionada, en este caso es la tecla enter\r\n      setState(event.key);\r\n      //window.location.href = window.location.href;\r\n      //se llama a la funcion \r\n      busquedaCB();\r\n      \r\n    }\r\n    \r\n  };\r\n////////\r\n\r\n//se declaran variables para envío de datos del MVC\r\nconst [codigo_barra, setCodigo_Barra] = useState(\"\");\r\n\r\n//Se obtiene la fecha actual y se divide en fragmentos para mostrar en el diseño luego\r\n/////\r\n  const [dateTime, setDateTime] = useState({\r\n    hours: date.getHours(),\r\n    minutes: date.getMinutes(),\r\n    seconds: date.getSeconds()\r\n  });\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      const date = new Date();\r\n      setDateTime({\r\n        hours: date.getHours(),\r\n        minutes: date.getMinutes(),\r\n        seconds: date.getSeconds(),\r\n      });\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n/////\r\n\r\n \r\n//hace focus al texbox que obtendrá la variable del codigo barras\r\n  const focusDiv = useRef();\r\nuseEffect(()=>{\r\n  if(focusDiv.current)focusDiv.current.focus();\r\n},[focusDiv]);\r\n//\r\n\r\n//contendrá la busqueda del codigo barra\r\n//luego de busqueda se hará un if para saber si se ingresa o modifica el campo\r\n\r\n//insertar datos\r\nconst ingresoFecha =()=>{\r\n  Axios.post('http://localhost:3001/FechaActual', {    \r\n    //codigo_barra: codigo_barra,\r\n    //se llama a la fecha \r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n}).then(()=>{\r\n\r\nconsole.log(date.toLocaleString());\r\nconsole.log(\"conexion exitosa\");\r\nconsole.log(\"hora:\");\r\nconsole.log(date.toLocaleTimeString());\r\nconsole.log(date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear());\r\n//refresca la pagina para liberar el cargado de memoria de las variables usadas\r\n//window.location.href = window.location.href;\r\n  });\r\n};\r\n//\r\n\r\n//insertar datos\r\nconst ingresoDatos =()=>{\r\n  Axios.post('http://localhost:3001/DatosEmpleados', {    \r\n    //codigo_barra: codigo_barra,\r\n    //se llama a la fecha \r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n}).then(()=>{\r\n\r\nconsole.log(date.toLocaleString());\r\nconsole.log(\"conexion exitosa\");\r\nconsole.log(\"hora:\");\r\nconsole.log(date.toLocaleTimeString());\r\nconsole.log(date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear());\r\n//refresca la pagina para liberar el cargado de memoria de las variables usadas\r\n//window.location.href = window.location.href;\r\n  });\r\n};\r\n//\r\n\r\n\r\n//insertar datos\r\nconst Bitacora =()=>{\r\n  Axios.post('http://localhost:3001/bitacora', {    \r\n    codigo_barra: codigo_barra,\r\n    //se llama a la fecha y obtiene solamente la hora\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n}).then(()=>{\r\n//refresca la pagina para liberar el cargado de memoria de las variables usadas\r\n//window.location.href = window.location.href;\r\n  });\r\n};\r\n//\r\n\r\n\r\n//\r\nconst ActualizarDatosHraSalidaAlm = (codigo_barra)=>{\r\n\r\n  Axios.put('http://localhost:3001/actualizarHraSalidaAlm',{\r\n    codigo_barra:codigo_barra,\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n  \r\n  }).then(()=>{\r\n   // window.location.href = window.location.href;\r\n    \r\n  });  \r\n};\r\n\r\nconst ActualizarDatosHraEntradaAlm = (codigo_barra)=>{\r\n\r\n  Axios.put('http://localhost:3001/actualizarHraEntradaAlm',{\r\n    codigo_barra:codigo_barra,\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n\r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n\r\n  }).then(()=>{\r\n   // window.location.href = window.location.href;\r\n    \r\n  \r\n  });  \r\n};\r\n\r\nconst ActualizarDatosHraSalida = (codigo_barra)=>{\r\n\r\n  Axios.put('http://localhost:3001/actualizarHraSalida',{\r\n    codigo_barra:codigo_barra,\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n\r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n\r\n  }).then(()=>{\r\n    //window.location.href = window.location.href;\r\n    \r\n  });  \r\n};\r\n//\r\n\r\n//buscar datos\r\nconst busquedaCB = () => {\r\n  Axios.post('http://localhost:3001/buscarEmpleado',{\r\n    codigo_barra:codigo_barra\r\n  \r\n}).then((response)=>{\r\n\r\n if(response.data.message){\r\n   //muestra mensaje de Empleado no encontrado\r\n  setMensajeNombre(response.data.message)\r\n  setMensajeApellido(\"\")\r\n  //window.location.href = window.location.href;\r\n }else{\r\n   //obtiene de la posición 0 del array el elemento de la entidad que se declara luego del punto\r\n   setMensajeNombre(response.data[0].nombre)\r\n   setMensajeApellido(response.data[0].apellido)\r\n   ingresoFecha();\r\n   console.log(\"pasa a siguiente funcion\")\r\n   busquedaPr();\r\n   console.log(\"terminó ambas funciones\")\r\n  }\r\n  });\r\n};\r\n//\r\n\r\n/*\r\nuseEffect (()=>{\r\nAxios.get(\"http://localhost:3001/buscarEmpleado2\").then((response)=>{\r\nsetMensajeBorrar(response.data);\r\n\r\n});\r\n}, []);\r\n*/\r\n\r\n//\r\nconst CalculoTiempoDiario =()=>{\r\n\r\n  console.log(\"Hora E: \" + mensajeHoraEnt);\r\n  console.log(\"Hora S: \" + mensajeHoraSal);\r\n  var p1 = (mensajeHoraSal);\r\n  var p2 = (mensajeHoraEnt);\r\n  var hora1 = (p1).split(\":\"),\r\n      hora2 = (p2).split(\":\"),\r\n      t1 = new Date(),\r\n      t2 = new Date();\r\n//Se establecen en arreglos los 3 parametros\r\nt1.setHours(hora1[0], hora1[1], hora1[2]);\r\nt2.setHours(hora2[0], hora2[1], hora2[2]);\r\n//Calculo de tiempo laborado diariamente\r\nt1.setHours(t1.getHours() - t2.getHours(), t1.getMinutes() - t2.getMinutes(), t1.getSeconds() - t2.getSeconds());\r\n//Mensaje de total de Horas\r\nconsole.log(\"Total de Tiempo Laborado el día de hoy: \" + (t1.getHours() ? t1.getHours() + (t1.getHours() > 1 ? \" horas\" : \" hora\") : \"\") + (t1.getMinutes() ? \", \" + t1.getMinutes() + (t1.getMinutes() > 1 ? \" minutos\" : \" minuto\") : \"\") + (t1.getSeconds() ? (t1.getHours() || t1.getMinutes() ? \" y \" : \"\") + t1.getSeconds() + (t1.getSeconds() > 1 ? \" segundos\" : \" segundo\") : \"\"));\r\n\r\n}\r\n\r\n\r\nconst busquedaPr = () => {\r\n  Axios.post('http://localhost:3001/buscarFecha',{\r\n    codigo_barra:codigo_barra,\r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n\r\n}).then((response)=>{\r\n\r\n if(response.data.message){\r\n   //muestra mensaje de Empleado no encontrado\r\n  setMensajeNombre(response.data.message);\r\n  //setMensajeApellido(\"\")\r\n  //window.location.href = window.location.href;\r\n }else{\r\n   //obtiene de la posición 0 del array el elemento de la entidad que se declara luego del punto\r\n   //setMensajeNombre(response.data.message)\r\n   //setMensajeApellido(response.data[0].apellido)\r\n   \r\n   setMensajeNombre(response.data[0].hra_entrada);\r\n/////\r\n   setMensajeHoraEnt(response.data[0].hra_entrada)\r\n   setMensajeHoraSalAlm(response.data[0].hra_salida_alm)\r\n   setMensajeHoraEntAlm(response.data[0].hra_entrada_alm)\r\n   setMensajeHoraSal(response.data[0].hra_salida)\r\n   \r\n   //CalculoTiempoDiario();\r\n   if (mensajeHoraEnt == null && mensajeHoraSalAlm == null && mensajeHoraEntAlm == null && mensajeHoraSal == null){\r\n    console.log(\"Ingreso mensaje hora Salida Almuerzo: 1\");\r\n        ingresoDatos();\r\n        Bitacora();\r\n    }else{\r\n  if (mensajeHoraEnt != null && mensajeHoraSalAlm == null && mensajeHoraEntAlm == null && mensajeHoraSal == null){\r\nconsole.log(\"Ingreso mensaje hora Salida Almuerzo: 1\");\r\n    ActualizarDatosHraSalidaAlm(codigo_barra);\r\n    Bitacora();\r\n}else{\r\n  if(mensajeHoraEnt != null && mensajeHoraSalAlm != null && mensajeHoraEntAlm == null && mensajeHoraSal == null){\r\n    console.log(\"Ingreso mensaje hora Entrada Almuerzo: 2\");\r\n    ActualizarDatosHraEntradaAlm(codigo_barra);\r\n    Bitacora();\r\n}else{\r\n  if(mensajeHoraEnt != null && mensajeHoraSalAlm != null && mensajeHoraEntAlm != null && mensajeHoraSal == null){\r\n    console.log(\"Ingreso mensaje hora Salida: 3\");\r\n\r\n    ActualizarDatosHraSalida(codigo_barra);\r\n    Bitacora();\r\n    console.log(\"Marcajes posibles realizados\");\r\n    }else{\r\n      if(mensajeHoraEnt != null && mensajeHoraSalAlm != null && mensajeHoraEntAlm != null && mensajeHoraSal != null){\r\n        console.log(\"Ya se han realizado todos los marcajes del día: 4\");\r\n        \r\n\r\n        console.log(mensajeHoraEnt);\r\n        console.log(mensajeHoraSal);\r\n        //CalculoTiempoDiario();//\r\n\r\n        /*\r\n        switch(obtienedato){\r\n        \r\n          Case A: \r\n        \r\n        }\r\n        \r\n        */\r\n      }else{\r\n        console.log(\"El empleado ha realizado un marcaje erróneo 1072022\");\r\n        } \r\n      }\r\n    }\r\n  }\r\n}\r\n//////\r\n\r\n   //se obtiene el dato null pero luego del elemento que lo tiene ej:\r\n   //4 tiene null pero no se muestra, 5 no tiene null pero se muestra el null del 4\r\n    if(mensajeNombre === null){\r\n    console.log(\"obtiene dato NULL\");\r\n    }else{\r\n    console.log(\"valor\");\r\n    //console.log(setMensajeNombre);\r\n   \r\n    }\r\n    //setMensajeNombre(response.data[0].hra_entrada)\r\n\r\n    //ingresoDatos();\r\n    //para la modificacion comparar codigo de barra y fecha actual, luego if para ver si el campo de entrada está en NULL\r\n    //si es null ingreso hra entrada, de lo contrario ingreso hra salida.\r\n    //ActualizarDatos(codigo_barra);\r\n    }\r\n    console.log(response);\r\n    });\r\n\r\n};\r\n\r\n  return(\r\n    <main>\r\n    <div className =\"img_logo\">\r\n      <img src={logo}/>\r\n    </div>\r\n    <div className=\"reloj\">\r\n      <div>\r\n        {dateTime.hours}:{dateTime.minutes}:{dateTime.seconds}\r\n      </div>\r\n    </div>\r\n    <div className=\"nombre_emp\">\r\n    <h1>{mensajeNombre} {mensajeApellido}</h1>\r\n    </div>\r\n      <div className=\"codigo_barra\">\r\n        <input type=\"text\" placeholder='codigo' ref={focusDiv}   onKeyDown={(e) => captura(e)}     onChange={(event) => {setCodigo_Barra(event.target.value);}}/>\r\n      </div>\r\n      <div>\r\n        <button id=\"probar\" onClick={busquedaCB}>Prueba</button>\r\n      </div>\r\n  <div>\r\n  <button id=\"probar2\" onClick={busquedaPr}>Prueba2</button>\r\n \r\n  </div>\r\n    </main>\r\n  )\r\n}\r\n\r\n  export default App;"]},"metadata":{},"sourceType":"module"}