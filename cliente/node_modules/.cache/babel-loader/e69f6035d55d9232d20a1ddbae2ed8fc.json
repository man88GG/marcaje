{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\agarcia\\\\marcaje\\\\cliente\\\\src\\\\App.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { Component, useEffect, useRef, useState } from 'react';\nimport logo from './img/logo.jpg';\nimport Reloj from './componentes/Reloj';\nimport Axios from 'axios';\nimport './css/App.css'; //\n//hay un retraso de 30 seg al marcar con el lector\n//ver como hacer la busqueda y retornar el nombre del empleado\n//ver como se pasa la hora en una variable\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst date = new Date();\n\nfunction App() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  //////\n  const [state, setState] = useState('');\n\n  const handler = event => {\n    //condicion para la busqueda e ingreso de datos cuando el lector manda la señal\n    if (event.key === 'Enter') {\n      //se cambia el estado al nombre de la tecla que es presionada, en este caso es la tecla enter\n      setState(event.key); //se llama a la funcion \n\n      procMarcaje();\n    }\n  }; ////////\n  //se declaran variables para envío de datos del MVC\n\n\n  const [codigo_barra, setCodigo_Barra] = useState(\"\");\n  const [hora_marcaje, setHora_Marcaje] = useState(\"\");\n  const prueba = new Date(); //hace focus al texbox que obtendrá la variable del codigo barras\n\n  const focusDiv = useRef();\n  useEffect(() => {\n    if (focusDiv.current) focusDiv.current.focus();\n  }, [focusDiv]); //\n  //contendrá la busqueda del codigo barra\n  //luego de busqueda se hará un if para saber si se ingresa o modifica el campo\n\n  const procMarcaje = () => {\n    _s();\n\n    //Se obtiene la fecha actual y se divide en fragmentos para mostrar en el diseño luego\n    /////\n    const [dateTime, setDateTime] = useState({\n      hours: date.getHours(),\n      minutes: date.getMinutes(),\n      seconds: date.getSeconds()\n    });\n    useEffect(() => {\n      const timer = setInterval(() => {\n        const date = new Date();\n        setDateTime({\n          hours: date.getHours(),\n          minutes: date.getMinutes(),\n          seconds: date.getSeconds()\n        });\n      }, 1000);\n      return () => clearInterval(timer);\n    }, []); /////\n    //Aún se guarda el valor\n\n    ingresoDatos(); //para la modificacion comparar codigo de barra y fecha actual, luego if para ver si el campo de entrada está en NULL\n    //si es null ingreso hra entrada, de lo contrario ingreso hra salida.\n\n    getLista(codigo_barra, hora_marcaje);\n  }; //\n  //insertar datos\n\n\n  _s(procMarcaje, \"NZesCVg8yYBuNLDrhFBFJr0wZsY=\");\n\n  const ingresoDatos = () => {\n    Axios.post('http://localhost:3001/create', {\n      codigo_barra: codigo_barra,\n      //se llama a la fecha y obtiene solamente la hora\n      hora_marcaje: date.toLocaleTimeString()\n    }).then(() => {\n      console.log(\"conexion exitosa\");\n      console.log(\"hora:\");\n      console.log(date.toLocaleTimeString());\n      console.log(date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear()); //refresca la pagina para liberar el cargado de memoria de las variables usadas\n      //window.location.href = window.location.href;\n    });\n  }; //\n  //\n\n\n  const getLista = (codigo_barra, hora_marcaje) => {\n    //si pasa el dato\n    if (hora_marcaje == \"\") {\n      console.log(\"Hay null:\" + hora_marcaje);\n    } else {\n      console.log(\"No hay Null, el valor es:\" + hora_marcaje);\n    }\n\n    console.log(\"Busqueda del codigo: \" + codigo_barra);\n    Axios.put('http://localhost:3001/buscado', {\n      codigo_barra: codigo_barra\n    }).then();\n  }; //\n  //se manda a llamar al archivo .js en este caso es el <index/>\n  //se le da nombre a la clase, en este caso App\n\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img_logo\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reloj\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [dateTime.hours, \":\", dateTime.minutes, \":\", dateTime.seconds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nombre_emp\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        id: \"nombre\",\n        children: \"Nombre Empleado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"codigo_barra\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"codigo\",\n        ref: focusDiv,\n        onKeyDown: e => handler(e),\n        onChange: event => {\n          setCodigo_Barra(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"probar\",\n        onClick: procMarcaje,\n        children: \"Prueba\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"0Ed63lqF/Zp7AJgqPzE+gHI5G0M=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/agarcia/marcaje/cliente/src/App.js"],"names":["React","Component","useEffect","useRef","useState","logo","Reloj","Axios","date","Date","App","state","setState","handler","event","key","procMarcaje","codigo_barra","setCodigo_Barra","hora_marcaje","setHora_Marcaje","prueba","focusDiv","current","focus","dateTime","setDateTime","hours","getHours","minutes","getMinutes","seconds","getSeconds","timer","setInterval","clearInterval","ingresoDatos","getLista","post","toLocaleTimeString","then","console","log","getDate","getMonth","getFullYear","put","e","target","value"],"mappings":"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","sourcesContent":["import React, {Component,useEffect, useRef, useState} from 'react';\nimport logo from './img/logo.jpg';\nimport Reloj from './componentes/Reloj';\nimport Axios from 'axios'\nimport './css/App.css';\n\n//\n//hay un retraso de 30 seg al marcar con el lector\n//ver como hacer la busqueda y retornar el nombre del empleado\n//ver como se pasa la hora en una variable\n\nconst date = new Date();\n\nfunction App (){\n\n  //////\n  const [state, setState] = useState('');\n    \n  const handler = (event) => {\n    \n    //condicion para la busqueda e ingreso de datos cuando el lector manda la señal\n    if(event.key==='Enter'){\n    //se cambia el estado al nombre de la tecla que es presionada, en este caso es la tecla enter\n      setState(event.key);\n      //se llama a la funcion \n      procMarcaje();\n    }\n    \n  };\n////////\n\n//se declaran variables para envío de datos del MVC\nconst [codigo_barra, setCodigo_Barra] = useState(\"\");\nconst [hora_marcaje, setHora_Marcaje]= useState(\"\");\nconst prueba = new Date();\n\n\n \n\n//hace focus al texbox que obtendrá la variable del codigo barras\n  const focusDiv = useRef();\nuseEffect(()=>{\n  if(focusDiv.current)focusDiv.current.focus();\n},[focusDiv]);\n//\n\n//contendrá la busqueda del codigo barra\n//luego de busqueda se hará un if para saber si se ingresa o modifica el campo\nconst procMarcaje=()=>{\n  \n  //Se obtiene la fecha actual y se divide en fragmentos para mostrar en el diseño luego\n/////\nconst [dateTime, setDateTime] = useState({\n  hours: date.getHours(),\n  minutes: date.getMinutes(),\n  seconds: date.getSeconds()\n});\nuseEffect(() => {\n  const timer = setInterval(() => {\n    const date = new Date();\n    setDateTime({\n      hours: date.getHours(),\n      minutes: date.getMinutes(),\n      seconds: date.getSeconds(),\n    });\n  }, 1000);\n  return () => clearInterval(timer);\n}, []);\n/////\n\n//Aún se guarda el valor\n  \n  ingresoDatos();\n  //para la modificacion comparar codigo de barra y fecha actual, luego if para ver si el campo de entrada está en NULL\n  //si es null ingreso hra entrada, de lo contrario ingreso hra salida.\n  getLista(codigo_barra,hora_marcaje);\n\n};\n//\n\n//insertar datos\nconst ingresoDatos =()=>{\n  Axios.post('http://localhost:3001/create', {  \n\n    codigo_barra: codigo_barra,\n    //se llama a la fecha y obtiene solamente la hora\n    hora_marcaje:date.toLocaleTimeString(),\n    \n}).then(()=>{\nconsole.log(\"conexion exitosa\");\nconsole.log(\"hora:\");\nconsole.log(date.toLocaleTimeString());\nconsole.log(date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear());\n//refresca la pagina para liberar el cargado de memoria de las variables usadas\n//window.location.href = window.location.href;\n  });\n};\n//\n\n//\nconst getLista = (codigo_barra,hora_marcaje)=>{\n\n//si pasa el dato\n  if(hora_marcaje == \"\"){\n    console.log(\"Hay null:\" + hora_marcaje);\n  }else{\n    console.log(\"No hay Null, el valor es:\" + hora_marcaje);\n  }\n\n  console.log(\"Busqueda del codigo: \" + codigo_barra)\n\n  Axios.put('http://localhost:3001/buscado',{codigo_barra:codigo_barra}).then(\n    \n  );  \n};\n//\n\n\n//se manda a llamar al archivo .js en este caso es el <index/>\n//se le da nombre a la clase, en este caso App\n  return(\n    <main>\n    <div className =\"img_logo\">\n      <img src={logo}/>\n    </div>\n    <div className=\"reloj\">\n      <div>\n        {dateTime.hours}:{dateTime.minutes}:{dateTime.seconds}\n      </div>\n    </div>\n    <div className=\"nombre_emp\">\n      <label id=\"nombre\">Nombre Empleado</label>\n    </div>\n      <div className=\"codigo_barra\">\n        <input type=\"text\" placeholder='codigo' ref={focusDiv}   onKeyDown={(e) => handler(e)}     onChange={(event) => {setCodigo_Barra(event.target.value);}}/>\n      </div>\n      <div>\n        <button id=\"probar\" onClick={procMarcaje}>Prueba</button>\n      </div>\n  \n    </main>\n  )\n}\n  export default App;\n"]},"metadata":{},"sourceType":"module"}