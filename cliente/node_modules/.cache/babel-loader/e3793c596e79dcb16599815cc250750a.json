{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\agarcia\\\\marcaje\\\\cliente\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useRef, useState } from 'react';\nimport logo from './img/logo.jpg';\nimport Reloj from './componentes/Reloj';\nimport Keydown, { Keys } from 'react-keydown';\nimport Alerta from './componentes/Detectar_Click';\nimport Axios from 'axios';\nimport './css/App.css';\n/*\nfunction useEnterKey(key, cb){\n  const callbackRef = useRef(cb);\n  \n  useEffect(()=> {\n    callbackRef.current = cb;\n  });\n  \n  useEffect(()=>{\n    function handle(event){\n      if(event.code ===key){\n        callbackRef.current(event);\n      }\n    }\n\n    document.addEventListener(\"keypress\",handle);\n    return()=>document.removeEventListener(\"keypress\",handle);\n\n  },[key]);\n}*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst date = new Date();\n\nfunction App() {\n  _s();\n\n  //////\n  const [state, setState] = useState('');\n\n  const handler = event => {\n    // changing the state to the name of the key\n    // which is pressed\n    if (event.key === 'Enter') {\n      setState(event.key);\n      ingresoDatos();\n    }\n  }; ////////\n  //se declaran variables para envío de datos del MVC\n\n\n  const [codigo_barra, setCodigo_Barra] = useState(\"\");\n  const [hora_marcaje, setHora_Marcaje] = useState([]); //Se obtiene la fecha actual y se divide en fragmentos para mostrar en el diseño luego\n  /////\n\n  const [dateTime, setDateTime] = useState({\n    hours: date.getHours(),\n    minutes: date.getMinutes(),\n    seconds: date.getSeconds()\n  });\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const date = new Date();\n      setDateTime({\n        hours: date.getHours(),\n        minutes: date.getMinutes(),\n        seconds: date.getSeconds()\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []); /////\n\n  /*\n  function handleEnter(){\n  console.log(\"Enter presionado\");\n  }\n  useEnterKey(\"Enter\", handleEnter)*/\n  //hace focus al texbox que obtendrá la variable del codigo barras\n\n  const focusDiv = useRef();\n  useEffect(() => {\n    if (focusDiv.current) focusDiv.current.focus();\n  }, [focusDiv]); //contendrá la busqueda del codigo barra\n  //luego de busqueda se hará un if para saber si se ingresa o modifica el campo\n\n  const procMarcaje = () => {\n    ingresoDatos(); //para la modificacion comparar codigo de barra y fecha actual, luego if para ver si el campo de entrada está en NULL\n    //si es null ingreso hra entrada, de lo contrario ingreso hra salida.\n  }; //\n  //insertar datos\n\n\n  const ingresoDatos = () => {\n    Axios.post('http://localhost:3001/create', {\n      codigo_barra: codigo_barra,\n      //se llama a la fecha y obtiene solamente la hora\n      hora_marcaje: date.toLocaleTimeString()\n    }).then(() => {\n      console.log(\"conexion exitosa\");\n      console.log(\"hora:\");\n      console.log(date.toLocaleTimeString());\n      console.log(date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear());\n    });\n  }; //\n\n  /*\n  //buscar datos\n  const busquedaCB=()=>{\n  Axios.get('http://localhost:3001/search',{codigo_barra:codigo_barra}).then(\n    (response)=>{\n      setHora_Marcaje(hora_marcaje.map((val)=>{\n        return val.codigo_barra == codigo_barra ? {id: val.codigo_barra, horae: hora_marcaje}:val;\n  \n      }));\n      alert(\"busqueda\");\n  \n    });\n  \n  };\n  //\n  */\n\n\n  const busquedaCB = () => {\n    Axios.get('http://localhost:3001/buscar').then(response => {\n      setHora_Marcaje(response.data);\n    });\n  }; //se manda a llamar al archivo .js en este caso es el <index/>\n  //se le da nombre a la clase, en este caso App\n\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img_logo\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"watchmen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [dateTime.hours, \":\", dateTime.minutes, \":\", dateTime.seconds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nombre_emp\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        id: \"nombre\",\n        children: \"Nombre Empleado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prueba\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"codigo\",\n        ref: focusDiv,\n        onKeyDown: e => handler(e),\n        onChange: event => {\n          setCodigo_Barra(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"probar\",\n        onClick: procMarcaje,\n        children: \"Prueba\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SUPERBOTON\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: busquedaCB,\n        children: \"Prueba22\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), hora_marcaje.map((val, key) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"muestra\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Cod B : \", val.barra]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Hora: \", val.horaE]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Hora2: \", val.horaS]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pHDAlQyJnLmpUimTfWb/lw0fkKo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/agarcia/marcaje/cliente/src/App.js"],"names":["React","Component","useEffect","useRef","useState","logo","Reloj","Keydown","Keys","Alerta","Axios","date","Date","App","state","setState","handler","event","key","ingresoDatos","codigo_barra","setCodigo_Barra","hora_marcaje","setHora_Marcaje","dateTime","setDateTime","hours","getHours","minutes","getMinutes","seconds","getSeconds","timer","setInterval","clearInterval","focusDiv","current","focus","procMarcaje","post","toLocaleTimeString","then","console","log","getDate","getMonth","getFullYear","busquedaCB","get","response","data","e","target","value","map","val","barra","horaE","horaS"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAAyBC,SAAzB,EAAoCC,MAApC,EAA4CC,QAA5C,QAA2D,OAA3D;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,OAAP,IAAiBC,IAAjB,QAA4B,eAA5B;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAKA,MAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAIb;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMY,OAAO,GAAIC,KAAD,IAAW;AACvB;AACF;AACA,QAAGA,KAAK,CAACC,GAAN,KAAY,OAAf,EAAuB;AAErBH,MAAAA,QAAQ,CAACE,KAAK,CAACC,GAAP,CAAR;AACAC,MAAAA,YAAY;AACb;AAEF,GATD,CAPa,CAiBf;AAIE;;;AACF,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACkB,YAAD,EAAeC,eAAf,IAAiCnB,QAAQ,CAAC,EAAD,CAA/C,CAvBe,CA2Bf;AACA;;AACE,QAAM,CAACoB,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAAC;AACvCsB,IAAAA,KAAK,EAAEf,IAAI,CAACgB,QAAL,EADgC;AAEvCC,IAAAA,OAAO,EAAEjB,IAAI,CAACkB,UAAL,EAF8B;AAGvCC,IAAAA,OAAO,EAAEnB,IAAI,CAACoB,UAAL;AAH8B,GAAD,CAAxC;AAKA7B,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM8B,KAAK,GAAGC,WAAW,CAAC,MAAM;AAC9B,YAAMtB,IAAI,GAAG,IAAIC,IAAJ,EAAb;AAEAa,MAAAA,WAAW,CAAC;AACVC,QAAAA,KAAK,EAAEf,IAAI,CAACgB,QAAL,EADG;AAEVC,QAAAA,OAAO,EAAEjB,IAAI,CAACkB,UAAL,EAFC;AAGVC,QAAAA,OAAO,EAAEnB,IAAI,CAACoB,UAAL;AAHC,OAAD,CAAX;AAMD,KATwB,EAStB,IATsB,CAAzB;AAWA,WAAO,MAAMG,aAAa,CAACF,KAAD,CAA1B;AACD,GAbQ,EAaN,EAbM,CAAT,CAlCa,CAgDf;;AAEE;AACF;AACA;AACA;AACA;AAGA;;AACE,QAAMG,QAAQ,GAAGhC,MAAM,EAAvB;AACFD,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAGiC,QAAQ,CAACC,OAAZ,EAAoBD,QAAQ,CAACC,OAAT,CAAiBC,KAAjB;AACrB,GAFQ,EAEP,CAACF,QAAD,CAFO,CAAT,CA3De,CAgEf;AACA;;AACA,QAAMG,WAAW,GAAC,MAAI;AAEpBnB,IAAAA,YAAY,GAFQ,CAGpB;AACA;AAGD,GAPD,CAlEe,CA0Ef;AAEA;;;AACA,QAAMA,YAAY,GAAE,MAAI;AACtBT,IAAAA,KAAK,CAAC6B,IAAN,CAAW,8BAAX,EAA2C;AAEzCnB,MAAAA,YAAY,EAAEA,YAF2B;AAGzC;AACAE,MAAAA,YAAY,EAACX,IAAI,CAAC6B,kBAAL;AAJ4B,KAA3C,EAMCC,IAND,CAMM,MAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYhC,IAAI,CAAC6B,kBAAL,EAAZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYhC,IAAI,CAACiC,OAAL,KAAiB,GAAjB,IAAwBjC,IAAI,CAACkC,QAAL,KAAkB,CAA1C,IAA+C,GAA/C,GAAqDlC,IAAI,CAACmC,WAAL,EAAjE;AACG,KAXD;AAYD,GAbD,CA7Ee,CA2Ff;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAMC,UAAU,GAAC,MAAI;AACnBrC,IAAAA,KAAK,CAACsC,GAAN,CAAU,8BAAV,EAA0CP,IAA1C,CAAgDQ,QAAD,IAAY;AACzD1B,MAAAA,eAAe,CAAC0B,QAAQ,CAACC,IAAV,CAAf;AAGC,KAJH;AAMC,GAPH,CA9Ge,CAyHf;AACA;;;AACE,sBAEE;AAAA,4BAEA;AAAK,MAAA,SAAS,EAAE,UAAhB;AAAA,6BACE;AAAK,QAAA,GAAG,EAAE7C;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFA,eAMA;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,6BACE;AAAA,mBACGmB,QAAQ,CAACE,KADZ,OACoBF,QAAQ,CAACI,OAD7B,OACuCJ,QAAQ,CAACM,OADhD;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANA,eAYA;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,6BACE;AAAO,QAAA,EAAE,EAAC,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZA,eAgBE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,QAA/B;AAAwC,QAAA,GAAG,EAAEK,QAA7C;AAAsD,QAAA,SAAS,EAAGgB,CAAD,IAAOnC,OAAO,CAACmC,CAAD,CAA/E;AAAoF,QAAA,QAAQ,EAAGlC,KAAD,IAAW;AAACI,UAAAA,eAAe,CAACJ,KAAK,CAACmC,MAAN,CAAaC,KAAd,CAAf;AAAqC;AAA/I;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,YAhBF,eAsBE;AAAA,6BACE;AAAQ,QAAA,EAAE,EAAC,QAAX;AAAoB,QAAA,OAAO,EAAEf,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAtBF,eA0BE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE;AAAQ,QAAA,OAAO,EAAES,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGzB,YAAY,CAACgC,GAAb,CAAiB,CAACC,GAAD,EAAKrC,GAAL,KAAW;AAE3B,4BACE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,kCACF;AAAA,mCAAaqC,GAAG,CAACC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADE,eAEF;AAAA,iCAAWD,GAAG,CAACE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFE,eAGF;AAAA,kCAAYF,GAAG,CAACG,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHE;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAOD,OATA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAgDD;;GA3KQ7C,G;;KAAAA,G;AAmLP,eAAeA,GAAf","sourcesContent":["import React, {Component,useEffect, useRef, useState} from 'react';\nimport logo from './img/logo.jpg';\nimport Reloj from './componentes/Reloj';\nimport Keydown, {Keys} from 'react-keydown';\nimport Alerta from './componentes/Detectar_Click';\nimport Axios from 'axios'\nimport './css/App.css';\n\n\n\n/*\nfunction useEnterKey(key, cb){\n  const callbackRef = useRef(cb);\n  \n  useEffect(()=> {\n    callbackRef.current = cb;\n  });\n  \n  useEffect(()=>{\n    function handle(event){\n      if(event.code ===key){\n        callbackRef.current(event);\n      }\n    }\n\n    document.addEventListener(\"keypress\",handle);\n    return()=>document.removeEventListener(\"keypress\",handle);\n\n  },[key]);\n}*/\n\n\n\n\nconst date = new Date();\n\nfunction App (){\n\n\n\n  //////\n  const [state, setState] = useState('');\n    \n  const handler = (event) => {\n      // changing the state to the name of the key\n    // which is pressed\n    if(event.key==='Enter'){\n\n      setState(event.key);\n      ingresoDatos();\n    }\n    \n  };\n////////\n\n\n\n  //se declaran variables para envío de datos del MVC\nconst [codigo_barra, setCodigo_Barra] = useState(\"\");\nconst [hora_marcaje, setHora_Marcaje]= useState([]);\n\n\n\n//Se obtiene la fecha actual y se divide en fragmentos para mostrar en el diseño luego\n/////\n  const [dateTime, setDateTime] = useState({\n    hours: date.getHours(),\n    minutes: date.getMinutes(),\n    seconds: date.getSeconds()\n  });\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const date = new Date();\n     \n      setDateTime({\n        hours: date.getHours(),\n        minutes: date.getMinutes(),\n        seconds: date.getSeconds(),\n        \n      });\n    }, 1000);\n  \n    return () => clearInterval(timer);\n  }, []);\n/////\n \n  /*\nfunction handleEnter(){\n  console.log(\"Enter presionado\");\n}\n  useEnterKey(\"Enter\", handleEnter)*/\n\n\n//hace focus al texbox que obtendrá la variable del codigo barras\n  const focusDiv = useRef();\nuseEffect(()=>{\n  if(focusDiv.current)focusDiv.current.focus();\n},[focusDiv]);\n\n\n//contendrá la busqueda del codigo barra\n//luego de busqueda se hará un if para saber si se ingresa o modifica el campo\nconst procMarcaje=()=>{\n\n  ingresoDatos();\n  //para la modificacion comparar codigo de barra y fecha actual, luego if para ver si el campo de entrada está en NULL\n  //si es null ingreso hra entrada, de lo contrario ingreso hra salida.\n\n\n};\n//\n\n//insertar datos\nconst ingresoDatos =()=>{\n  Axios.post('http://localhost:3001/create', {  \n\n    codigo_barra: codigo_barra,\n    //se llama a la fecha y obtiene solamente la hora\n    hora_marcaje:date.toLocaleTimeString(),\n    \n}).then(()=>{\nconsole.log(\"conexion exitosa\");\nconsole.log(\"hora:\");\nconsole.log(date.toLocaleTimeString());\nconsole.log(date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear());\n  });\n};\n//\n\n/*\n//buscar datos\nconst busquedaCB=()=>{\nAxios.get('http://localhost:3001/search',{codigo_barra:codigo_barra}).then(\n  (response)=>{\n    setHora_Marcaje(hora_marcaje.map((val)=>{\n      return val.codigo_barra == codigo_barra ? {id: val.codigo_barra, horae: hora_marcaje}:val;\n\n    }));\n    alert(\"busqueda\");\n\n  });\n\n};\n//\n*/\n\nconst busquedaCB=()=>{\n  Axios.get('http://localhost:3001/buscar').then((response)=>{\n    setHora_Marcaje(response.data);\n    \n  \n    });\n  \n  };\n\n\n\n//se manda a llamar al archivo .js en este caso es el <index/>\n//se le da nombre a la clase, en este caso App\n  return(\n    \n    <main>\n      \n    <div className =\"img_logo\">\n      <img src={logo}/>\n    </div>\n\n    <div className=\"watchmen\">\n      <div>\n        {dateTime.hours}:{dateTime.minutes}:{dateTime.seconds}\n      </div>\n    </div>\n\n    <div className=\"nombre_emp\">\n      <label id=\"nombre\">Nombre Empleado</label>\n    </div>\n\n      <div className=\"prueba\" >\n      \n        <input type=\"text\" placeholder='codigo' ref={focusDiv}onKeyDown={(e) => handler(e)} onChange={(event) => {setCodigo_Barra(event.target.value);}}/>\n      \n      </div>\n\n      <div>\n        <button id=\"probar\" onClick={procMarcaje}>Prueba</button>\n      </div>\n        \n      <div className=\"SUPERBOTON\">\n        <button onClick={busquedaCB}>Prueba22</button>\n        {hora_marcaje.map((val,key)=>{\n\n          return(\n            <div className=\"muestra\">\n          <h3>Cod B : {val.barra}</h3>\n          <h3>Hora: {val.horaE}</h3>\n          <h3>Hora2: {val.horaS}</h3>\n          </div>\n          );\n        })} \n      </div>\n      \n\n\n\n    </main>\n  )\n\n}\n\n\n\n\n\n\n\n  export default App;\n"]},"metadata":{},"sourceType":"module"}