{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\agarcia\\\\marcaje\\\\cliente\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useRef, useState } from 'react';\nimport logo from './img/logo.jpg';\nimport Reloj from './componentes/Reloj';\nimport Axios from 'axios';\nimport './css/App.css'; //hay un retraso de 30 seg al marcar con el lector\n//ver como se pasa la hora en una variable para el calculo de horas\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst date = new Date();\n\nfunction App() {\n  _s();\n\n  const [mensajeNombre, setMensajeNombre] = useState(\"\"); //////\n\n  const [state, setState] = useState('');\n\n  const captura = event => {\n    window.location.href = window.location.href; //condicion para la busqueda e ingreso de datos cuando el lector manda la señal\n\n    if (event.key === 'Enter') {\n      //se cambia el estado al nombre de la tecla que es presionada, en este caso es la tecla enter\n      setState(event.key); //se llama a la funcion \n\n      busquedaCB();\n    }\n  }; ////////\n  //se declaran variables para envío de datos del MVC\n\n\n  const [codigo_barra, setCodigo_Barra] = useState(\"\"); //Se obtiene la fecha actual y se divide en fragmentos para mostrar en el diseño luego\n  /////\n\n  const [dateTime, setDateTime] = useState({\n    hours: date.getHours(),\n    minutes: date.getMinutes(),\n    seconds: date.getSeconds()\n  });\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const date = new Date();\n      setDateTime({\n        hours: date.getHours(),\n        minutes: date.getMinutes(),\n        seconds: date.getSeconds()\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []); /////\n  //hace focus al texbox que obtendrá la variable del codigo barras\n\n  const focusDiv = useRef();\n  useEffect(() => {\n    if (focusDiv.current) focusDiv.current.focus();\n  }, [focusDiv]); //\n  //contendrá la busqueda del codigo barra\n  //luego de busqueda se hará un if para saber si se ingresa o modifica el campo\n  //insertar datos\n\n  const ingresoDatos = () => {\n    Axios.post('http://localhost:3001/create', {\n      codigo_barra: codigo_barra,\n      //se llama a la fecha y obtiene solamente la hora\n      hora_marcaje: date.toLocaleTimeString()\n    }).then(() => {\n      console.log(\"conexion exitosa\");\n      console.log(\"hora:\");\n      console.log(date.toLocaleTimeString());\n      console.log(date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear()); //refresca la pagina para liberar el cargado de memoria de las variables usadas\n      //window.location.href = window.location.href;\n    });\n  }; //\n  //\n\n\n  const ActualizarDatos = codigo_barra => {\n    Axios.put('http://localhost:3001/actualizar', {\n      codigo_barra: codigo_barra,\n      hora_marcaje: date.toLocaleTimeString()\n    }).then();\n  }; //\n  //buscar datos\n\n\n  const busquedaCB = () => {\n    Axios.post('http://localhost:3001/buscar', {\n      codigo_barra: codigo_barra\n    }).then(response => {\n      if (response.data.message) {\n        //muestra mensaje de Empleado no encontrado\n        setMensajeNombre(response.data.message); // window.location.href = window.location.href;\n      } else {\n        //obtiene de la posición 0 del array el elemento de la entidad que se declara luego del punto\n        setMensajeNombre(response.data[0].nombre_completo);\n        ingresoDatos(); //para la modificacion comparar codigo de barra y fecha actual, luego if para ver si el campo de entrada está en NULL\n        //si es null ingreso hra entrada, de lo contrario ingreso hra salida.\n\n        ActualizarDatos(codigo_barra);\n      }\n    });\n  }; //\n\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img_logo\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reloj\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [dateTime.hours, \":\", dateTime.minutes, \":\", dateTime.seconds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nombre_emp\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: mensajeNombre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"codigo_barra\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"codigo\",\n        ref: focusDiv,\n        onKeyDown: e => captura(e),\n        onChange: event => {\n          setCodigo_Barra(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"probar\",\n        onClick: busquedaCB,\n        children: \"Prueba\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"BGmyu1td7R6kWsSVYHN2MCUG5cI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/agarcia/marcaje/cliente/src/App.js"],"names":["React","Component","useEffect","useRef","useState","logo","Reloj","Axios","date","Date","App","mensajeNombre","setMensajeNombre","state","setState","captura","event","window","location","href","key","busquedaCB","codigo_barra","setCodigo_Barra","dateTime","setDateTime","hours","getHours","minutes","getMinutes","seconds","getSeconds","timer","setInterval","clearInterval","focusDiv","current","focus","ingresoDatos","post","hora_marcaje","toLocaleTimeString","then","console","log","getDate","getMonth","getFullYear","ActualizarDatos","put","response","data","message","nombre_completo","e","target","value"],"mappings":"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","sourcesContent":["import React, {Component,useEffect, useRef, useState} from 'react';\nimport logo from './img/logo.jpg';\nimport Reloj from './componentes/Reloj';\nimport Axios from 'axios'\nimport './css/App.css';\n\n\n\n//hay un retraso de 30 seg al marcar con el lector\n//ver como se pasa la hora en una variable para el calculo de horas\n\nconst date = new Date();\n\nfunction App (){\n\nconst[mensajeNombre, setMensajeNombre] =useState(\"\");\n\n  //////\n  const [state, setState] = useState('');\n    \n\n  const captura = (event) => {\n    window.location.href = window.location.href;\n    //condicion para la busqueda e ingreso de datos cuando el lector manda la señal\n    if(event.key==='Enter'){\n    //se cambia el estado al nombre de la tecla que es presionada, en este caso es la tecla enter\n      setState(event.key);\n      //se llama a la funcion \n      busquedaCB();\n    }\n    \n  };\n////////\n\n//se declaran variables para envío de datos del MVC\nconst [codigo_barra, setCodigo_Barra] = useState(\"\");\n\n//Se obtiene la fecha actual y se divide en fragmentos para mostrar en el diseño luego\n/////\n  const [dateTime, setDateTime] = useState({\n    hours: date.getHours(),\n    minutes: date.getMinutes(),\n    seconds: date.getSeconds()\n  });\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const date = new Date();\n      setDateTime({\n        hours: date.getHours(),\n        minutes: date.getMinutes(),\n        seconds: date.getSeconds(),\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []);\n/////\n \n//hace focus al texbox que obtendrá la variable del codigo barras\n  const focusDiv = useRef();\nuseEffect(()=>{\n  if(focusDiv.current)focusDiv.current.focus();\n},[focusDiv]);\n//\n\n//contendrá la busqueda del codigo barra\n//luego de busqueda se hará un if para saber si se ingresa o modifica el campo\n\n\n//insertar datos\nconst ingresoDatos =()=>{\n  Axios.post('http://localhost:3001/create', {  \n\n    codigo_barra: codigo_barra,\n    //se llama a la fecha y obtiene solamente la hora\n    hora_marcaje:date.toLocaleTimeString(),\n    \n}).then(()=>{\nconsole.log(\"conexion exitosa\");\nconsole.log(\"hora:\");\nconsole.log(date.toLocaleTimeString());\nconsole.log(date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear());\n//refresca la pagina para liberar el cargado de memoria de las variables usadas\n//window.location.href = window.location.href;\n  });\n};\n//\n\n//\nconst ActualizarDatos = (codigo_barra)=>{\n\n  Axios.put('http://localhost:3001/actualizar',{\n    codigo_barra:codigo_barra,\n    hora_marcaje:date.toLocaleTimeString(),\n  }).then(\n    \n  );  \n};\n//\n\n//buscar datos\nconst busquedaCB = () => {\n\n  Axios.post('http://localhost:3001/buscar',{\n    codigo_barra:codigo_barra\n  \n}).then((response)=>{\n\n if(response.data.message){\n   //muestra mensaje de Empleado no encontrado\n  setMensajeNombre(response.data.message)\n // window.location.href = window.location.href;\n }else{\n   //obtiene de la posición 0 del array el elemento de la entidad que se declara luego del punto\n   setMensajeNombre(response.data[0].nombre_completo)\n   ingresoDatos();\n   //para la modificacion comparar codigo de barra y fecha actual, luego if para ver si el campo de entrada está en NULL\n   //si es null ingreso hra entrada, de lo contrario ingreso hra salida.\n   ActualizarDatos(codigo_barra);\n }\n\n  });\n\n};\n//\n\n  return(\n    <main>\n    <div className =\"img_logo\">\n      <img src={logo}/>\n    </div>\n    <div className=\"reloj\">\n      <div>\n        {dateTime.hours}:{dateTime.minutes}:{dateTime.seconds}\n      </div>\n    </div>\n    <div className=\"nombre_emp\">\n    <h1>{mensajeNombre}</h1>\n    </div>\n    \n      <div className=\"codigo_barra\">\n        <input type=\"text\" placeholder='codigo' ref={focusDiv}   onKeyDown={(e) => captura(e)}     onChange={(event) => {setCodigo_Barra(event.target.value);}}/>\n      </div>\n      <div>\n        <button id=\"probar\" onClick={busquedaCB}>Prueba</button>\n      </div>\n  \n\n      \n\n    </main>\n  )\n}\n  export default App;\n"]},"metadata":{},"sourceType":"module"}