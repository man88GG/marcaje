{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\agarcia\\\\marcaje\\\\cliente\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useRef, useState } from 'react';\nimport logo from './img/logo.jpg';\nimport Reloj from './componentes/Reloj';\nimport Axios from 'axios';\nimport './css/App.css';\nimport { findAllByTestId } from '@testing-library/react'; //hay un retraso de 30 seg al marcar con el lector\n//ver como obtener los valores al realizar la busqueda la primera vez\n//buscar fecha actual\n//si no hay la inserta y busca empleado (o se llama a si misma la funcion)\n//si hay nomas busca empleado\n//si no existe empleado, mostrar mensaje que no existe\n// si existe, comparar los nulls de las fechas para saber donde insertar\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst date = new Date();\n\nfunction App() {\n  _s();\n\n  const [mensajeNombre, setMensajeNombre] = useState(null);\n  const [mensajeApellido, setMensajeApellido] = useState(null);\n  const [mensajeHoraEnt, setMensajeHoraEnt] = useState(null);\n  const [mensajeHoraSal, setMensajeHoraSal] = useState(null);\n  const [mensajeHoraEntAlm, setMensajeHoraEntAlm] = useState(null);\n  const [mensajeHoraSalAlm, setMensajeHoraSalAlm] = useState(null);\n  const total_horas = 0; //////\n\n  const [state, setState] = useState('');\n\n  const captura = event => {\n    //condicion para la busqueda e ingreso de datos cuando el lector manda la señal\n    if (event.key === 'Enter') {\n      //se cambia el estado al nombre de la tecla que es presionada, en este caso es la tecla enter\n      setState(event.key); //window.location.href = window.location.href;\n      //se llama a la funcion \n\n      BusquedaEmpleado();\n    }\n  }; ////////\n  //se declaran variables para envío de datos del MVC\n\n\n  const [codigo_barra, setCodigo_Barra] = useState(\"\"); //Se obtiene la fecha actual y se divide en fragmentos para mostrar en el diseño luego\n  /////\n\n  const [dateTime, setDateTime] = useState({\n    hours: date.getHours(),\n    minutes: date.getMinutes(),\n    seconds: date.getSeconds()\n  });\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const date = new Date();\n      setDateTime({\n        hours: date.getHours(),\n        minutes: date.getMinutes(),\n        seconds: date.getSeconds()\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []); /////\n  //hace focus al texbox que obtendrá la variable del codigo barras\n\n  const focusDiv = useRef();\n  useEffect(() => {\n    if (focusDiv.current) focusDiv.current.focus();\n  }, [focusDiv]); //\n  //insertar datos\n\n  const ingresoDatos = () => {\n    Axios.post('http://localhost:3001/DatosMarcajeEmpleado', {\n      codigo_barra: codigo_barra,\n      hora_marcaje: date.toLocaleTimeString(),\n      //se llama a la fecha \n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(() => {\n      console.log(mensajeNombre);\n      console.log(mensajeApellido);\n      console.log(mensajeHoraEnt);\n      console.log(mensajeHoraSal);\n      console.log(mensajeHoraEntAlm);\n      console.log(mensajeHoraSalAlm);\n      console.log(date.toLocaleString());\n      console.log(\"conexion exitosa\");\n      console.log(\"hora:\");\n      console.log(date.toLocaleTimeString());\n      console.log(date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear()); //refresca la pagina para liberar el cargado de memoria de las variables usadas\n      //window.location.href = window.location.href;\n    });\n  }; //\n  //insertar datos\n\n\n  const Bitacora = () => {\n    Axios.post('http://localhost:3001/bitacora', {\n      codigo_barra: codigo_barra,\n      //se llama a la fecha y obtiene solamente la hora\n      hora_marcaje: date.toLocaleTimeString(),\n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(() => {});\n  }; //\n  //\n\n\n  const ActualizarDatosHraSalidaAlm = codigo_barra => {\n    Axios.put('http://localhost:3001/actualizarHraSalidaAlm', {\n      codigo_barra: codigo_barra,\n      hora_marcaje: date.toLocaleTimeString(),\n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(() => {\n      //window.location.href = window.location.href;\n      console.log(mensajeNombre);\n      console.log(mensajeApellido);\n      console.log(mensajeHoraEnt);\n      console.log(mensajeHoraSal);\n      console.log(mensajeHoraEntAlm);\n      console.log(mensajeHoraSalAlm);\n    });\n  };\n\n  const ActualizarDatosHraEntradaAlm = codigo_barra => {\n    Axios.put('http://localhost:3001/actualizarHraEntradaAlm', {\n      codigo_barra: codigo_barra,\n      hora_marcaje: date.toLocaleTimeString(),\n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(() => {\n      //window.location.href = window.location.href;\n      console.log(mensajeNombre);\n      console.log(mensajeApellido);\n      console.log(mensajeHoraEnt);\n      console.log(mensajeHoraSal);\n      console.log(mensajeHoraEntAlm);\n      console.log(mensajeHoraSalAlm);\n    });\n  };\n\n  const ActualizarDatosHraSalida = codigo_barra => {\n    Axios.put('http://localhost:3001/actualizarHraSalida', {\n      codigo_barra: codigo_barra,\n      hora_marcaje: date.toLocaleTimeString(),\n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(() => {\n      //window.location.href = window.location.href;\n      console.log(mensajeNombre);\n      console.log(mensajeApellido);\n      console.log(mensajeHoraEnt);\n      console.log(mensajeHoraSal);\n      console.log(mensajeHoraEntAlm);\n      console.log(mensajeHoraSalAlm);\n    });\n  }; //\n  //buscar datos\n\n\n  const BusquedaEmpleado = () => {\n    Axios.post('http://localhost:3001/buscarEmpleado', {\n      codigo_barra: codigo_barra\n    }).then(response => {\n      if (response.data.message) {\n        //muestra mensaje de Empleado no encontrado\n        setMensajeNombre(response.data.message);\n        setMensajeApellido(\"\");\n      } else {\n        BuscarFechaActual();\n        setMensajeNombre(response.data[0].nombre);\n        setMensajeApellido(response.data[0].apellido);\n      }\n    });\n  }; //\n  //buscar datos\n\n\n  const BuscarFechaActual = () => {\n    Axios.post('http://localhost:3001/buscarFecha', {\n      codigo_barra: codigo_barra,\n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(response => {\n      //las variables no se actualizan la 1ra vez, ese es el bugaso que no jalan bien\n      console.log(\"============================================================\");\n      setMensajeHoraEnt(null);\n      setMensajeHoraSalAlm(null);\n      setMensajeHoraEntAlm(null);\n      setMensajeHoraSal(null);\n      console.log(\"Se pasan a NULL\");\n      console.log(mensajeNombre);\n      console.log(mensajeApellido);\n      console.log(mensajeHoraEnt);\n      console.log(mensajeHoraSal);\n      console.log(mensajeHoraEntAlm);\n      console.log(mensajeHoraSalAlm);\n      console.log(\"============================================================\");\n\n      if (response.data.message) {\n        //Se inserta Hora Entrada\n        console.log(\"============================================================\");\n        console.log(\"Ingreso Marcaje: 0\");\n        console.log(mensajeNombre);\n        console.log(mensajeApellido);\n        console.log(mensajeHoraEnt);\n        console.log(mensajeHoraSal);\n        console.log(mensajeHoraEntAlm);\n        console.log(mensajeHoraSalAlm);\n        console.log(\"============================================================\");\n        ingresoDatos();\n        Bitacora();\n      } else {\n        // setMensajeNombre(response.data[0].hra_entrada);\n        /////\n        console.log(\"============================================================\");\n        console.log(mensajeNombre);\n        console.log(mensajeApellido);\n        console.log(mensajeHoraEnt);\n        console.log(mensajeHoraSal);\n        console.log(mensajeHoraEntAlm);\n        console.log(mensajeHoraSalAlm);\n        setMensajeHoraEnt(response.data[0].hra_entrada);\n        setMensajeHoraSalAlm(response.data[0].hra_salida_alm);\n        setMensajeHoraEntAlm(response.data[0].hra_entrada_alm);\n        setMensajeHoraSal(response.data[0].hra_salida);\n        console.log(\"============================================================\");\n        console.log(mensajeNombre);\n        console.log(mensajeApellido);\n        console.log(mensajeHoraEnt);\n        console.log(mensajeHoraSal);\n        console.log(mensajeHoraEntAlm);\n        console.log(mensajeHoraSalAlm);\n        console.log(\"============================================================\");\n\n        if (mensajeHoraEnt != null && mensajeHoraSalAlm == null && mensajeHoraEntAlm == null && mensajeHoraSal == null) {\n          console.log(\"Ingreso mensaje hora Salida Almuerzo: 1\");\n          ActualizarDatosHraSalidaAlm(codigo_barra);\n          Bitacora();\n        } else {\n          if (mensajeHoraEnt != null && mensajeHoraSalAlm != null && mensajeHoraEntAlm == null && mensajeHoraSal == null) {\n            console.log(\"Ingreso mensaje hora Entrada Almuerzo: 2\");\n            ActualizarDatosHraEntradaAlm(codigo_barra);\n            Bitacora();\n          } else {\n            if (mensajeHoraEnt != null && mensajeHoraSalAlm != null && mensajeHoraEntAlm != null && mensajeHoraSal == null) {\n              console.log(\"Ingreso mensaje hora Salida: 3\");\n              ActualizarDatosHraSalida(codigo_barra); //CalculoTiempoDiario();\n\n              Bitacora();\n              console.log(\"Marcajes posibles realizados\");\n            } else {\n              if (mensajeHoraEnt != null && mensajeHoraSalAlm != null && mensajeHoraEntAlm != null && mensajeHoraSal != null) {\n                console.log(\"Ya se han realizado todos los marcajes del día: 4\");\n                console.log(mensajeNombre);\n                console.log(mensajeApellido);\n                console.log(mensajeHoraEnt);\n                console.log(mensajeHoraSal);\n                console.log(mensajeHoraEntAlm);\n                console.log(mensajeHoraSalAlm);\n              } else {\n                console.log(\"El empleado ha realizado un marcaje erróneo 1072022\");\n              }\n            }\n          }\n        }\n      }\n    });\n  };\n\n  const CalculoTiempoDiario = () => {\n    console.log(\"Hora E: \" + mensajeHoraEnt);\n    console.log(\"Hora S: \" + mensajeHoraSal);\n    var p1 = mensajeHoraSal;\n    var p2 = mensajeHoraEnt;\n    var hora1 = p1.split(\":\"),\n        hora2 = p2.split(\":\"),\n        t1 = new Date(),\n        t2 = new Date(); //Se establecen en arreglos los 3 parametros\n\n    t1.setHours(hora1[0], hora1[1], hora1[2]);\n    t2.setHours(hora2[0], hora2[1], hora2[2]); //Calculo de tiempo laborado diariamente\n\n    t1.setHours(t1.getHours() - t2.getHours(), t1.getMinutes() - t2.getMinutes(), t1.getSeconds() - t2.getSeconds()); //Mensaje de total de Horas\n\n    console.log(\"Total de Tiempo Laborado el día de hoy: \" + (t1.getHours() ? t1.getHours() + (t1.getHours() > 1 ? \" horas\" : \" hora\") : \"\") + (t1.getMinutes() ? \", \" + t1.getMinutes() + (t1.getMinutes() > 1 ? \" minutos\" : \" minuto\") : \"\") + (t1.getSeconds() ? (t1.getHours() || t1.getMinutes() ? \" y \" : \"\") + t1.getSeconds() + (t1.getSeconds() > 1 ? \" segundos\" : \" segundo\") : \"\"));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img_logo\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reloj\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [dateTime.hours, \":\", dateTime.minutes, \":\", dateTime.seconds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nombre_emp\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [mensajeNombre, \" \", mensajeApellido]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"codigo_barra\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"codigo\",\n        ref: focusDiv,\n        onKeyDown: e => captura(e),\n        onChange: event => {\n          setCodigo_Barra(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"probar\",\n        onClick: BusquedaEmpleado,\n        children: \"Prueba\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"probar2\",\n        onClick: BusquedaEmpleado,\n        children: \"Prueba2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 364,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"u5Wrjyd6+OTZNrAuilCGeySAow4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/agarcia/marcaje/cliente/src/App.js"],"names":["React","Component","useEffect","useRef","useState","logo","Reloj","Axios","findAllByTestId","date","Date","App","mensajeNombre","setMensajeNombre","mensajeApellido","setMensajeApellido","mensajeHoraEnt","setMensajeHoraEnt","mensajeHoraSal","setMensajeHoraSal","mensajeHoraEntAlm","setMensajeHoraEntAlm","mensajeHoraSalAlm","setMensajeHoraSalAlm","total_horas","state","setState","captura","event","key","BusquedaEmpleado","codigo_barra","setCodigo_Barra","dateTime","setDateTime","hours","getHours","minutes","getMinutes","seconds","getSeconds","timer","setInterval","clearInterval","focusDiv","current","focus","ingresoDatos","post","hora_marcaje","toLocaleTimeString","dia_marcaje","getDate","mes_marcaje","getMonth","periodo_marcaje","getFullYear","then","console","log","toLocaleString","Bitacora","ActualizarDatosHraSalidaAlm","put","ActualizarDatosHraEntradaAlm","ActualizarDatosHraSalida","response","data","message","BuscarFechaActual","nombre","apellido","hra_entrada","hra_salida_alm","hra_entrada_alm","hra_salida","CalculoTiempoDiario","p1","p2","hora1","split","hora2","t1","t2","setHours","e","target","value"],"mappings":"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","sourcesContent":["import React, {Component,useEffect, useRef, useState} from 'react';\r\nimport logo from './img/logo.jpg';\r\nimport Reloj from './componentes/Reloj';\r\nimport Axios from 'axios'\r\nimport './css/App.css';\r\nimport { findAllByTestId } from '@testing-library/react';\r\n\r\n\r\n//hay un retraso de 30 seg al marcar con el lector\r\n//ver como obtener los valores al realizar la busqueda la primera vez\r\n\r\n\r\n//buscar fecha actual\r\n//si no hay la inserta y busca empleado (o se llama a si misma la funcion)\r\n//si hay nomas busca empleado\r\n//si no existe empleado, mostrar mensaje que no existe\r\n// si existe, comparar los nulls de las fechas para saber donde insertar\r\n\r\n\r\nconst date = new Date();\r\n\r\nfunction App (){\r\n\r\nconst[mensajeNombre, setMensajeNombre] =useState(null);\r\nconst[mensajeApellido, setMensajeApellido] =useState(null);\r\nconst[mensajeHoraEnt, setMensajeHoraEnt] =useState(null);\r\nconst[mensajeHoraSal, setMensajeHoraSal] =useState(null);\r\nconst[mensajeHoraEntAlm, setMensajeHoraEntAlm] =useState(null);\r\nconst[mensajeHoraSalAlm, setMensajeHoraSalAlm] =useState(null);\r\nconst total_horas =0;\r\n\r\n\r\n\r\n  //////\r\n  const [state, setState] = useState('');\r\n    \r\n\r\n  const captura = (event) => {\r\n    \r\n    //condicion para la busqueda e ingreso de datos cuando el lector manda la señal\r\n    if(event.key==='Enter'){\r\n      \r\n    //se cambia el estado al nombre de la tecla que es presionada, en este caso es la tecla enter\r\n      setState(event.key);\r\n      //window.location.href = window.location.href;\r\n      //se llama a la funcion \r\n      BusquedaEmpleado();\r\n      \r\n    }\r\n    \r\n  };\r\n////////\r\n\r\n//se declaran variables para envío de datos del MVC\r\nconst [codigo_barra, setCodigo_Barra] = useState(\"\");\r\n\r\n//Se obtiene la fecha actual y se divide en fragmentos para mostrar en el diseño luego\r\n/////\r\n  const [dateTime, setDateTime] = useState({\r\n    hours: date.getHours(),\r\n    minutes: date.getMinutes(),\r\n    seconds: date.getSeconds()\r\n  });\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      const date = new Date();\r\n      setDateTime({\r\n        hours: date.getHours(),\r\n        minutes: date.getMinutes(),\r\n        seconds: date.getSeconds(),\r\n      });\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n/////\r\n\r\n \r\n//hace focus al texbox que obtendrá la variable del codigo barras\r\n  const focusDiv = useRef();\r\n  \r\nuseEffect(()=>{\r\n  if(focusDiv.current)focusDiv.current.focus();\r\n},[focusDiv]);\r\n//\r\n\r\n\r\n//insertar datos\r\nconst ingresoDatos =()=>{\r\n  Axios.post('http://localhost:3001/DatosMarcajeEmpleado', {    \r\n    codigo_barra: codigo_barra,\r\n    hora_marcaje: date.toLocaleTimeString(),\r\n    //se llama a la fecha \r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n\r\n  }).then(()=>{\r\n\r\nconsole.log(mensajeNombre);\r\nconsole.log(mensajeApellido);\r\nconsole.log(mensajeHoraEnt);\r\nconsole.log(mensajeHoraSal);\r\nconsole.log(mensajeHoraEntAlm);\r\nconsole.log(mensajeHoraSalAlm);\r\n\r\n\r\nconsole.log(date.toLocaleString());\r\nconsole.log(\"conexion exitosa\");\r\nconsole.log(\"hora:\");\r\nconsole.log(date.toLocaleTimeString());\r\nconsole.log(date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear());\r\n//refresca la pagina para liberar el cargado de memoria de las variables usadas\r\n//window.location.href = window.location.href;\r\n  });\r\n};\r\n//\r\n\r\n\r\n//insertar datos\r\nconst Bitacora =()=>{\r\n  Axios.post('http://localhost:3001/bitacora', {    \r\n    codigo_barra: codigo_barra,\r\n    //se llama a la fecha y obtiene solamente la hora\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n}).then(()=>{\r\n\r\n  });\r\n};\r\n//\r\n\r\n\r\n//\r\nconst ActualizarDatosHraSalidaAlm = (codigo_barra)=>{\r\n\r\n  Axios.put('http://localhost:3001/actualizarHraSalidaAlm',{\r\n    codigo_barra:codigo_barra,\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n  \r\n  }).then(()=>{\r\n    //window.location.href = window.location.href;\r\n    console.log(mensajeNombre);\r\n    console.log(mensajeApellido);\r\n    console.log(mensajeHoraEnt);\r\n    console.log(mensajeHoraSal);\r\n    console.log(mensajeHoraEntAlm);\r\n    console.log(mensajeHoraSalAlm);\r\n    \r\n  });  \r\n};\r\n\r\nconst ActualizarDatosHraEntradaAlm = (codigo_barra)=>{\r\n\r\n  Axios.put('http://localhost:3001/actualizarHraEntradaAlm',{\r\n    codigo_barra:codigo_barra,\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n\r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n\r\n  }).then(()=>{\r\n    //window.location.href = window.location.href;\r\n    console.log(mensajeNombre);\r\nconsole.log(mensajeApellido);\r\nconsole.log(mensajeHoraEnt);\r\nconsole.log(mensajeHoraSal);\r\nconsole.log(mensajeHoraEntAlm);\r\nconsole.log(mensajeHoraSalAlm);\r\n \r\n  \r\n  });  \r\n};\r\n\r\nconst ActualizarDatosHraSalida = (codigo_barra)=>{\r\n\r\n  Axios.put('http://localhost:3001/actualizarHraSalida',{\r\n    codigo_barra:codigo_barra,\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n\r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n\r\n  }).then(()=>{\r\n    //window.location.href = window.location.href;\r\n    console.log(mensajeNombre);\r\n    console.log(mensajeApellido);\r\n    console.log(mensajeHoraEnt);\r\n    console.log(mensajeHoraSal);\r\n    console.log(mensajeHoraEntAlm);\r\n    console.log(mensajeHoraSalAlm);\r\n     \r\n  });  \r\n};\r\n//\r\n\r\n//buscar datos\r\nconst BusquedaEmpleado = () => {\r\n  Axios.post('http://localhost:3001/buscarEmpleado',{\r\n    codigo_barra:codigo_barra,\r\n\r\n}).then((response)=>{\r\n\r\n    if(response.data.message){\r\n        //muestra mensaje de Empleado no encontrado\r\n        setMensajeNombre(response.data.message)\r\n        setMensajeApellido(\"\")\r\n       }else{\r\n\r\n        BuscarFechaActual();\r\n        setMensajeNombre(response.data[0].nombre)\r\n        setMensajeApellido(response.data[0].apellido)\r\n       }\r\n\r\n       });\r\n    };\r\n//\r\n\r\n//buscar datos\r\nconst BuscarFechaActual = () => {\r\n    Axios.post('http://localhost:3001/buscarFecha',{\r\n        codigo_barra:codigo_barra,\r\n        dia_marcaje: date.getDate(),\r\n        mes_marcaje: (date.getMonth()+1),\r\n        periodo_marcaje: date.getFullYear(),\r\n\r\n  }).then((response)=>{\r\n\r\n    //las variables no se actualizan la 1ra vez, ese es el bugaso que no jalan bien\r\n    console.log(\"============================================================\")\r\n    setMensajeHoraEnt(null)\r\n    setMensajeHoraSalAlm(null)\r\n    setMensajeHoraEntAlm(null)\r\n    setMensajeHoraSal(null)\r\nconsole.log(\"Se pasan a NULL\")\r\n    console.log(mensajeNombre);\r\n    console.log(mensajeApellido);\r\n    \r\n    console.log(mensajeHoraEnt);\r\n    console.log(mensajeHoraSal);\r\n    console.log(mensajeHoraEntAlm);\r\n    console.log(mensajeHoraSalAlm);\r\n\r\n    console.log(\"============================================================\")\r\n  \r\n    if(response.data.message){\r\n    \r\n        //Se inserta Hora Entrada\r\n        console.log(\"============================================================\")\r\n        console.log(\"Ingreso Marcaje: 0\");\r\n\r\n        console.log(mensajeNombre);\r\n        console.log(mensajeApellido);\r\n        \r\n        console.log(mensajeHoraEnt);\r\n        console.log(mensajeHoraSal);\r\n        console.log(mensajeHoraEntAlm);\r\n        console.log(mensajeHoraSalAlm);\r\n    \r\n        console.log(\"============================================================\")\r\n        ingresoDatos();\r\n        Bitacora();\r\n        \r\n\r\n       }else{\r\n\r\n\r\n          // setMensajeNombre(response.data[0].hra_entrada);\r\n         /////\r\n         console.log(\"============================================================\")\r\n         console.log(mensajeNombre);\r\n         console.log(mensajeApellido);\r\n         \r\n         console.log(mensajeHoraEnt);\r\n         console.log(mensajeHoraSal);\r\n         console.log(mensajeHoraEntAlm);\r\n         console.log(mensajeHoraSalAlm);\r\n\r\n            setMensajeHoraEnt(response.data[0].hra_entrada)\r\n            setMensajeHoraSalAlm(response.data[0].hra_salida_alm)\r\n            setMensajeHoraEntAlm(response.data[0].hra_entrada_alm)\r\n            setMensajeHoraSal(response.data[0].hra_salida)\r\n            console.log(\"============================================================\")\r\n            console.log(mensajeNombre);\r\n            console.log(mensajeApellido);\r\n            \r\n            console.log(mensajeHoraEnt);\r\n            console.log(mensajeHoraSal);\r\n            console.log(mensajeHoraEntAlm);\r\n            console.log(mensajeHoraSalAlm);\r\n        \r\n            console.log(\"============================================================\")\r\n           if (mensajeHoraEnt != null && mensajeHoraSalAlm == null && mensajeHoraEntAlm == null && mensajeHoraSal == null){\r\n         console.log(\"Ingreso mensaje hora Salida Almuerzo: 1\");\r\n             ActualizarDatosHraSalidaAlm(codigo_barra);\r\n             Bitacora();\r\n         }else{\r\n           if(mensajeHoraEnt != null && mensajeHoraSalAlm != null && mensajeHoraEntAlm == null && mensajeHoraSal == null){\r\n             console.log(\"Ingreso mensaje hora Entrada Almuerzo: 2\");\r\n             ActualizarDatosHraEntradaAlm(codigo_barra);\r\n             Bitacora();\r\n         }else{\r\n           if(mensajeHoraEnt != null && mensajeHoraSalAlm != null && mensajeHoraEntAlm != null && mensajeHoraSal == null){\r\n             console.log(\"Ingreso mensaje hora Salida: 3\");\r\n         \r\n             ActualizarDatosHraSalida(codigo_barra);\r\n             //CalculoTiempoDiario();\r\n             Bitacora();\r\n             console.log(\"Marcajes posibles realizados\");\r\n             }else{\r\n               if(mensajeHoraEnt != null && mensajeHoraSalAlm != null && mensajeHoraEntAlm != null && mensajeHoraSal != null){\r\n                 console.log(\"Ya se han realizado todos los marcajes del día: 4\");\r\n                 \r\n                 console.log(mensajeNombre);\r\nconsole.log(mensajeApellido);\r\n\r\nconsole.log(mensajeHoraEnt);\r\nconsole.log(mensajeHoraSal);\r\nconsole.log(mensajeHoraEntAlm);\r\nconsole.log(mensajeHoraSalAlm);\r\n\r\n            \r\n               }else{\r\n                 console.log(\"El empleado ha realizado un marcaje erróneo 1072022\");\r\n                 \r\n               }\r\n             }\r\n           }\r\n         }\r\n         \r\n        }\r\n\r\n    });\r\n  };\r\n\r\n\r\nconst CalculoTiempoDiario =()=>{\r\n\r\n  console.log(\"Hora E: \" + mensajeHoraEnt);\r\n  console.log(\"Hora S: \" + mensajeHoraSal);\r\n  var p1 = (mensajeHoraSal);\r\n  var p2 = (mensajeHoraEnt);\r\n  var hora1 = (p1).split(\":\"),\r\n      hora2 = (p2).split(\":\"),\r\n      t1 = new Date(),\r\n      t2 = new Date();\r\n//Se establecen en arreglos los 3 parametros\r\nt1.setHours(hora1[0], hora1[1], hora1[2]);\r\nt2.setHours(hora2[0], hora2[1], hora2[2]);\r\n//Calculo de tiempo laborado diariamente\r\nt1.setHours(t1.getHours() - t2.getHours(), t1.getMinutes() - t2.getMinutes(), t1.getSeconds() - t2.getSeconds());\r\n//Mensaje de total de Horas\r\nconsole.log(\"Total de Tiempo Laborado el día de hoy: \" + (t1.getHours() ? t1.getHours() + (t1.getHours() > 1 ? \" horas\" : \" hora\") : \"\") + (t1.getMinutes() ? \", \" + t1.getMinutes() + (t1.getMinutes() > 1 ? \" minutos\" : \" minuto\") : \"\") + (t1.getSeconds() ? (t1.getHours() || t1.getMinutes() ? \" y \" : \"\") + t1.getSeconds() + (t1.getSeconds() > 1 ? \" segundos\" : \" segundo\") : \"\"));\r\n\r\n}\r\n\r\n  return(\r\n    <main>\r\n    <div className =\"img_logo\">\r\n      <img src={logo}/>\r\n    </div>\r\n    <div className=\"reloj\">\r\n      <div>\r\n        {dateTime.hours}:{dateTime.minutes}:{dateTime.seconds}\r\n      </div>\r\n    </div>\r\n    <div className=\"nombre_emp\">\r\n    <h1>{mensajeNombre} {mensajeApellido}</h1>\r\n    </div>\r\n      <div className=\"codigo_barra\">\r\n        <input type=\"text\" placeholder='codigo' ref={focusDiv}   onKeyDown={(e) => captura(e)}     onChange={(event) => {setCodigo_Barra(event.target.value);}}/>\r\n      </div>\r\n      <div>\r\n        <button id=\"probar\" onClick={BusquedaEmpleado}>Prueba</button>\r\n      </div>\r\n  <div>\r\n  <button id=\"probar2\" onClick={BusquedaEmpleado}>Prueba2</button>\r\n \r\n  </div>\r\n    </main>\r\n  )\r\n}\r\n\r\n  export default App;"]},"metadata":{},"sourceType":"module"}