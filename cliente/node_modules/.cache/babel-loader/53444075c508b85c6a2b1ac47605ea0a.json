{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\agarcia\\\\marcaje\\\\cliente\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useRef, useState } from 'react';\nimport logo from './img/logo.jpg';\nimport Reloj from './componentes/Reloj';\nimport Axios from 'axios';\nimport './css/App.css'; //hay un retraso de 30 seg al marcar con el lector\n//ver como se pasa la hora en una variable para el calculo de horas\n//borrar\n//borrar\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst date = new Date();\n\nfunction App() {\n  _s();\n\n  const [mensajeNombre, setMensajeNombre] = useState(\"\");\n  const [mensajeApellido, setMensajeApellido] = useState(\"\"); //////\n\n  const [state, setState] = useState('');\n\n  const captura = event => {\n    //condicion para la busqueda e ingreso de datos cuando el lector manda la señal\n    if (event.key === 'Enter') {\n      //se cambia el estado al nombre de la tecla que es presionada, en este caso es la tecla enter\n      setState(event.key); //se llama a la funcion \n\n      busquedaCB();\n    }\n  }; ////////\n  //se declaran variables para envío de datos del MVC\n\n\n  const [codigo_barra, setCodigo_Barra] = useState(\"\"); //Se obtiene la fecha actual y se divide en fragmentos para mostrar en el diseño luego\n  /////\n\n  const [dateTime, setDateTime] = useState({\n    hours: date.getHours(),\n    minutes: date.getMinutes(),\n    seconds: date.getSeconds()\n  });\n  useEffect(() => {\n    const timer = setInterval(() => {\n      const date = new Date();\n      setDateTime({\n        hours: date.getHours(),\n        minutes: date.getMinutes(),\n        seconds: date.getSeconds()\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  }, []); /////\n\n  var date = new Date();\n\n  const formatDate = current_datetime => {\n    let formatted_date = current_datetime.getFullYear() + \"-\" + (current_datetime.getMonth() + 1) + \"-\" + current_datetime.getDate() + \" \" + current_datetime.getHours() + \":\" + current_datetime.getMinutes() + \":\" + current_datetime.getSeconds();\n    return formatted_date;\n  };\n\n  console.log(formatDate(date)); //hace focus al texbox que obtendrá la variable del codigo barras\n\n  const focusDiv = useRef();\n  useEffect(() => {\n    if (focusDiv.current) focusDiv.current.focus();\n  }, [focusDiv]); //\n  //contendrá la busqueda del codigo barra\n  //luego de busqueda se hará un if para saber si se ingresa o modifica el campo\n  //insertar datos\n\n  const ingresoDatos = () => {\n    Axios.post('http://localhost:3001/create', {\n      codigo_barra: codigo_barra,\n      //se llama a la fecha y obtiene solamente la hora\n      hora_marcaje: date.toLocaleTimeString(),\n      fecha_marcaje: date.toLocaleString()\n    }).then(() => {\n      console.log(date.toLocaleString());\n      console.log(\"conexion exitosa\");\n      console.log(\"hora:\");\n      console.log(date.toLocaleTimeString());\n      console.log(date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear()); //refresca la pagina para liberar el cargado de memoria de las variables usadas\n      //window.location.href = window.location.href;\n    });\n  }; //\n  //\n\n\n  const ActualizarDatos = codigo_barra => {\n    Axios.put('http://localhost:3001/actualizar', {\n      codigo_barra: codigo_barra,\n      hora_marcaje: date.toLocaleTimeString()\n    }).then();\n  }; //\n  //buscar datos\n\n\n  const busquedaCB = () => {\n    Axios.post('http://localhost:3001/buscar', {\n      codigo_barra: codigo_barra\n    }).then(response => {\n      if (response.data.message) {\n        //muestra mensaje de Empleado no encontrado\n        setMensajeNombre(response.data.message);\n      } else {\n        //obtiene de la posición 0 del array el elemento de la entidad que se declara luego del punto\n        setMensajeNombre(response.data[0].nombre);\n        setMensajeApellido(response.data[0].apellido);\n        ingresoDatos(); //para la modificacion comparar codigo de barra y fecha actual, luego if para ver si el campo de entrada está en NULL\n        //si es null ingreso hra entrada, de lo contrario ingreso hra salida.\n        // ActualizarDatos(codigo_barra);\n      }\n    });\n  }; //\n\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img_logo\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reloj\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [dateTime.hours, \":\", dateTime.minutes, \":\", dateTime.seconds]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nombre_emp\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [mensajeNombre, \" \", mensajeApellido]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"codigo_barra\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"codigo\",\n        ref: focusDiv,\n        onKeyDown: e => captura(e),\n        onChange: event => {\n          setCodigo_Barra(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"probar\",\n        onClick: busquedaCB,\n        children: \"Prueba\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"nmO/q31xuU94D+YpytIB40hAWLY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/agarcia/marcaje/cliente/src/App.js"],"names":["React","Component","useEffect","useRef","useState","logo","Reloj","Axios","date","Date","App","mensajeNombre","setMensajeNombre","mensajeApellido","setMensajeApellido","state","setState","captura","event","key","busquedaCB","codigo_barra","setCodigo_Barra","dateTime","setDateTime","hours","getHours","minutes","getMinutes","seconds","getSeconds","timer","setInterval","clearInterval","formatDate","current_datetime","formatted_date","getFullYear","getMonth","getDate","console","log","focusDiv","current","focus","ingresoDatos","post","hora_marcaje","toLocaleTimeString","fecha_marcaje","toLocaleString","then","ActualizarDatos","put","response","data","message","nombre","apellido","e","target","value"],"mappings":"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","sourcesContent":["import React, {Component,useEffect, useRef, useState} from 'react';\r\nimport logo from './img/logo.jpg';\r\nimport Reloj from './componentes/Reloj';\r\nimport Axios from 'axios'\r\nimport './css/App.css';\r\n\r\n\r\n\r\n//hay un retraso de 30 seg al marcar con el lector\r\n//ver como se pasa la hora en una variable para el calculo de horas\r\n//borrar\r\n//borrar\r\n\r\nconst date = new Date();\r\n\r\nfunction App (){\r\n\r\nconst[mensajeNombre, setMensajeNombre] =useState(\"\");\r\nconst[mensajeApellido, setMensajeApellido] =useState(\"\");\r\n\r\n  //////\r\n  const [state, setState] = useState('');\r\n    \r\n\r\n  const captura = (event) => {\r\n    \r\n    //condicion para la busqueda e ingreso de datos cuando el lector manda la señal\r\n    if(event.key==='Enter'){\r\n      \r\n    //se cambia el estado al nombre de la tecla que es presionada, en este caso es la tecla enter\r\n      setState(event.key);\r\n      //se llama a la funcion \r\n      busquedaCB();\r\n      \r\n    }\r\n    \r\n  };\r\n////////\r\n\r\n//se declaran variables para envío de datos del MVC\r\nconst [codigo_barra, setCodigo_Barra] = useState(\"\");\r\n\r\n//Se obtiene la fecha actual y se divide en fragmentos para mostrar en el diseño luego\r\n/////\r\n  const [dateTime, setDateTime] = useState({\r\n    hours: date.getHours(),\r\n    minutes: date.getMinutes(),\r\n    seconds: date.getSeconds()\r\n  });\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      const date = new Date();\r\n      setDateTime({\r\n        hours: date.getHours(),\r\n        minutes: date.getMinutes(),\r\n        seconds: date.getSeconds(),\r\n      });\r\n    }, 1000);\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n/////\r\nvar date = new Date();\r\n\r\nconst formatDate = (current_datetime)=>{\r\n    let formatted_date = current_datetime.getFullYear() + \"-\" + (current_datetime.getMonth() + 1) + \"-\" + current_datetime.getDate() + \" \" + current_datetime.getHours() + \":\" + current_datetime.getMinutes() + \":\" + current_datetime.getSeconds();\r\n    return formatted_date;\r\n}\r\n\r\nconsole.log(formatDate(date));\r\n \r\n//hace focus al texbox que obtendrá la variable del codigo barras\r\n  const focusDiv = useRef();\r\nuseEffect(()=>{\r\n  if(focusDiv.current)focusDiv.current.focus();\r\n},[focusDiv]);\r\n//\r\n\r\n//contendrá la busqueda del codigo barra\r\n//luego de busqueda se hará un if para saber si se ingresa o modifica el campo\r\n\r\n\r\n//insertar datos\r\nconst ingresoDatos =()=>{\r\n  Axios.post('http://localhost:3001/create', {  \r\n\r\n  \r\n    codigo_barra: codigo_barra,\r\n    //se llama a la fecha y obtiene solamente la hora\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n    fecha_marcaje: date.toLocaleString(),\r\n}).then(()=>{\r\n\r\n  console.log(date.toLocaleString());\r\nconsole.log(\"conexion exitosa\");\r\nconsole.log(\"hora:\");\r\nconsole.log(date.toLocaleTimeString());\r\nconsole.log(date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear());\r\n//refresca la pagina para liberar el cargado de memoria de las variables usadas\r\n//window.location.href = window.location.href;\r\n  });\r\n};\r\n//\r\n\r\n//\r\nconst ActualizarDatos = (codigo_barra)=>{\r\n\r\n  Axios.put('http://localhost:3001/actualizar',{\r\n    codigo_barra:codigo_barra,\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n  }).then(\r\n    \r\n  );  \r\n};\r\n//\r\n\r\n//buscar datos\r\nconst busquedaCB = () => {\r\n  Axios.post('http://localhost:3001/buscar',{\r\n    codigo_barra:codigo_barra\r\n  \r\n}).then((response)=>{\r\n\r\n\r\n if(response.data.message){\r\n   //muestra mensaje de Empleado no encontrado\r\n  setMensajeNombre(response.data.message)\r\n \r\n }else{\r\n   //obtiene de la posición 0 del array el elemento de la entidad que se declara luego del punto\r\n   setMensajeNombre(response.data[0].nombre)\r\n   setMensajeApellido(response.data[0].apellido)\r\n   ingresoDatos();\r\n   //para la modificacion comparar codigo de barra y fecha actual, luego if para ver si el campo de entrada está en NULL\r\n   //si es null ingreso hra entrada, de lo contrario ingreso hra salida.\r\n  // ActualizarDatos(codigo_barra);\r\n }\r\n\r\n  });\r\n\r\n};\r\n//\r\n\r\n  return(\r\n    <main>\r\n    <div className =\"img_logo\">\r\n      <img src={logo}/>\r\n    </div>\r\n    <div className=\"reloj\">\r\n      <div>\r\n        {dateTime.hours}:{dateTime.minutes}:{dateTime.seconds}\r\n      </div>\r\n    </div>\r\n    <div className=\"nombre_emp\">\r\n    <h1>{mensajeNombre} {mensajeApellido}</h1>\r\n    </div>\r\n    \r\n      <div className=\"codigo_barra\">\r\n        <input type=\"text\" placeholder='codigo' ref={focusDiv}   onKeyDown={(e) => captura(e)}     onChange={(event) => {setCodigo_Barra(event.target.value);}}/>\r\n      </div>\r\n      <div>\r\n        <button id=\"probar\" onClick={busquedaCB}>Prueba</button>\r\n      </div>\r\n  \r\n\r\n      \r\n\r\n    </main>\r\n  )\r\n}\r\n  export default App;\r\n"]},"metadata":{},"sourceType":"module"}