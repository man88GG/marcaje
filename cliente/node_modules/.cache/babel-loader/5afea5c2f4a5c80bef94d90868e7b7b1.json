{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\agarcia\\\\marcaje\\\\cliente\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { Component, useEffect, useRef, useState } from 'react';\nimport logo from './img/logo.jpg';\nimport Reloj from './componentes/Reloj';\nimport Axios from 'axios';\nimport './css/App.css';\nimport { findAllByTestId } from '@testing-library/react'; //aumentar el tiempo \n//revisar lo de los periodos para marcaje y usar ifs para saber donde ubicar donde iria el marcaje\n//esto ultimo hacerlo con ifs\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst date = new Date();\n\nfunction useAsyncState(initialValue) {\n  _s();\n\n  const [value, setValue] = useState(initialValue);\n\n  const setter = x => new Promise(resolve => {\n    setValue(x);\n    resolve(x);\n  });\n\n  return [value, setter];\n}\n\n_s(useAsyncState, \"L08zUdRTae9t+nWvf9xbU6NcRrM=\");\n\nfunction App() {\n  _s2();\n\n  const [mensajeNombre, setMensajeNombre] = useAsyncState(\"\");\n  const [mensajeApellido, setMensajeApellido] = useAsyncState(\"\"); //puede servir a futuro\n\n  const [mensajeHoraEnt, setMensajeHoraEnt] = useAsyncState(\"\");\n  const [mensajeHoraSal, setMensajeHoraSal] = useAsyncState(\"\");\n  const [mensajeHoraEntAlm, setMensajeHoraEntAlm] = useAsyncState(\"\");\n  const [mensajeHoraSalAlm, setMensajeHoraSalAlm] = useAsyncState(\"\"); //\n\n  const [controlador1, setControlador1] = useAsyncState(\"\");\n  const [controlador2, setControlador2] = useAsyncState(\"\");\n  const [controlador3, setControlador3] = useAsyncState(\"\");\n  const [controlador4, setControlador4] = useAsyncState(\"\");\n  const [controlador5, setControlador5] = useAsyncState(\"\"); //////\n\n  const [state, setState] = useState('');\n\n  const captura = event => {\n    //condicion para la busqueda e ingreso de datos cuando el lector manda la señal\n    if (event.key === 'Enter') {\n      //se cambia el estado al nombre de la tecla que es presionada, en este caso es la tecla enter\n      setState(event.key); //se llama a la funcion \n\n      BusquedaEmpleado();\n    }\n  }; ////////\n  //se declaran variables para envío de datos del MVC\n\n\n  const [codigo_barra, setCodigo_Barra] = useState(\"\"); //hace focus al texbox que obtendrá la variable del codigo barras\n\n  const focusDiv = useRef(null);\n  useEffect(() => {\n    const focusPermanente = setInterval(() => {\n      //selecciona el texto del input \n      focusDiv.current.blur();\n      if (focusDiv.current) focusDiv.current.focus();\n    }, 500);\n    return () => clearInterval(focusPermanente);\n  }, [focusDiv]); //seleccionar todo el contenido \n\n  const handleFocus = event => event.target.select();\n\n  const HandlerOne = e => {\n    // e.preventDefault();\n    setControlador1('Inicia Request al Backend');\n    setTimeout(() => {\n      setControlador1('1');\n    }, 1000);\n  };\n\n  useEffect(() => {\n    if (controlador1 === '1') {\n      ingresoDatos(codigo_barra);\n    }\n  }, [controlador1]);\n\n  const HandlerTwo = e => {\n    // e.preventDefault();\n    setControlador2('Inicia Request al Backend');\n    setTimeout(() => {\n      setControlador2('2');\n    }, 1000);\n  };\n\n  useEffect(() => {\n    if (controlador2 === '2') {\n      ActualizarDatosHraSalidaAlm(codigo_barra);\n    }\n  }, [controlador2]);\n\n  const HandlerThree = e => {\n    //e.preventDefault();\n    setControlador3('Inicia Request al Backend');\n    setTimeout(() => {\n      setControlador3('3');\n    }, 1000);\n  };\n\n  useEffect(() => {\n    if (controlador3 === '3') {\n      ActualizarDatosHraEntradaAlm(codigo_barra);\n    }\n  }, [controlador3]);\n\n  const HandlerFour = e => {\n    // e.preventDefault();\n    setControlador4('Inicia Request al Backend');\n    setTimeout(() => {\n      setControlador4('4');\n    }, 1000);\n  };\n\n  useEffect(() => {\n    if (controlador4 === '4') {\n      ActualizarDatosHraSalida(codigo_barra);\n    }\n  }, [controlador4]);\n\n  const HandlerFive = e => {\n    // e.preventDefault();\n    setControlador5('Inicia Request al Backend');\n    setTimeout(() => {\n      setControlador5('5');\n    }, 1500);\n  };\n\n  useEffect(() => {\n    if (controlador5 === '5') {//document.getElementById(\"myForm\").reset();\n      //window.location.href = window.location.href;\n    }\n  }, [controlador5]); //insertar datos\n\n  const ingresoDatos = () => {\n    Axios.post('http://localhost:3001/DatosMarcajeEmpleado', {\n      hora_marcaje: \"\",\n      codigo_barra: codigo_barra,\n      hora_marcaje: date.toLocaleTimeString(),\n      //se llama a la fecha \n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(() => {\n      console.log(date.toLocaleString());\n      console.log(\"conexion exitosa\");\n      console.log(\"hora:\");\n      console.log(date.toLocaleTimeString());\n      console.log(date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear()); //refresca la pagina para liberar el cargado de memoria de las variables usadas\n      //window.location.href = window.location.href;\n    });\n  }; //\n  //insertar datos\n\n\n  const Bitacora = () => {\n    Axios.post('http://localhost:3001/bitacora', {\n      codigo_barra: codigo_barra,\n      //se llama a la fecha y obtiene solamente la hora\n      hora_marcaje: date.toLocaleTimeString(),\n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(() => {});\n  }; //\n  //\n\n\n  const ActualizarDatosHraSalidaAlm = codigo_barra => {\n    Axios.put('http://localhost:3001/actualizarHraSalidaAlm', {\n      codigo_barra: codigo_barra,\n      hora_marcaje: date.toLocaleTimeString(),\n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(() => {//window.location.href = window.location.href;\n    });\n  };\n\n  const ActualizarDatosHraEntradaAlm = codigo_barra => {\n    Axios.put('http://localhost:3001/actualizarHraEntradaAlm', {\n      codigo_barra: codigo_barra,\n      hora_marcaje: date.toLocaleTimeString(),\n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(() => {//window.location.href = window.location.href;\n    });\n  };\n\n  const ActualizarDatosHraSalida = codigo_barra => {\n    Axios.put('http://localhost:3001/actualizarHraSalida', {\n      codigo_barra: codigo_barra,\n      hora_marcaje: date.toLocaleTimeString(),\n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(() => {// window.location.href = window.location.href;\n    });\n  }; //\n  //buscar datos\n\n\n  const BusquedaEmpleado = () => {\n    Axios.post('http://localhost:3001/buscarEmpleado', {\n      codigo_barra: codigo_barra\n    }).then(response => {\n      if (response.data.message) {\n        //muestra mensaje de Empleado no encontrado\n        setMensajeNombre(response.data.message);\n        setMensajeApellido(\"\");\n        HandlerFive();\n      } else {\n        BuscarFechaActual();\n        setMensajeNombre(response.data[0].nombre);\n        setMensajeApellido(response.data[0].apellido);\n      }\n    });\n  }; //\n  //buscar datos\n\n\n  const BuscarFechaActual = () => {\n    Axios.post('http://localhost:3001/buscarFecha', {\n      codigo_barra: codigo_barra,\n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(response => {\n      if (response.data.message) {\n        //Se inserta Hora Entrada\n        console.log(\"Ingreso Marcaje: 0\");\n        HandlerOne();\n        Bitacora();\n      } else {\n        if (response.data[0].hra_entrada != null && response.data[0].hra_salida_alm == null && response.data[0].hra_entrada_alm == null && response.data[0].hra_salida == null) {\n          console.log(\"Ingreso mensaje hora Salida Almuerzo: 1\");\n          HandlerTwo();\n          Bitacora();\n        } else {\n          if (response.data[0].hra_entrada != null && response.data[0].hra_salida_alm != null && response.data[0].hra_entrada_alm == null && response.data[0].hra_salida == null) {\n            console.log(\"Ingreso mensaje hora Entrada Almuerzo: 2\");\n            HandlerThree(); //ActualizarDatosHraEntradaAlm(codigo_barra);\n\n            Bitacora();\n          } else {\n            if (response.data[0].hra_entrada != null && response.data[0].hra_salida_alm != null && response.data[0].hra_entrada_alm != null && response.data[0].hra_salida == null) {\n              console.log(\"Ingreso mensaje hora Salida: 3\");\n              HandlerFour(); //ActualizarDatosHraSalida(codigo_barra);\n              //CalculoTiempoDiario();\n\n              Bitacora();\n              console.log(\"Marcajes posibles realizados\");\n            } else {\n              if (response.data[0].hra_entrada != null && response.data[0].hra_salida_alm != null && response.data[0].hra_entrada_alm != null && response.data[0].hra_salida != null) {\n                //setMensajeNombre(\"Ya se han realizado todos los marcajes del día\")\n                //setMensajeApellido(\"\")\n                HandlerFive();\n                CalculoTiempoDiario();\n                setMensajeHoraEnt(response.data[0].hra_entrada);\n                setMensajeHoraSal(response.data[0].hra_salida);\n              } else {\n                console.log(\"El empleado ha realizado un marcaje erróneo \");\n              }\n            }\n          }\n        }\n      }\n    });\n  }; //\n  //\n\n\n  const CalculoTiempoDiario = () => {\n    console.log(\"Hora E: \" + mensajeHoraEnt);\n    console.log(\"Hora S: \" + mensajeHoraSal);\n    var p1 = mensajeHoraSal;\n    var p2 = mensajeHoraEnt;\n    var hora1 = p1.split(\":\"),\n        hora2 = p2.split(\":\"),\n        t1 = new Date(),\n        t2 = new Date(); //Se establecen en arreglos los 3 parametros\n\n    t1.setHours(hora1[0], hora1[1], hora1[2]);\n    t2.setHours(hora2[0], hora2[1], hora2[2]); //Calculo de tiempo laborado diariamente\n\n    t1.setHours(t1.getHours() - t2.getHours(), t1.getMinutes() - t2.getMinutes(), t1.getSeconds() - t2.getSeconds()); //Mensaje de total de Horas\n\n    console.log(\"Total de Tiempo Laborado el día de hoy: \" + (t1.getHours() ? t1.getHours() + (t1.getHours() > 1 ? \" horas\" : \" hora\") : \"\") + (t1.getMinutes() ? \", \" + t1.getMinutes() + (t1.getMinutes() > 1 ? \" minutos\" : \" minuto\") : \"\") + (t1.getSeconds() ? (t1.getHours() || t1.getMinutes() ? \" y \" : \"\") + t1.getSeconds() + (t1.getSeconds() > 1 ? \" segundos\" : \" segundo\") : \"\")); //para la consulta \n    //console.log((t1.getHours() ? t1.getHours() + (t1.getHours() > 1 ? \"\" : \"\") : \"\") + (t1.getMinutes() ? \":\" + t1.getMinutes() + (t1.getMinutes() > 1 ? \"\" : \"\") : \"\") + (t1.getSeconds() ? (t1.getHours() || t1.getMinutes() ? \":\" : \"\") + t1.getSeconds() + (t1.getSeconds() > 1 ? \"\" : \"\") : \"\"));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img_logo\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reloj\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Reloj, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nombre_emp\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [mensajeNombre, \" \", mensajeApellido]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"codigo_barra\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"codigo\",\n        ref: focusDiv,\n        onKeyDown: e => captura(e),\n        onFocus: handleFocus,\n        onChange: event => {\n          setCodigo_Barra(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 365,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"p5APKuG4L8LJJKI/IKMyLk3VWNM=\", false, function () {\n  return [useAsyncState, useAsyncState, useAsyncState, useAsyncState, useAsyncState, useAsyncState, useAsyncState, useAsyncState, useAsyncState, useAsyncState, useAsyncState];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/agarcia/marcaje/cliente/src/App.js"],"names":["React","Component","useEffect","useRef","useState","logo","Reloj","Axios","findAllByTestId","date","Date","useAsyncState","initialValue","value","setValue","setter","x","Promise","resolve","App","mensajeNombre","setMensajeNombre","mensajeApellido","setMensajeApellido","mensajeHoraEnt","setMensajeHoraEnt","mensajeHoraSal","setMensajeHoraSal","mensajeHoraEntAlm","setMensajeHoraEntAlm","mensajeHoraSalAlm","setMensajeHoraSalAlm","controlador1","setControlador1","controlador2","setControlador2","controlador3","setControlador3","controlador4","setControlador4","controlador5","setControlador5","state","setState","captura","event","key","BusquedaEmpleado","codigo_barra","setCodigo_Barra","focusDiv","focusPermanente","setInterval","current","blur","focus","clearInterval","handleFocus","target","select","HandlerOne","e","setTimeout","ingresoDatos","HandlerTwo","ActualizarDatosHraSalidaAlm","HandlerThree","ActualizarDatosHraEntradaAlm","HandlerFour","ActualizarDatosHraSalida","HandlerFive","post","hora_marcaje","toLocaleTimeString","dia_marcaje","getDate","mes_marcaje","getMonth","periodo_marcaje","getFullYear","then","console","log","toLocaleString","Bitacora","put","response","data","message","BuscarFechaActual","nombre","apellido","hra_entrada","hra_salida_alm","hra_entrada_alm","hra_salida","CalculoTiempoDiario","p1","p2","hora1","split","hora2","t1","t2","setHours","getHours","getMinutes","getSeconds"],"mappings":"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","sourcesContent":["import React, {Component,useEffect, useRef, useState} from 'react';\r\nimport logo from './img/logo.jpg';\r\nimport Reloj from './componentes/Reloj';\r\nimport Axios from 'axios'\r\nimport './css/App.css';\r\nimport { findAllByTestId } from '@testing-library/react';\r\n\r\n\r\n//aumentar el tiempo \r\n//revisar lo de los periodos para marcaje y usar ifs para saber donde ubicar donde iria el marcaje\r\n//esto ultimo hacerlo con ifs\r\n\r\nconst date = new Date();\r\n\r\nfunction useAsyncState(initialValue) {\r\n  const [value, setValue] = useState(initialValue);\r\n  const setter = x =>\r\n    new Promise(resolve => {\r\n      setValue(x);\r\n      resolve(x);\r\n    });\r\n  return [value, setter];\r\n}\r\n\r\n\r\nfunction App (){\r\n\r\nconst[mensajeNombre, setMensajeNombre] =useAsyncState(\"\");\r\nconst[mensajeApellido, setMensajeApellido] =useAsyncState(\"\");\r\n//puede servir a futuro\r\nconst[mensajeHoraEnt, setMensajeHoraEnt] =useAsyncState(\"\");\r\nconst[mensajeHoraSal, setMensajeHoraSal] =useAsyncState(\"\");\r\nconst[mensajeHoraEntAlm, setMensajeHoraEntAlm] =useAsyncState(\"\");\r\nconst[mensajeHoraSalAlm, setMensajeHoraSalAlm] =useAsyncState(\"\");\r\n//\r\nconst[controlador1, setControlador1]=useAsyncState(\"\");\r\nconst[controlador2, setControlador2]=useAsyncState(\"\");\r\nconst[controlador3, setControlador3]=useAsyncState(\"\");\r\nconst[controlador4, setControlador4]=useAsyncState(\"\");\r\nconst[controlador5, setControlador5]=useAsyncState(\"\");\r\n\r\n\r\n  //////\r\n  const [state, setState] = useState('');\r\n\r\n  const captura = (event) => {  \r\n      \r\n    //condicion para la busqueda e ingreso de datos cuando el lector manda la señal\r\n    if(event.key==='Enter'){\r\n    //se cambia el estado al nombre de la tecla que es presionada, en este caso es la tecla enter\r\n      setState(event.key);\r\n      //se llama a la funcion \r\n      BusquedaEmpleado();\r\n    }\r\n  };\r\n////////\r\n\r\n//se declaran variables para envío de datos del MVC\r\nconst [codigo_barra, setCodigo_Barra] = useState(\"\");\r\n\r\n \r\n//hace focus al texbox que obtendrá la variable del codigo barras\r\nconst focusDiv = useRef(null);\r\nuseEffect(()=>{\r\n  const focusPermanente = setInterval (()=>{\r\n    //selecciona el texto del input \r\n    focusDiv.current.blur();\r\n    if(focusDiv.current)focusDiv.current.focus();\r\n  },500);\r\n  return()=>clearInterval(focusPermanente);\r\n},[focusDiv]);\r\n\r\n\r\n//seleccionar todo el contenido \r\nconst handleFocus = (event) => event.target.select();\r\n\r\nconst HandlerOne=(e)=>{\r\n  // e.preventDefault();\r\n   setControlador1('Inicia Request al Backend');\r\n setTimeout(()=>{\r\n   setControlador1('1')\r\n },1000)\r\n }\r\n useEffect(()=>{\r\n  if(controlador1 === '1'){\r\n    ingresoDatos(codigo_barra);\r\n    \r\n  }\r\n},[controlador1])\r\n\r\nconst HandlerTwo=(e)=>{\r\n  // e.preventDefault();\r\n   setControlador2('Inicia Request al Backend');\r\n setTimeout(()=>{\r\n   setControlador2('2')\r\n },1000)\r\n }\r\n useEffect(()=>{\r\n   if(controlador2 === '2'){\r\n     ActualizarDatosHraSalidaAlm(codigo_barra);\r\n     \r\n   }\r\n },[controlador2])\r\n\r\n\r\n const HandlerThree=(e)=>{\r\n  //e.preventDefault();\r\n  setControlador3('Inicia Request al Backend');\r\nsetTimeout(()=>{\r\n  setControlador3('3')\r\n\r\n},1000)\r\n}\r\nuseEffect(()=>{\r\n  if(controlador3 === '3'){\r\n    ActualizarDatosHraEntradaAlm(codigo_barra);\r\n  \r\n    \r\n  }\r\n},[controlador3])\r\n\r\n\r\nconst HandlerFour=(e)=>{\r\n // e.preventDefault();\r\n  setControlador4('Inicia Request al Backend');\r\nsetTimeout(()=>{\r\n  setControlador4('4')\r\n},1000)\r\n}\r\nuseEffect(()=>{\r\n  if(controlador4 === '4'){\r\n    ActualizarDatosHraSalida(codigo_barra);\r\n\r\n  }\r\n},[controlador4])\r\n\r\nconst HandlerFive=(e)=>{\r\n  // e.preventDefault();\r\n   setControlador5('Inicia Request al Backend');\r\n setTimeout(()=>{\r\n   setControlador5('5')\r\n },1500)\r\n }\r\n useEffect(()=>{\r\n   if(controlador5 === '5'){\r\n    //document.getElementById(\"myForm\").reset();\r\n\r\n     //window.location.href = window.location.href;\r\n   }\r\n },[controlador5])\r\n\r\n\r\n\r\n\r\n//insertar datos\r\nconst ingresoDatos =()=>{\r\n  Axios.post('http://localhost:3001/DatosMarcajeEmpleado', {    \r\n\r\n    hora_marcaje:\"\",\r\n    codigo_barra: codigo_barra,\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n    //se llama a la fecha \r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n}).then(()=>{\r\n \r\n\r\n  \r\nconsole.log(date.toLocaleString());\r\nconsole.log(\"conexion exitosa\");\r\nconsole.log(\"hora:\");\r\nconsole.log(date.toLocaleTimeString());\r\nconsole.log(date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear());\r\n//refresca la pagina para liberar el cargado de memoria de las variables usadas\r\n//window.location.href = window.location.href;\r\n  });\r\n};\r\n//\r\n\r\n\r\n//insertar datos\r\nconst Bitacora =()=>{\r\n  Axios.post('http://localhost:3001/bitacora', {    \r\n    codigo_barra: codigo_barra,\r\n    //se llama a la fecha y obtiene solamente la hora\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n}).then(()=>{\r\n\r\n  });\r\n};\r\n//\r\n\r\n\r\n//\r\nconst ActualizarDatosHraSalidaAlm = (codigo_barra)=>{\r\n\r\n  Axios.put('http://localhost:3001/actualizarHraSalidaAlm',{\r\n    codigo_barra:codigo_barra,\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n  \r\n  }).then(()=>{\r\n\r\n    //window.location.href = window.location.href;\r\n    \r\n  });  \r\n};\r\n\r\nconst ActualizarDatosHraEntradaAlm = (codigo_barra)=>{\r\n\r\n  Axios.put('http://localhost:3001/actualizarHraEntradaAlm',{\r\n    codigo_barra:codigo_barra,\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n\r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n\r\n  }).then(()=>{\r\n    //window.location.href = window.location.href;\r\n    \r\n\r\n  \r\n  });  \r\n};\r\n\r\nconst ActualizarDatosHraSalida = (codigo_barra)=>{\r\n\r\n  Axios.put('http://localhost:3001/actualizarHraSalida',{\r\n    codigo_barra:codigo_barra,\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n\r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n\r\n  }).then(()=>{\r\n   // window.location.href = window.location.href;\r\n    \r\n  });  \r\n};\r\n//\r\n\r\n//buscar datos\r\nconst BusquedaEmpleado = () => {\r\n  Axios.post('http://localhost:3001/buscarEmpleado',{\r\n    codigo_barra:codigo_barra,\r\n\r\n}).then((response)=>{\r\n\r\n    if(response.data.message){\r\n        //muestra mensaje de Empleado no encontrado\r\n        setMensajeNombre(response.data.message)\r\n        setMensajeApellido(\"\")\r\n        HandlerFive();\r\n       }else{\r\n\r\n        BuscarFechaActual();\r\n        setMensajeNombre(response.data[0].nombre)\r\n        setMensajeApellido(response.data[0].apellido)\r\n       }\r\n\r\n       });\r\n    };\r\n//\r\n\r\n//buscar datos\r\nconst BuscarFechaActual = () => {\r\n    Axios.post('http://localhost:3001/buscarFecha',{\r\n        codigo_barra:codigo_barra,\r\n        dia_marcaje: date.getDate(),\r\n        mes_marcaje: (date.getMonth()+1),\r\n        periodo_marcaje: date.getFullYear(),\r\n\r\n  }).then((response)=>{\r\n  \r\n     \r\n\r\n    if(response.data.message){\r\n    \r\n        //Se inserta Hora Entrada\r\n        console.log(\"Ingreso Marcaje: 0\");\r\n        HandlerOne();\r\n        Bitacora();\r\n        \r\n\r\n       }else{\r\n\r\n        \r\n           if (response.data[0].hra_entrada != null && response.data[0].hra_salida_alm == null && response.data[0].hra_entrada_alm == null && response.data[0].hra_salida == null){\r\n         console.log(\"Ingreso mensaje hora Salida Almuerzo: 1\");\r\n         HandlerTwo();\r\n             Bitacora();\r\n         }else{\r\n           if(response.data[0].hra_entrada != null && response.data[0].hra_salida_alm != null && response.data[0].hra_entrada_alm == null && response.data[0].hra_salida == null){\r\n             console.log(\"Ingreso mensaje hora Entrada Almuerzo: 2\");\r\n             HandlerThree();\r\n             //ActualizarDatosHraEntradaAlm(codigo_barra);\r\n             Bitacora();\r\n         }else{\r\n           if(response.data[0].hra_entrada != null && response.data[0].hra_salida_alm != null && response.data[0].hra_entrada_alm != null && response.data[0].hra_salida == null){\r\n             console.log(\"Ingreso mensaje hora Salida: 3\");\r\n         HandlerFour();\r\n             //ActualizarDatosHraSalida(codigo_barra);\r\n             //CalculoTiempoDiario();\r\n             Bitacora();\r\n             console.log(\"Marcajes posibles realizados\");\r\n             }else{\r\n               if(response.data[0].hra_entrada != null && response.data[0].hra_salida_alm != null && response.data[0].hra_entrada_alm != null && response.data[0].hra_salida != null){\r\n                 \r\n                 //setMensajeNombre(\"Ya se han realizado todos los marcajes del día\")\r\n                 //setMensajeApellido(\"\")\r\n                 HandlerFive();\r\n                 CalculoTiempoDiario();\r\n                 setMensajeHoraEnt(response.data[0].hra_entrada);\r\n                 setMensajeHoraSal(response.data[0].hra_salida);\r\n            \r\n               \r\n               }else{\r\n                 console.log(\"El empleado ha realizado un marcaje erróneo \");\r\n                 \r\n               }\r\n             }\r\n           }\r\n         }\r\n         \r\n          }\r\n        \r\n    });\r\n  };\r\n  //\r\n\r\n\r\n\r\n//\r\nconst CalculoTiempoDiario =()=>{\r\n\r\n  console.log(\"Hora E: \" + mensajeHoraEnt);\r\n  console.log(\"Hora S: \" + mensajeHoraSal);\r\n  var p1 = (mensajeHoraSal);\r\n  var p2 = (mensajeHoraEnt);\r\n  var hora1 = (p1).split(\":\"),\r\n      hora2 = (p2).split(\":\"),\r\n      t1 = new Date(),\r\n      t2 = new Date();\r\n//Se establecen en arreglos los 3 parametros\r\nt1.setHours(hora1[0], hora1[1], hora1[2]);\r\nt2.setHours(hora2[0], hora2[1], hora2[2]);\r\n//Calculo de tiempo laborado diariamente\r\nt1.setHours(t1.getHours() - t2.getHours(), t1.getMinutes() - t2.getMinutes(), t1.getSeconds() - t2.getSeconds());\r\n//Mensaje de total de Horas\r\nconsole.log(\"Total de Tiempo Laborado el día de hoy: \" + (t1.getHours() ? t1.getHours() + (t1.getHours() > 1 ? \" horas\" : \" hora\") : \"\") + (t1.getMinutes() ? \", \" + t1.getMinutes() + (t1.getMinutes() > 1 ? \" minutos\" : \" minuto\") : \"\") + (t1.getSeconds() ? (t1.getHours() || t1.getMinutes() ? \" y \" : \"\") + t1.getSeconds() + (t1.getSeconds() > 1 ? \" segundos\" : \" segundo\") : \"\"));\r\n//para la consulta \r\n//console.log((t1.getHours() ? t1.getHours() + (t1.getHours() > 1 ? \"\" : \"\") : \"\") + (t1.getMinutes() ? \":\" + t1.getMinutes() + (t1.getMinutes() > 1 ? \"\" : \"\") : \"\") + (t1.getSeconds() ? (t1.getHours() || t1.getMinutes() ? \":\" : \"\") + t1.getSeconds() + (t1.getSeconds() > 1 ? \"\" : \"\") : \"\"));\r\n\r\n}\r\n\r\n  return(\r\n    <main>\r\n    <div className =\"img_logo\">\r\n      <img src={logo}/>\r\n    </div>\r\n    <div className=\"reloj\">\r\n      <div>\r\n      <Reloj></Reloj>\r\n      </div>\r\n    </div>\r\n    <div className=\"nombre_emp\">\r\n    <h1>{mensajeNombre} {mensajeApellido}</h1>\r\n    </div>\r\n      <div className=\"codigo_barra\">\r\n        <input type=\"text\" placeholder='codigo' ref={focusDiv}   onKeyDown={(e) => captura(e)}  onFocus={handleFocus} onChange={(event) => {setCodigo_Barra(event.target.value);}}/>\r\n      </div>  \r\n    </main>\r\n  )\r\n}\r\n\r\n  export default App;"]},"metadata":{},"sourceType":"module"}