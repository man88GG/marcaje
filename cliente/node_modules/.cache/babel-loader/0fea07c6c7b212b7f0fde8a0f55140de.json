{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\agarcia\\\\marcaje\\\\cliente\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { Component, useEffect, useRef, useState } from 'react';\nimport logo from './img/logo.jpg';\nimport Reloj from './componentes/Reloj';\nimport Axios from 'axios';\nimport './css/App.css';\nimport { findAllByTestId } from '@testing-library/react'; //ver como obtener los valores al realizar la busqueda la primera vez\n//buscar fecha actual\n//si no hay la inserta y busca empleado (o se llama a si misma la funcion)\n//si hay nomas busca empleado\n//si no existe empleado, mostrar mensaje que no existe\n// si existe, comparar los nulls de las fechas para saber donde insertar\n//aumentar el tiempo \n//reloj ya arreglado\n//revisar lo de los periodos para marcaje y usar ifs para saber donde ubicar donde iria el marcaje\n//esto ultimo hacerl con ifs\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst date = new Date();\n\nfunction useAsyncState(initialValue) {\n  _s();\n\n  const [value, setValue] = useState(initialValue);\n\n  const setter = x => new Promise(resolve => {\n    setValue(x);\n    resolve(x);\n  });\n\n  return [value, setter];\n}\n\n_s(useAsyncState, \"L08zUdRTae9t+nWvf9xbU6NcRrM=\");\n\nfunction App() {\n  _s2();\n\n  const [mensajeNombre, setMensajeNombre] = useState(\"\");\n  const [mensajeApellido, setMensajeApellido] = useState(\"\");\n  const [mensajeHoraEnt, setMensajeHoraEnt] = useState(\"\");\n  const [mensajeHoraSal, setMensajeHoraSal] = useState(\"\");\n  const [mensajeHoraEntAlm, setMensajeHoraEntAlm] = useState(\"\");\n  const [mensajeHoraSalAlm, setMensajeHoraSalAlm] = useState(\"\");\n  const [controlador1, setControlador1] = useState(\"\");\n  const [controlador2, setControlador2] = useState(\"\");\n  const [controlador3, setControlador3] = useState(\"\");\n  const [controlador4, setControlador4] = useState(\"\");\n  const [controlador5, setControlador5] = useState(\"\");\n  const total_horas = 0;\n  const [count, setCount] = useAsyncState(0);\n  const [message, setMessage] = useAsyncState(\"\");\n\n  function increment() {\n    setCount(count + 1).then(count => setMessage(`count is ${count}`));\n  }\n\n  function decrement() {\n    setCount(count - 1).then(count => setMessage(`count is ${count}`));\n  }\n\n  const [mensajeBorrar, setMensajeBorrar] = useState([]); //////\n\n  const [state, setState] = useState('');\n\n  const captura = event => {\n    //condicion para la busqueda e ingreso de datos cuando el lector manda la señal\n    if (event.key === 'Enter') {\n      //se cambia el estado al nombre de la tecla que es presionada, en este caso es la tecla enter\n      setState(event.key); //se llama a la funcion \n\n      BusquedaEmpleado();\n    }\n  }; ////////\n  //se declaran variables para envío de datos del MVC\n\n\n  const [codigo_barra, setCodigo_Barra] = useState(\"\"); //Se obtiene la fecha actual y se divide en fragmentos para mostrar en el diseño luego\n  /////\n\n  const [clockState, setClockState] = useState();\n  useEffect(() => {\n    setInterval(() => {\n      const date = new Date();\n      setClockState(date.toLocaleTimeString());\n    }, 1000);\n  }, []); /////\n  //hace focus al texbox que obtendrá la variable del codigo barras\n\n  const focusDiv = useRef(null);\n  useEffect(() => {\n    const focusPermanente = setInterval(() => {\n      //selecciona el texto del input \n      focusDiv.current.blur();\n      if (focusDiv.current) focusDiv.current.focus();\n    }, 500);\n    return () => clearInterval(focusPermanente);\n  }, [focusDiv]); //seleccionar todo el contenido \n\n  const handleFocus = event => event.target.select();\n\n  const HandlerOne = e => {\n    // e.preventDefault();\n    setControlador1('Inicia Request al Backend');\n    setTimeout(() => {\n      setControlador1('1');\n    }, 1000);\n  };\n\n  useEffect(() => {\n    if (controlador1 === '1') {\n      ingresoDatos(codigo_barra);\n    }\n  }, [controlador1]);\n\n  const HandlerTwo = e => {\n    // e.preventDefault();\n    setControlador2('Inicia Request al Backend');\n    setTimeout(() => {\n      setControlador2('2');\n    }, 1000);\n  };\n\n  useEffect(() => {\n    if (controlador2 === '2') {\n      ActualizarDatosHraSalidaAlm(codigo_barra);\n    }\n  }, [controlador2]);\n\n  const HandlerThree = e => {\n    //e.preventDefault();\n    setControlador3('Inicia Request al Backend');\n    setTimeout(() => {\n      setControlador3('3');\n    }, 1000);\n  };\n\n  useEffect(() => {\n    if (controlador3 === '3') {\n      ActualizarDatosHraEntradaAlm(codigo_barra);\n    }\n  }, [controlador3]);\n\n  const HandlerFour = e => {\n    // e.preventDefault();\n    setControlador4('Inicia Request al Backend');\n    setTimeout(() => {\n      setControlador4('4');\n    }, 1000);\n  };\n\n  useEffect(() => {\n    if (controlador4 === '4') {\n      ActualizarDatosHraSalida(codigo_barra);\n    }\n  }, [controlador4]);\n\n  const HandlerFive = e => {\n    // e.preventDefault();\n    setControlador5('Inicia Request al Backend');\n    setTimeout(() => {\n      setControlador5('5');\n    }, 1500);\n  };\n\n  useEffect(() => {\n    if (controlador5 === '5') {\n      //document.getElementById(\"myForm\").reset();\n      window.location.href = window.location.href;\n    }\n  }, [controlador5]); //insertar datos\n\n  const ingresoDatos = () => {\n    Axios.post('http://localhost:3001/DatosMarcajeEmpleado', {\n      codigo_barra: codigo_barra,\n      hora_marcaje: date.toLocaleTimeString(),\n      //se llama a la fecha \n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(() => {\n      console.log(date.toLocaleString());\n      console.log(\"conexion exitosa\");\n      console.log(\"hora:\");\n      console.log(date.toLocaleTimeString());\n      console.log(date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear()); //refresca la pagina para liberar el cargado de memoria de las variables usadas\n\n      window.location.href = window.location.href;\n    });\n  }; //\n  //insertar datos\n\n\n  const Bitacora = () => {\n    Axios.post('http://localhost:3001/bitacora', {\n      codigo_barra: codigo_barra,\n      //se llama a la fecha y obtiene solamente la hora\n      hora_marcaje: date.toLocaleTimeString(),\n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(() => {});\n  }; //\n  //\n\n\n  const ActualizarDatosHraSalidaAlm = codigo_barra => {\n    Axios.put('http://localhost:3001/actualizarHraSalidaAlm', {\n      codigo_barra: codigo_barra,\n      hora_marcaje: date.toLocaleTimeString(),\n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(() => {\n      window.location.href = window.location.href;\n    });\n  };\n\n  const ActualizarDatosHraEntradaAlm = codigo_barra => {\n    Axios.put('http://localhost:3001/actualizarHraEntradaAlm', {\n      codigo_barra: codigo_barra,\n      hora_marcaje: date.toLocaleTimeString(),\n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(() => {\n      window.location.href = window.location.href;\n    });\n  };\n\n  const ActualizarDatosHraSalida = codigo_barra => {\n    Axios.put('http://localhost:3001/actualizarHraSalida', {\n      codigo_barra: codigo_barra,\n      hora_marcaje: date.toLocaleTimeString(),\n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(() => {\n      window.location.href = window.location.href;\n    });\n  }; //\n  //buscar datos\n\n\n  const BusquedaEmpleado = () => {\n    Axios.post('http://localhost:3001/buscarEmpleado', {\n      codigo_barra: codigo_barra\n    }).then(response => {\n      if (response.data.message) {\n        //muestra mensaje de Empleado no encontrado\n        setMensajeNombre(response.data.message);\n        setMensajeApellido(\"\");\n        HandlerFive();\n      } else {\n        BuscarFechaActual();\n        setMensajeNombre(response.data[0].nombre);\n        setMensajeApellido(response.data[0].apellido);\n      }\n    });\n  }; //\n  //buscar datos\n\n\n  const BuscarFechaActual = () => {\n    Axios.post('http://localhost:3001/buscarFecha', {\n      codigo_barra: codigo_barra,\n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(response => {\n      if (response.data.message) {\n        //Se inserta Hora Entrada\n        console.log(\"Ingreso Marcaje: 0\");\n        HandlerOne();\n        Bitacora();\n      } else {\n        // setMensajeNombre(response.data[0].hra_entrada);\n        /////\n        setMensajeHoraEnt(response.data[0].hra_entrada);\n        setMensajeHoraSalAlm(response.data[0].hra_salida_alm);\n        setMensajeHoraEntAlm(response.data[0].hra_entrada_alm);\n        setMensajeHoraSal(response.data[0].hra_salida);\n\n        if (mensajeHoraEnt != null && mensajeHoraSalAlm == null && mensajeHoraEntAlm == null && mensajeHoraSal == null) {\n          console.log(\"Ingreso mensaje hora Salida Almuerzo: 1\");\n          HandlerTwo();\n          Bitacora();\n        } else {\n          if (mensajeHoraEnt != null && mensajeHoraSalAlm != null && mensajeHoraEntAlm == null && mensajeHoraSal == null) {\n            console.log(\"Ingreso mensaje hora Entrada Almuerzo: 2\");\n            HandlerThree(); //ActualizarDatosHraEntradaAlm(codigo_barra);\n\n            Bitacora();\n          } else {\n            if (mensajeHoraEnt != null && mensajeHoraSalAlm != null && mensajeHoraEntAlm != null && mensajeHoraSal == null) {\n              console.log(\"Ingreso mensaje hora Salida: 3\");\n              HandlerFour(); //ActualizarDatosHraSalida(codigo_barra);\n              //CalculoTiempoDiario();\n\n              Bitacora();\n              console.log(\"Marcajes posibles realizados\");\n            } else {\n              if (mensajeHoraEnt != null && mensajeHoraSalAlm != null && mensajeHoraEntAlm != null && mensajeHoraSal != null) {\n                //setMensajeNombre(\"Ya se han realizado todos los marcajes del día\")\n                //setMensajeApellido(\"\")\n                HandlerFive();\n                CalculoTiempoDiario();\n                console.log(mensajeHoraEnt);\n                console.log(mensajeHoraSal);\n              } else {\n                console.log(\"El empleado ha realizado un marcaje erróneo \");\n              }\n            }\n          }\n        }\n\n        if (mensajeNombre === null) {\n          console.log(\"obtiene dato NULL\");\n        } else {\n          console.log(\"valor\");\n        }\n      }\n    });\n  }; //\n  //\n\n\n  const CalculoTiempoDiario = () => {\n    console.log(\"Hora E: \" + mensajeHoraEnt);\n    console.log(\"Hora S: \" + mensajeHoraSal);\n    var p1 = mensajeHoraSal;\n    var p2 = mensajeHoraEnt;\n    var hora1 = p1.split(\":\"),\n        hora2 = p2.split(\":\"),\n        t1 = new Date(),\n        t2 = new Date(); //Se establecen en arreglos los 3 parametros\n\n    t1.setHours(hora1[0], hora1[1], hora1[2]);\n    t2.setHours(hora2[0], hora2[1], hora2[2]); //Calculo de tiempo laborado diariamente\n\n    t1.setHours(t1.getHours() - t2.getHours(), t1.getMinutes() - t2.getMinutes(), t1.getSeconds() - t2.getSeconds()); //Mensaje de total de Horas\n\n    console.log(\"Total de Tiempo Laborado el día de hoy: \" + (t1.getHours() ? t1.getHours() + (t1.getHours() > 1 ? \" horas\" : \" hora\") : \"\") + (t1.getMinutes() ? \", \" + t1.getMinutes() + (t1.getMinutes() > 1 ? \" minutos\" : \" minuto\") : \"\") + (t1.getSeconds() ? (t1.getHours() || t1.getMinutes() ? \" y \" : \"\") + t1.getSeconds() + (t1.getSeconds() > 1 ? \" segundos\" : \" segundo\") : \"\")); //para la consulta \n    //console.log((t1.getHours() ? t1.getHours() + (t1.getHours() > 1 ? \"\" : \"\") : \"\") + (t1.getMinutes() ? \":\" + t1.getMinutes() + (t1.getMinutes() > 1 ? \"\" : \"\") : \"\") + (t1.getSeconds() ? (t1.getHours() || t1.getMinutes() ? \":\" : \"\") + t1.getSeconds() + (t1.getSeconds() > 1 ? \"\" : \"\") : \"\"));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img_logo\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reloj\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: clockState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nombre_emp\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [mensajeNombre, \" \", mensajeApellido]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"codigo_barra\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"codigo\",\n        ref: focusDiv,\n        onKeyDown: e => captura(e),\n        onFocus: handleFocus,\n        onChange: event => {\n          setCodigo_Barra(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Update Count!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Count: \", count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: increment,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: decrement,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 408,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"ICm8+XxYaSrCpyLX2ytOfefNZJs=\", false, function () {\n  return [useAsyncState, useAsyncState];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/agarcia/marcaje/cliente/src/App.js"],"names":["React","Component","useEffect","useRef","useState","logo","Reloj","Axios","findAllByTestId","date","Date","useAsyncState","initialValue","value","setValue","setter","x","Promise","resolve","App","mensajeNombre","setMensajeNombre","mensajeApellido","setMensajeApellido","mensajeHoraEnt","setMensajeHoraEnt","mensajeHoraSal","setMensajeHoraSal","mensajeHoraEntAlm","setMensajeHoraEntAlm","mensajeHoraSalAlm","setMensajeHoraSalAlm","controlador1","setControlador1","controlador2","setControlador2","controlador3","setControlador3","controlador4","setControlador4","controlador5","setControlador5","total_horas","count","setCount","message","setMessage","increment","then","decrement","mensajeBorrar","setMensajeBorrar","state","setState","captura","event","key","BusquedaEmpleado","codigo_barra","setCodigo_Barra","clockState","setClockState","setInterval","toLocaleTimeString","focusDiv","focusPermanente","current","blur","focus","clearInterval","handleFocus","target","select","HandlerOne","e","setTimeout","ingresoDatos","HandlerTwo","ActualizarDatosHraSalidaAlm","HandlerThree","ActualizarDatosHraEntradaAlm","HandlerFour","ActualizarDatosHraSalida","HandlerFive","window","location","href","post","hora_marcaje","dia_marcaje","getDate","mes_marcaje","getMonth","periodo_marcaje","getFullYear","console","log","toLocaleString","Bitacora","put","response","data","BuscarFechaActual","nombre","apellido","hra_entrada","hra_salida_alm","hra_entrada_alm","hra_salida","CalculoTiempoDiario","p1","p2","hora1","split","hora2","t1","t2","setHours","getHours","getMinutes","getSeconds"],"mappings":"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","sourcesContent":["import React, {Component,useEffect, useRef, useState} from 'react';\r\nimport logo from './img/logo.jpg';\r\nimport Reloj from './componentes/Reloj';\r\nimport Axios from 'axios'\r\nimport './css/App.css';\r\nimport { findAllByTestId } from '@testing-library/react';\r\n\r\n\r\n//ver como obtener los valores al realizar la busqueda la primera vez\r\n\r\n\r\n//buscar fecha actual\r\n//si no hay la inserta y busca empleado (o se llama a si misma la funcion)\r\n//si hay nomas busca empleado\r\n//si no existe empleado, mostrar mensaje que no existe\r\n// si existe, comparar los nulls de las fechas para saber donde insertar\r\n\r\n//aumentar el tiempo \r\n//reloj ya arreglado\r\n//revisar lo de los periodos para marcaje y usar ifs para saber donde ubicar donde iria el marcaje\r\n//esto ultimo hacerl con ifs\r\n\r\nconst date = new Date();\r\n\r\nfunction useAsyncState(initialValue) {\r\n  const [value, setValue] = useState(initialValue);\r\n  const setter = x =>\r\n    new Promise(resolve => {\r\n      setValue(x);\r\n      resolve(x);\r\n    });\r\n  return [value, setter];\r\n}\r\n\r\n\r\nfunction App (){\r\n\r\nconst[mensajeNombre, setMensajeNombre] =useState(\"\");\r\nconst[mensajeApellido, setMensajeApellido] =useState(\"\");\r\nconst[mensajeHoraEnt, setMensajeHoraEnt] =useState(\"\");\r\nconst[mensajeHoraSal, setMensajeHoraSal] =useState(\"\");\r\nconst[mensajeHoraEntAlm, setMensajeHoraEntAlm] =useState(\"\");\r\nconst[mensajeHoraSalAlm, setMensajeHoraSalAlm] =useState(\"\");\r\nconst[controlador1, setControlador1]=useState(\"\");\r\nconst[controlador2, setControlador2]=useState(\"\");\r\nconst[controlador3, setControlador3]=useState(\"\");\r\nconst[controlador4, setControlador4]=useState(\"\");\r\nconst[controlador5, setControlador5]=useState(\"\");\r\nconst total_horas =0;\r\n\r\n\r\n\r\nconst [count, setCount] = useAsyncState(0);\r\nconst [message, setMessage] = useAsyncState(\"\");\r\n\r\nfunction increment() {\r\n  setCount(count + 1).then(count => setMessage(`count is ${count}`));\r\n}\r\n\r\nfunction decrement() {\r\n  setCount(count - 1).then(count => setMessage(`count is ${count}`));\r\n}\r\n\r\n\r\n\r\nconst[mensajeBorrar, setMensajeBorrar] =useState([]);\r\n\r\n  //////\r\n  const [state, setState] = useState('');\r\n    \r\n\r\n  const captura = (event) => {\r\n    \r\n    //condicion para la busqueda e ingreso de datos cuando el lector manda la señal\r\n    if(event.key==='Enter'){\r\n      \r\n    //se cambia el estado al nombre de la tecla que es presionada, en este caso es la tecla enter\r\n      setState(event.key);\r\n      //se llama a la funcion \r\n      BusquedaEmpleado();\r\n      \r\n    }\r\n    \r\n  };\r\n////////\r\n\r\n//se declaran variables para envío de datos del MVC\r\nconst [codigo_barra, setCodigo_Barra] = useState(\"\");\r\n\r\n//Se obtiene la fecha actual y se divide en fragmentos para mostrar en el diseño luego\r\n/////\r\nconst [clockState, setClockState] = useState();\r\n\r\nuseEffect (()=>{ \r\n    setInterval(() => {\r\n      const date = new Date();\r\n      setClockState(date.toLocaleTimeString());\r\n    }, 1000);\r\n  }, []);\r\n/////\r\n\r\n \r\n//hace focus al texbox que obtendrá la variable del codigo barras\r\nconst focusDiv = useRef(null);\r\nuseEffect(()=>{\r\n  const focusPermanente = setInterval (()=>{\r\n    //selecciona el texto del input \r\n    focusDiv.current.blur();\r\n    if(focusDiv.current)focusDiv.current.focus();\r\n  },500);\r\n  return()=>clearInterval(focusPermanente);\r\n},[focusDiv]);\r\n\r\n\r\n//seleccionar todo el contenido \r\nconst handleFocus = (event) => event.target.select();\r\n\r\nconst HandlerOne=(e)=>{\r\n  // e.preventDefault();\r\n   setControlador1('Inicia Request al Backend');\r\n setTimeout(()=>{\r\n   setControlador1('1')\r\n },1000)\r\n }\r\n useEffect(()=>{\r\n  if(controlador1 === '1'){\r\n    ingresoDatos(codigo_barra);\r\n    \r\n  }\r\n},[controlador1])\r\n\r\nconst HandlerTwo=(e)=>{\r\n  // e.preventDefault();\r\n   setControlador2('Inicia Request al Backend');\r\n setTimeout(()=>{\r\n   setControlador2('2')\r\n },1000)\r\n }\r\n useEffect(()=>{\r\n   if(controlador2 === '2'){\r\n     ActualizarDatosHraSalidaAlm(codigo_barra);\r\n     \r\n   }\r\n },[controlador2])\r\n\r\n\r\n const HandlerThree=(e)=>{\r\n  //e.preventDefault();\r\n  setControlador3('Inicia Request al Backend');\r\nsetTimeout(()=>{\r\n  setControlador3('3')\r\n\r\n},1000)\r\n}\r\nuseEffect(()=>{\r\n  if(controlador3 === '3'){\r\n    ActualizarDatosHraEntradaAlm(codigo_barra);\r\n  \r\n    \r\n  }\r\n},[controlador3])\r\n\r\n\r\nconst HandlerFour=(e)=>{\r\n // e.preventDefault();\r\n  setControlador4('Inicia Request al Backend');\r\nsetTimeout(()=>{\r\n  setControlador4('4')\r\n},1000)\r\n}\r\nuseEffect(()=>{\r\n  if(controlador4 === '4'){\r\n    ActualizarDatosHraSalida(codigo_barra);\r\n\r\n  }\r\n},[controlador4])\r\n\r\nconst HandlerFive=(e)=>{\r\n  // e.preventDefault();\r\n   setControlador5('Inicia Request al Backend');\r\n setTimeout(()=>{\r\n   setControlador5('5')\r\n },1500)\r\n }\r\n useEffect(()=>{\r\n   if(controlador5 === '5'){\r\n    //document.getElementById(\"myForm\").reset();\r\n\r\n     window.location.href = window.location.href;\r\n   }\r\n },[controlador5])\r\n\r\n//insertar datos\r\nconst ingresoDatos =()=>{\r\n  Axios.post('http://localhost:3001/DatosMarcajeEmpleado', {    \r\n    codigo_barra: codigo_barra,\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n    //se llama a la fecha \r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n}).then(()=>{\r\n\r\nconsole.log(date.toLocaleString());\r\nconsole.log(\"conexion exitosa\");\r\nconsole.log(\"hora:\");\r\nconsole.log(date.toLocaleTimeString());\r\nconsole.log(date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear());\r\n//refresca la pagina para liberar el cargado de memoria de las variables usadas\r\nwindow.location.href = window.location.href;\r\n  });\r\n};\r\n//\r\n\r\n\r\n//insertar datos\r\nconst Bitacora =()=>{\r\n  Axios.post('http://localhost:3001/bitacora', {    \r\n    codigo_barra: codigo_barra,\r\n    //se llama a la fecha y obtiene solamente la hora\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n}).then(()=>{\r\n\r\n  });\r\n};\r\n//\r\n\r\n\r\n//\r\nconst ActualizarDatosHraSalidaAlm = (codigo_barra)=>{\r\n\r\n  Axios.put('http://localhost:3001/actualizarHraSalidaAlm',{\r\n    codigo_barra:codigo_barra,\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n  \r\n  }).then(()=>{\r\n    window.location.href = window.location.href;\r\n    \r\n  });  \r\n};\r\n\r\nconst ActualizarDatosHraEntradaAlm = (codigo_barra)=>{\r\n\r\n  Axios.put('http://localhost:3001/actualizarHraEntradaAlm',{\r\n    codigo_barra:codigo_barra,\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n\r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n\r\n  }).then(()=>{\r\n    window.location.href = window.location.href;\r\n    \r\n  \r\n  });  \r\n};\r\n\r\nconst ActualizarDatosHraSalida = (codigo_barra)=>{\r\n\r\n  Axios.put('http://localhost:3001/actualizarHraSalida',{\r\n    codigo_barra:codigo_barra,\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n\r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n\r\n  }).then(()=>{\r\n    window.location.href = window.location.href;\r\n    \r\n  });  \r\n};\r\n//\r\n\r\n//buscar datos\r\nconst BusquedaEmpleado = () => {\r\n  Axios.post('http://localhost:3001/buscarEmpleado',{\r\n    codigo_barra:codigo_barra,\r\n\r\n}).then((response)=>{\r\n\r\n    if(response.data.message){\r\n        //muestra mensaje de Empleado no encontrado\r\n        setMensajeNombre(response.data.message)\r\n        setMensajeApellido(\"\")\r\n        HandlerFive();\r\n       }else{\r\n\r\n        BuscarFechaActual();\r\n        setMensajeNombre(response.data[0].nombre)\r\n        setMensajeApellido(response.data[0].apellido)\r\n       }\r\n\r\n       });\r\n    };\r\n//\r\n\r\n//buscar datos\r\nconst BuscarFechaActual = () => {\r\n    Axios.post('http://localhost:3001/buscarFecha',{\r\n        codigo_barra:codigo_barra,\r\n        dia_marcaje: date.getDate(),\r\n        mes_marcaje: (date.getMonth()+1),\r\n        periodo_marcaje: date.getFullYear(),\r\n\r\n  }).then((response)=>{\r\n  \r\n    if(response.data.message){\r\n    \r\n        //Se inserta Hora Entrada\r\n        console.log(\"Ingreso Marcaje: 0\");\r\n        HandlerOne();\r\n        Bitacora();\r\n        \r\n\r\n       }else{\r\n\r\n          // setMensajeNombre(response.data[0].hra_entrada);\r\n         /////\r\n            setMensajeHoraEnt(response.data[0].hra_entrada)\r\n            setMensajeHoraSalAlm(response.data[0].hra_salida_alm)\r\n            setMensajeHoraEntAlm(response.data[0].hra_entrada_alm)\r\n            setMensajeHoraSal(response.data[0].hra_salida)\r\n            \r\n       \r\n           if (mensajeHoraEnt != null && mensajeHoraSalAlm == null && mensajeHoraEntAlm == null && mensajeHoraSal == null){\r\n         console.log(\"Ingreso mensaje hora Salida Almuerzo: 1\");\r\n         HandlerTwo();\r\n             Bitacora();\r\n         }else{\r\n           if(mensajeHoraEnt != null && mensajeHoraSalAlm != null && mensajeHoraEntAlm == null && mensajeHoraSal == null){\r\n             console.log(\"Ingreso mensaje hora Entrada Almuerzo: 2\");\r\n             HandlerThree();\r\n             //ActualizarDatosHraEntradaAlm(codigo_barra);\r\n             Bitacora();\r\n         }else{\r\n           if(mensajeHoraEnt != null && mensajeHoraSalAlm != null && mensajeHoraEntAlm != null && mensajeHoraSal == null){\r\n             console.log(\"Ingreso mensaje hora Salida: 3\");\r\n         HandlerFour();\r\n             //ActualizarDatosHraSalida(codigo_barra);\r\n             //CalculoTiempoDiario();\r\n             Bitacora();\r\n             console.log(\"Marcajes posibles realizados\");\r\n             }else{\r\n               if(mensajeHoraEnt != null && mensajeHoraSalAlm != null && mensajeHoraEntAlm != null && mensajeHoraSal != null){\r\n                 \r\n                 //setMensajeNombre(\"Ya se han realizado todos los marcajes del día\")\r\n                 //setMensajeApellido(\"\")\r\n                 HandlerFive();\r\n                 CalculoTiempoDiario();\r\n                 console.log(mensajeHoraEnt);\r\n                 console.log(mensajeHoraSal);\r\n            \r\n               }else{\r\n                 console.log(\"El empleado ha realizado un marcaje erróneo \");\r\n                 \r\n               }\r\n             }\r\n           }\r\n         }\r\n         \r\n             if(mensajeNombre === null){\r\n             console.log(\"obtiene dato NULL\");\r\n             }else{\r\n             console.log(\"valor\");\r\n            \r\n             }\r\n \r\n          }\r\n        \r\n    });\r\n  };\r\n  //\r\n\r\n\r\n\r\n//\r\nconst CalculoTiempoDiario =()=>{\r\n\r\n  console.log(\"Hora E: \" + mensajeHoraEnt);\r\n  console.log(\"Hora S: \" + mensajeHoraSal);\r\n  var p1 = (mensajeHoraSal);\r\n  var p2 = (mensajeHoraEnt);\r\n  var hora1 = (p1).split(\":\"),\r\n      hora2 = (p2).split(\":\"),\r\n      t1 = new Date(),\r\n      t2 = new Date();\r\n//Se establecen en arreglos los 3 parametros\r\nt1.setHours(hora1[0], hora1[1], hora1[2]);\r\nt2.setHours(hora2[0], hora2[1], hora2[2]);\r\n//Calculo de tiempo laborado diariamente\r\nt1.setHours(t1.getHours() - t2.getHours(), t1.getMinutes() - t2.getMinutes(), t1.getSeconds() - t2.getSeconds());\r\n//Mensaje de total de Horas\r\nconsole.log(\"Total de Tiempo Laborado el día de hoy: \" + (t1.getHours() ? t1.getHours() + (t1.getHours() > 1 ? \" horas\" : \" hora\") : \"\") + (t1.getMinutes() ? \", \" + t1.getMinutes() + (t1.getMinutes() > 1 ? \" minutos\" : \" minuto\") : \"\") + (t1.getSeconds() ? (t1.getHours() || t1.getMinutes() ? \" y \" : \"\") + t1.getSeconds() + (t1.getSeconds() > 1 ? \" segundos\" : \" segundo\") : \"\"));\r\n//para la consulta \r\n//console.log((t1.getHours() ? t1.getHours() + (t1.getHours() > 1 ? \"\" : \"\") : \"\") + (t1.getMinutes() ? \":\" + t1.getMinutes() + (t1.getMinutes() > 1 ? \"\" : \"\") : \"\") + (t1.getSeconds() ? (t1.getHours() || t1.getMinutes() ? \":\" : \"\") + t1.getSeconds() + (t1.getSeconds() > 1 ? \"\" : \"\") : \"\"));\r\n\r\n}\r\n\r\n  return(\r\n    <main>\r\n    <div className =\"img_logo\">\r\n      <img src={logo}/>\r\n    </div>\r\n    <div className=\"reloj\">\r\n      <div>\r\n      {clockState}\r\n      </div>\r\n    </div>\r\n    <div className=\"nombre_emp\">\r\n    <h1>{mensajeNombre} {mensajeApellido}</h1>\r\n    </div>\r\n      <div className=\"codigo_barra\">\r\n        <input type=\"text\" placeholder='codigo' ref={focusDiv}   onKeyDown={(e) => captura(e)}  onFocus={handleFocus} onChange={(event) => {setCodigo_Barra(event.target.value);}}/>\r\n      </div>\r\n      <div>\r\n        <h1>Update Count!</h1>\r\n        <p>Count: {count}</p>\r\n        <p>{message}</p>\r\n        <button type=\"button\" onClick={increment}>+</button>\r\n        <button type=\"button\" onClick={decrement}>-</button>\r\n      </div>\r\n  \r\n    </main>\r\n  )\r\n}\r\n\r\n  export default App;"]},"metadata":{},"sourceType":"module"}