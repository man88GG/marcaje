{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\agarcia\\\\marcaje\\\\cliente\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { Component, useEffect, useRef, useState } from 'react';\nimport logo from './img/logo.jpg';\nimport Reloj from './componentes/Reloj';\nimport Axios from 'axios';\nimport './css/App.css';\nimport { findAllByTestId } from '@testing-library/react'; //aumentar el tiempo que aparece el texto\n//revisar lo de los periodos para marcaje y usar ifs para saber donde ubicar donde iria el marcaje\n//esto ultimo hacerlo con ifs\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useAsyncState(initialValue) {\n  _s();\n\n  const [value, setValue] = useState(initialValue);\n\n  const setter = x => new Promise(resolve => {\n    setValue(x);\n    resolve(x);\n  });\n\n  return [value, setter];\n}\n\n_s(useAsyncState, \"L08zUdRTae9t+nWvf9xbU6NcRrM=\");\n\nfunction App() {\n  _s2();\n\n  const date = new Date();\n  const [mensajeNombre, setMensajeNombre] = useAsyncState(\"\");\n  const [mensajeApellido, setMensajeApellido] = useAsyncState(\"\"); //puede servir a futuro\n\n  const [mensajeHoraEnt, setMensajeHoraEnt] = useAsyncState(\"\");\n  const [mensajeHoraSal, setMensajeHoraSal] = useAsyncState(\"\");\n  const [mensajeHoraEntAlm, setMensajeHoraEntAlm] = useAsyncState(\"\");\n  const [mensajeHoraSalAlm, setMensajeHoraSalAlm] = useAsyncState(\"\"); //\n\n  const [controlador1, setControlador1] = useAsyncState(\"\");\n  const [controlador2, setControlador2] = useAsyncState(\"\");\n  const [controlador3, setControlador3] = useAsyncState(\"\");\n  const [controlador4, setControlador4] = useAsyncState(\"\");\n  const [controlador5, setControlador5] = useAsyncState(\"\"); //////\n\n  const [state, setState] = useState('');\n\n  const captura = event => {\n    //condicion para la busqueda e ingreso de datos cuando el lector manda la señal\n    if (event.key === 'Enter') {\n      //se cambia el estado al nombre de la tecla que es presionada, en este caso es la tecla enter\n      setState(event.key); //se llama a la funcion \n\n      BusquedaEmpleado();\n    }\n  }; ////////\n  //se declaran variables para envío de datos del MVC\n\n\n  const [codigo_barra, setCodigo_Barra] = useState(\"\"); //hace focus al texbox que obtendrá la variable del codigo barras\n\n  const focusDiv = useRef(null);\n  useEffect(() => {\n    const focusPermanente = setInterval(() => {\n      //selecciona el texto del input \n      focusDiv.current.blur();\n      if (focusDiv.current) focusDiv.current.focus();\n    }, 500);\n    return () => clearInterval(focusPermanente);\n  }, [focusDiv]); //seleccionar todo el contenido \n\n  const handleFocus = event => event.target.select();\n\n  const HandlerOne = e => {\n    // e.preventDefault();\n    setControlador1('Inicia Request al Backend');\n    setTimeout(() => {\n      setControlador1('1');\n    }, 500);\n  };\n\n  useEffect(() => {\n    if (controlador1 === '1') {}\n  }, [controlador1]);\n\n  const HandlerTwo = e => {\n    // e.preventDefault();\n    setControlador2('Inicia Request al Backend');\n    setTimeout(() => {\n      setControlador2('2');\n    }, 500);\n  };\n\n  useEffect(() => {\n    if (controlador2 === '2') {}\n  }, [controlador2]);\n\n  const HandlerThree = e => {\n    //e.preventDefault();\n    setControlador3('Inicia Request al Backend');\n    setTimeout(() => {\n      setControlador3('3');\n    }, 500);\n  };\n\n  useEffect(() => {\n    if (controlador3 === '3') {}\n  }, [controlador3]);\n\n  const HandlerFour = e => {\n    // e.preventDefault();\n    setControlador4('Inicia Request al Backend');\n    setTimeout(() => {\n      setControlador4('4');\n    }, 500);\n  };\n\n  useEffect(() => {\n    if (controlador4 === '4') {}\n  }, [controlador4]);\n\n  const HandlerFive = e => {\n    // e.preventDefault();\n    setControlador5('Inicia Request al Backend');\n    setTimeout(() => {\n      setControlador5('5');\n    }, 3000);\n  };\n\n  useEffect(() => {\n    if (controlador5 === '5') {\n      //document.getElementById(\"myForm\").reset();\n      window.location.href = window.location.href;\n    }\n  }, [controlador5]); //insertar datos\n\n  const ingresoDatos = () => {\n    Axios.post('http://localhost:3001/DatosMarcajeEmpleado', {\n      codigo_barra: codigo_barra,\n      hora_marcaje: date.toLocaleTimeString(),\n      //se llama a la fecha \n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(() => {\n      console.log(date.toLocaleString());\n      console.log(\"conexion exitosa\");\n      console.log(\"hora:\");\n      console.log(date.toLocaleTimeString());\n      console.log(date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear()); //refresca la pagina para liberar el cargado de memoria de las variables usadas\n      //window.location.href = window.location.href;\n    });\n  }; //\n  //insertar datos\n\n\n  const Bitacora = () => {\n    Axios.post('http://localhost:3001/bitacora', {\n      codigo_barra: codigo_barra,\n      //se llama a la fecha y obtiene solamente la hora\n      hora_marcaje: date.toLocaleTimeString(),\n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(() => {});\n  }; //\n  //\n\n\n  const ActualizarDatosHraSalidaAlm = codigo_barra => {\n    Axios.put('http://localhost:3001/actualizarHraSalidaAlm', {\n      codigo_barra: codigo_barra,\n      hora_marcaje: date.toLocaleTimeString(),\n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(() => {//window.location.href = window.location.href;\n    });\n  };\n\n  const ActualizarDatosHraEntradaAlm = codigo_barra => {\n    Axios.put('http://localhost:3001/actualizarHraEntradaAlm', {\n      codigo_barra: codigo_barra,\n      hora_marcaje: date.toLocaleTimeString(),\n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(() => {//window.location.href = window.location.href;\n    });\n  };\n\n  const ActualizarDatosHraSalida = codigo_barra => {\n    Axios.put('http://localhost:3001/actualizarHraSalida', {\n      codigo_barra: codigo_barra,\n      hora_marcaje: date.toLocaleTimeString(),\n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(() => {\n      // window.location.href = window.location.href;\n      BusquedaEmpleado();\n    });\n  }; //\n  //buscar datos\n\n\n  const BusquedaEmpleado = () => {\n    Axios.post('http://localhost:3001/buscarEmpleado', {\n      codigo_barra: codigo_barra\n    }).then(response => {\n      if (response.data.message) {\n        //muestra mensaje de Empleado no encontrado\n        setMensajeNombre(response.data.message);\n        setMensajeApellido(\"\");\n      } else {\n        BuscarFechaActual();\n        setMensajeNombre(response.data[0].nombre);\n        setMensajeApellido(response.data[0].apellido);\n      }\n    });\n  }; //\n  //buscar datos\n\n\n  const BuscarFechaActual = () => {\n    Axios.post('http://localhost:3001/buscarFecha', {\n      codigo_barra: codigo_barra,\n      dia_marcaje: date.getDate(),\n      mes_marcaje: date.getMonth() + 1,\n      periodo_marcaje: date.getFullYear()\n    }).then(response => {\n      if (response.data.message) {\n        //Se inserta Hora Entrada\n        console.log(\"Ingreso Marcaje: 0\");\n        ingresoDatos(codigo_barra);\n        Bitacora();\n      } else {\n        if (response.data[0].hra_entrada != null && response.data[0].hra_salida_alm == null && response.data[0].hra_entrada_alm == null && response.data[0].hra_salida == null) {\n          console.log(\"Ingreso mensaje hora Salida Almuerzo: 1\");\n          ActualizarDatosHraSalidaAlm(codigo_barra);\n          Bitacora();\n        } else {\n          if (response.data[0].hra_entrada != null && response.data[0].hra_salida_alm != null && response.data[0].hra_entrada_alm == null && response.data[0].hra_salida == null) {\n            console.log(\"Ingreso mensaje hora Entrada Almuerzo: 2\");\n            ActualizarDatosHraEntradaAlm(codigo_barra);\n            Bitacora();\n          } else {\n            if (response.data[0].hra_entrada != null && response.data[0].hra_salida_alm != null && response.data[0].hra_entrada_alm != null && response.data[0].hra_salida == null) {\n              console.log(\"Ingreso mensaje hora Salida: 3\");\n              ActualizarDatosHraSalida(codigo_barra); //CalculoTiempoDiario(response.data[0].hra_entrada,response.data[0].hra_salida);\n\n              Bitacora();\n            } else {\n              if (response.data[0].hra_entrada != null && response.data[0].hra_salida_alm != null && response.data[0].hra_entrada_alm != null && response.data[0].hra_salida != null) {\n                console.log(\"Ya se han realizado todos los marcajes del día\"); //setMensajeApellido(\"\")\n\n                CalculoTiempoDiario(response.data[0].hra_entrada, response.data[0].hra_salida);\n                setMensajeHoraEnt(response.data[0].hra_entrada);\n                setMensajeHoraSal(response.data[0].hra_salida);\n              } else {\n                console.log(\"El empleado ha realizado un marcaje erróneo \");\n              }\n            }\n          }\n        }\n      }\n    });\n  }; //\n  //\n\n\n  const CalculoTiempoDiario = (HoraEnt, HraSal) => {\n    console.log(\"Hora E: \" + HoraEnt);\n    console.log(\"Hora S: \" + HraSal);\n    var ObtieneHraFinal = HraSal;\n    var ObtieneHraInicial = HoraEnt;\n    var HoraFinal = ObtieneHraFinal.split(\":\"),\n        HoraInicial = ObtieneHraInicial.split(\":\"),\n        TiempoMayor = new Date(),\n        TiempoMenor = new Date(); //Se establecen en arreglos los 3 parametros\n\n    TiempoMayor.setHours(HoraFinal[0], HoraFinal[1], HoraFinal[2]);\n    TiempoMenor.setHours(HoraInicial[0], HoraInicial[1], HoraInicial[2]); //Calculo de tiempo laborado diariamente\n\n    TiempoMayor.setHours(TiempoMayor.getHours() - TiempoMenor.getHours(), TiempoMayor.getMinutes() - TiempoMenor.getMinutes(), TiempoMayor.getSeconds() - TiempoMenor.getSeconds());\n    var Horas = TiempoMayor.getHours();\n    var Minutos = TiempoMayor.getMinutes();\n    var Segundos = TiempoMayor.getSeconds();\n\n    if (Horas < 10) {\n      Horas = \"0\" + Horas;\n    }\n\n    if (Minutos < 10) {\n      Minutos = \"0\" + Minutos;\n    }\n\n    if (Segundos < 10) {\n      Segundos = \"0\" + Segundos;\n    }\n\n    var HrasLaboradas = Horas + \":\" + Minutos + \":\" + Segundos;\n    console.log(\"Horas Laboradas: \" + Horas + \":\" + Minutos + \":\" + Segundos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"img_logo\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reloj\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Reloj, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nombre_emp\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [mensajeNombre, \" \", mensajeApellido]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"codigo_barra\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"codigo\",\n        ref: focusDiv,\n        onKeyDown: e => captura(e),\n        onFocus: handleFocus,\n        onChange: event => {\n          setCodigo_Barra(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 376,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"p5APKuG4L8LJJKI/IKMyLk3VWNM=\", false, function () {\n  return [useAsyncState, useAsyncState, useAsyncState, useAsyncState, useAsyncState, useAsyncState, useAsyncState, useAsyncState, useAsyncState, useAsyncState, useAsyncState];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/agarcia/marcaje/cliente/src/App.js"],"names":["React","Component","useEffect","useRef","useState","logo","Reloj","Axios","findAllByTestId","useAsyncState","initialValue","value","setValue","setter","x","Promise","resolve","App","date","Date","mensajeNombre","setMensajeNombre","mensajeApellido","setMensajeApellido","mensajeHoraEnt","setMensajeHoraEnt","mensajeHoraSal","setMensajeHoraSal","mensajeHoraEntAlm","setMensajeHoraEntAlm","mensajeHoraSalAlm","setMensajeHoraSalAlm","controlador1","setControlador1","controlador2","setControlador2","controlador3","setControlador3","controlador4","setControlador4","controlador5","setControlador5","state","setState","captura","event","key","BusquedaEmpleado","codigo_barra","setCodigo_Barra","focusDiv","focusPermanente","setInterval","current","blur","focus","clearInterval","handleFocus","target","select","HandlerOne","e","setTimeout","HandlerTwo","HandlerThree","HandlerFour","HandlerFive","window","location","href","ingresoDatos","post","hora_marcaje","toLocaleTimeString","dia_marcaje","getDate","mes_marcaje","getMonth","periodo_marcaje","getFullYear","then","console","log","toLocaleString","Bitacora","ActualizarDatosHraSalidaAlm","put","ActualizarDatosHraEntradaAlm","ActualizarDatosHraSalida","response","data","message","BuscarFechaActual","nombre","apellido","hra_entrada","hra_salida_alm","hra_entrada_alm","hra_salida","CalculoTiempoDiario","HoraEnt","HraSal","ObtieneHraFinal","ObtieneHraInicial","HoraFinal","split","HoraInicial","TiempoMayor","TiempoMenor","setHours","getHours","getMinutes","getSeconds","Horas","Minutos","Segundos","HrasLaboradas"],"mappings":"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","sourcesContent":["import React, {Component,useEffect, useRef, useState} from 'react';\r\nimport logo from './img/logo.jpg';\r\nimport Reloj from './componentes/Reloj';\r\nimport Axios from 'axios'\r\nimport './css/App.css';\r\nimport { findAllByTestId } from '@testing-library/react';\r\n\r\n\r\n//aumentar el tiempo que aparece el texto\r\n//revisar lo de los periodos para marcaje y usar ifs para saber donde ubicar donde iria el marcaje\r\n//esto ultimo hacerlo con ifs\r\n\r\n\r\n\r\nfunction useAsyncState(initialValue) {\r\n  const [value, setValue] = useState(initialValue);\r\n  const setter = x =>\r\n    new Promise(resolve => {\r\n      setValue(x);\r\n      resolve(x);\r\n    });\r\n  return [value, setter];\r\n}\r\n\r\n\r\nfunction App (){\r\n  \r\nconst date = new Date();\r\n\r\nconst[mensajeNombre, setMensajeNombre] =useAsyncState(\"\");\r\nconst[mensajeApellido, setMensajeApellido] =useAsyncState(\"\");\r\n//puede servir a futuro\r\nconst[mensajeHoraEnt, setMensajeHoraEnt] =useAsyncState(\"\");\r\nconst[mensajeHoraSal, setMensajeHoraSal] =useAsyncState(\"\");\r\nconst[mensajeHoraEntAlm, setMensajeHoraEntAlm] =useAsyncState(\"\");\r\nconst[mensajeHoraSalAlm, setMensajeHoraSalAlm] =useAsyncState(\"\");\r\n//\r\nconst[controlador1, setControlador1]=useAsyncState(\"\");\r\nconst[controlador2, setControlador2]=useAsyncState(\"\");\r\nconst[controlador3, setControlador3]=useAsyncState(\"\");\r\nconst[controlador4, setControlador4]=useAsyncState(\"\");\r\nconst[controlador5, setControlador5]=useAsyncState(\"\");\r\n\r\n\r\n  //////\r\n  const [state, setState] = useState('');\r\n\r\n  const captura = (event) => {  \r\n      \r\n    //condicion para la busqueda e ingreso de datos cuando el lector manda la señal\r\n    if(event.key==='Enter'){\r\n    //se cambia el estado al nombre de la tecla que es presionada, en este caso es la tecla enter\r\n      setState(event.key);\r\n      //se llama a la funcion \r\n      BusquedaEmpleado();\r\n    }\r\n  };\r\n////////\r\n\r\n//se declaran variables para envío de datos del MVC\r\nconst [codigo_barra, setCodigo_Barra] = useState(\"\");\r\n\r\n \r\n//hace focus al texbox que obtendrá la variable del codigo barras\r\nconst focusDiv = useRef(null);\r\nuseEffect(()=>{\r\n  const focusPermanente = setInterval (()=>{\r\n    //selecciona el texto del input \r\n    focusDiv.current.blur();\r\n    if(focusDiv.current)focusDiv.current.focus();\r\n  },500);\r\n  return()=>clearInterval(focusPermanente);\r\n},[focusDiv]);\r\n\r\n\r\n//seleccionar todo el contenido \r\nconst handleFocus = (event) => event.target.select();\r\n\r\nconst HandlerOne=(e)=>{\r\n  // e.preventDefault();\r\n   setControlador1('Inicia Request al Backend');\r\n setTimeout(()=>{\r\n   setControlador1('1')\r\n },500)\r\n }\r\n useEffect(()=>{\r\n  if(controlador1 === '1'){\r\n    \r\n    \r\n  }\r\n},[controlador1])\r\n\r\nconst HandlerTwo=(e)=>{\r\n  // e.preventDefault();\r\n   setControlador2('Inicia Request al Backend');\r\n setTimeout(()=>{\r\n   setControlador2('2')\r\n },500)\r\n }\r\n useEffect(()=>{\r\n   if(controlador2 === '2'){\r\n    \r\n     \r\n   }\r\n },[controlador2])\r\n\r\n\r\n const HandlerThree=(e)=>{\r\n  //e.preventDefault();\r\n  setControlador3('Inicia Request al Backend');\r\nsetTimeout(()=>{\r\n  setControlador3('3')\r\n\r\n},500)\r\n}\r\nuseEffect(()=>{\r\n  if(controlador3 === '3'){\r\n    \r\n  \r\n    \r\n  }\r\n},[controlador3])\r\n\r\n\r\nconst HandlerFour=(e)=>{\r\n // e.preventDefault();\r\n  setControlador4('Inicia Request al Backend');\r\nsetTimeout(()=>{\r\n  setControlador4('4')\r\n},500)\r\n}\r\nuseEffect(()=>{\r\n  if(controlador4 === '4'){\r\n    \r\n\r\n  }\r\n},[controlador4])\r\n\r\nconst HandlerFive=(e)=>{\r\n  // e.preventDefault();\r\n   setControlador5('Inicia Request al Backend');\r\n setTimeout(()=>{\r\n   setControlador5('5')\r\n },3000)\r\n }\r\n useEffect(()=>{\r\n   if(controlador5 === '5'){\r\n    //document.getElementById(\"myForm\").reset();\r\n\r\n     window.location.href = window.location.href;\r\n   }\r\n },[controlador5])\r\n\r\n\r\n\r\n\r\n//insertar datos\r\nconst ingresoDatos =()=>{\r\n  Axios.post('http://localhost:3001/DatosMarcajeEmpleado', {    \r\n\r\n    \r\n    codigo_barra: codigo_barra,\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n    //se llama a la fecha \r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n}).then(()=>{\r\n \r\n\r\n  \r\nconsole.log(date.toLocaleString());\r\nconsole.log(\"conexion exitosa\");\r\nconsole.log(\"hora:\");\r\nconsole.log(date.toLocaleTimeString());\r\nconsole.log(date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear());\r\n//refresca la pagina para liberar el cargado de memoria de las variables usadas\r\n//window.location.href = window.location.href;\r\n  });\r\n};\r\n//\r\n\r\n\r\n//insertar datos\r\nconst Bitacora =()=>{\r\n  Axios.post('http://localhost:3001/bitacora', {    \r\n    codigo_barra: codigo_barra,\r\n    //se llama a la fecha y obtiene solamente la hora\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n}).then(()=>{\r\n\r\n  });\r\n};\r\n//\r\n\r\n\r\n//\r\nconst ActualizarDatosHraSalidaAlm = (codigo_barra)=>{\r\n\r\n  Axios.put('http://localhost:3001/actualizarHraSalidaAlm',{\r\n    codigo_barra:codigo_barra,\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n  \r\n  }).then(()=>{\r\n\r\n    //window.location.href = window.location.href;\r\n    \r\n  });  \r\n};\r\n\r\nconst ActualizarDatosHraEntradaAlm = (codigo_barra)=>{\r\n\r\n  Axios.put('http://localhost:3001/actualizarHraEntradaAlm',{\r\n    codigo_barra:codigo_barra,\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n\r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n\r\n  }).then(()=>{\r\n    //window.location.href = window.location.href;\r\n    \r\n\r\n  \r\n  });  \r\n};\r\n\r\nconst ActualizarDatosHraSalida = (codigo_barra)=>{\r\n\r\n  Axios.put('http://localhost:3001/actualizarHraSalida',{\r\n    codigo_barra:codigo_barra,\r\n    hora_marcaje:date.toLocaleTimeString(),\r\n\r\n    dia_marcaje: date.getDate(),\r\n    mes_marcaje: (date.getMonth()+1),\r\n    periodo_marcaje: date.getFullYear(),\r\n\r\n  }).then(()=>{\r\n   // window.location.href = window.location.href;\r\n   BusquedaEmpleado();\r\n  });  \r\n};\r\n//\r\n\r\n//buscar datos\r\nconst BusquedaEmpleado = () => {\r\n  Axios.post('http://localhost:3001/buscarEmpleado',{\r\n    codigo_barra:codigo_barra,\r\n\r\n}).then((response)=>{\r\n\r\n    if(response.data.message){\r\n        //muestra mensaje de Empleado no encontrado\r\n        setMensajeNombre(response.data.message)\r\n        setMensajeApellido(\"\")\r\n      \r\n       }else{\r\n\r\n        BuscarFechaActual();\r\n        setMensajeNombre(response.data[0].nombre)\r\n        setMensajeApellido(response.data[0].apellido)\r\n       }\r\n\r\n       });\r\n    };\r\n//\r\n\r\n//buscar datos\r\nconst BuscarFechaActual = () => {\r\n    Axios.post('http://localhost:3001/buscarFecha',{\r\n        codigo_barra:codigo_barra,\r\n        dia_marcaje: date.getDate(),\r\n        mes_marcaje: (date.getMonth()+1),\r\n        periodo_marcaje: date.getFullYear(),\r\n\r\n  }).then((response)=>{\r\n  \r\n     \r\n\r\n    if(response.data.message){\r\n    \r\n        //Se inserta Hora Entrada\r\n        console.log(\"Ingreso Marcaje: 0\");\r\n        ingresoDatos(codigo_barra);\r\n        \r\n        Bitacora();\r\n        \r\n\r\n       }else{\r\n\r\n        \r\n           if (response.data[0].hra_entrada != null && response.data[0].hra_salida_alm == null && response.data[0].hra_entrada_alm == null && response.data[0].hra_salida == null){\r\n         console.log(\"Ingreso mensaje hora Salida Almuerzo: 1\");\r\n         ActualizarDatosHraSalidaAlm(codigo_barra);\r\n        \r\n             Bitacora();\r\n         }else{\r\n           if(response.data[0].hra_entrada != null && response.data[0].hra_salida_alm != null && response.data[0].hra_entrada_alm == null && response.data[0].hra_salida == null){\r\n             console.log(\"Ingreso mensaje hora Entrada Almuerzo: 2\");\r\n             ActualizarDatosHraEntradaAlm(codigo_barra);\r\n           \r\n           \r\n             Bitacora();\r\n         }else{\r\n           if(response.data[0].hra_entrada != null && response.data[0].hra_salida_alm != null && response.data[0].hra_entrada_alm != null && response.data[0].hra_salida == null){\r\n             console.log(\"Ingreso mensaje hora Salida: 3\");\r\n             ActualizarDatosHraSalida(codigo_barra);\r\n      \r\n             \r\n             //CalculoTiempoDiario(response.data[0].hra_entrada,response.data[0].hra_salida);\r\n             Bitacora();\r\n             \r\n             }else{\r\n               if(response.data[0].hra_entrada != null && response.data[0].hra_salida_alm != null && response.data[0].hra_entrada_alm != null && response.data[0].hra_salida != null){\r\n                 \r\n                 console.log(\"Ya se han realizado todos los marcajes del día\")\r\n                 //setMensajeApellido(\"\")\r\n                \r\n                 CalculoTiempoDiario(response.data[0].hra_entrada,response.data[0].hra_salida);\r\n                 setMensajeHoraEnt(response.data[0].hra_entrada);\r\n                 setMensajeHoraSal(response.data[0].hra_salida);\r\n            \r\n               \r\n               }else{\r\n                 console.log(\"El empleado ha realizado un marcaje erróneo \");\r\n                 \r\n               }\r\n             }\r\n           }\r\n         }\r\n         \r\n          }\r\n        \r\n    });\r\n  };\r\n  //\r\n\r\n//\r\nconst CalculoTiempoDiario =(HoraEnt, HraSal)=>{\r\n  console.log(\"Hora E: \" + HoraEnt);\r\n  console.log(\"Hora S: \" + HraSal);\r\n\r\n  var ObtieneHraFinal = (HraSal);\r\n  var ObtieneHraInicial = (HoraEnt);\r\n\r\n  var HoraFinal = (ObtieneHraFinal).split(\":\"),\r\n      HoraInicial = (ObtieneHraInicial).split(\":\"),\r\n      TiempoMayor = new Date(),\r\n      TiempoMenor = new Date();\r\n\r\n//Se establecen en arreglos los 3 parametros\r\nTiempoMayor.setHours(HoraFinal[0], HoraFinal[1], HoraFinal[2]);\r\nTiempoMenor.setHours(HoraInicial[0], HoraInicial[1], HoraInicial[2]);\r\n//Calculo de tiempo laborado diariamente\r\nTiempoMayor.setHours(TiempoMayor.getHours() - TiempoMenor.getHours(), TiempoMayor.getMinutes() - TiempoMenor.getMinutes(), TiempoMayor.getSeconds() - TiempoMenor.getSeconds());\r\n\r\nvar Horas =TiempoMayor.getHours();\r\nvar Minutos =TiempoMayor.getMinutes();\r\nvar Segundos =TiempoMayor.getSeconds();\r\nif (Horas<10){Horas=\"0\"+Horas;}\r\nif (Minutos<10){Minutos=\"0\"+Minutos;}\r\nif (Segundos<10){Segundos=\"0\"+Segundos;}\r\nvar HrasLaboradas = Horas + \":\"+ Minutos + \":\"+ Segundos;\r\nconsole.log(\"Horas Laboradas: \" + Horas + \":\"+ Minutos + \":\"+ Segundos);\r\n\r\n}\r\n\r\n  return(\r\n    <main>\r\n    <div className =\"img_logo\">\r\n      <img src={logo}/>\r\n    </div>\r\n    <div className=\"reloj\">\r\n      <div>\r\n      <Reloj></Reloj>\r\n      </div>\r\n    </div>\r\n    <div className=\"nombre_emp\">\r\n    <h1>{mensajeNombre} {mensajeApellido}</h1>\r\n    </div>\r\n      <div className=\"codigo_barra\">\r\n        <input type=\"text\" placeholder='codigo' ref={focusDiv}   onKeyDown={(e) => captura(e)}  onFocus={handleFocus} onChange={(event) => {setCodigo_Barra(event.target.value);}}/>\r\n      </div>  \r\n    </main>\r\n  )\r\n}\r\n\r\n  export default App;"]},"metadata":{},"sourceType":"module"}